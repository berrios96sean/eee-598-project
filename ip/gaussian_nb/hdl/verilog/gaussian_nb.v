// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gaussian_nb_gaussian_nb,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu5eg-sfvc784-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.929000,HLS_SYN_LAT=18,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=4218,HLS_SYN_LUT=5882,HLS_VERSION=2022_1}" *)

module gaussian_nb (
        ap_clk,
        ap_rst_n,
        in_stream_TDATA,
        in_stream_TVALID,
        in_stream_TREADY,
        in_stream_TKEEP,
        in_stream_TSTRB,
        in_stream_TLAST,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        out_stream_TKEEP,
        out_stream_TSTRB,
        out_stream_TLAST
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst_n;
input  [15:0] in_stream_TDATA;
input   in_stream_TVALID;
output   in_stream_TREADY;
input  [1:0] in_stream_TKEEP;
input  [1:0] in_stream_TSTRB;
input  [0:0] in_stream_TLAST;
output  [15:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
output  [1:0] out_stream_TKEEP;
output  [1:0] out_stream_TSTRB;
output  [0:0] out_stream_TLAST;

 reg    ap_rst_n_inv;
reg    in_stream_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    out_stream_TDATA_blk_n;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
reg   [15:0] tmp_data_V_1_reg_2685;
wire  signed [15:0] diff_fu_396_p2;
reg  signed [15:0] diff_reg_2690;
wire  signed [15:0] diff_1_fu_406_p2;
reg  signed [15:0] diff_1_reg_2700;
wire  signed [15:0] diff_10_fu_416_p2;
reg  signed [15:0] diff_10_reg_2710;
wire  signed [15:0] diff_11_fu_426_p2;
reg  signed [15:0] diff_11_reg_2720;
wire  signed [15:0] diff_2_fu_442_p2;
reg  signed [15:0] diff_2_reg_2730;
wire  signed [15:0] diff_12_fu_452_p2;
reg  signed [15:0] diff_12_reg_2740;
wire  signed [15:0] diff_3_fu_468_p2;
reg  signed [15:0] diff_3_reg_2750;
wire  signed [15:0] diff_13_fu_478_p2;
reg  signed [15:0] diff_13_reg_2760;
wire  signed [15:0] diff_4_fu_548_p2;
reg  signed [15:0] diff_4_reg_2770;
wire  signed [15:0] diff_14_fu_612_p2;
reg  signed [15:0] diff_14_reg_2780;
wire  signed [15:0] diff_5_fu_655_p2;
reg  signed [15:0] diff_5_reg_2790;
wire  signed [15:0] diff_15_fu_692_p2;
reg  signed [15:0] diff_15_reg_2800;
wire  signed [15:0] diff_6_fu_735_p2;
reg  signed [15:0] diff_6_reg_2810;
wire  signed [15:0] diff_16_fu_772_p2;
reg  signed [15:0] diff_16_reg_2820;
wire  signed [15:0] X_V_10_fu_782_p2;
reg  signed [15:0] X_V_10_reg_2830;
wire   [31:0] r_V_2_fu_802_p3;
reg  signed [31:0] r_V_2_reg_2835;
wire   [31:0] r_V_7_fu_824_p3;
reg  signed [31:0] r_V_7_reg_2840;
wire  signed [15:0] diff_7_fu_859_p2;
reg  signed [15:0] diff_7_reg_2845;
wire   [31:0] r_V_61_fu_917_p3;
reg  signed [31:0] r_V_61_reg_2855;
wire   [31:0] r_V_66_fu_973_p3;
reg  signed [31:0] r_V_66_reg_2860;
wire  signed [15:0] X_V_11_fu_1012_p2;
reg  signed [15:0] X_V_11_reg_2870;
reg   [31:0] tmp_s_reg_2876;
reg  signed [31:0] prob_V_reg_2882;
wire   [31:0] r_V_13_fu_1070_p3;
reg  signed [31:0] r_V_13_reg_2887;
wire  signed [15:0] diff_8_fu_1105_p2;
reg  signed [15:0] diff_8_reg_2892;
reg   [31:0] tmp_21_reg_2902;
reg  signed [31:0] prob_V_8_reg_2908;
wire   [31:0] r_V_72_fu_1167_p3;
reg  signed [31:0] r_V_72_reg_2913;
reg  signed [31:0] probs_V_21_reg_2918;
reg  signed [31:0] prob_V_1_reg_2923;
wire   [31:0] r_V_19_fu_1302_p3;
reg  signed [31:0] r_V_19_reg_2928;
wire  signed [15:0] diff_9_fu_1337_p2;
reg  signed [15:0] diff_9_reg_2933;
reg  signed [31:0] probs_V_30_reg_2943;
reg  signed [31:0] prob_V_9_reg_2948;
wire   [31:0] r_V_78_fu_1441_p3;
reg  signed [31:0] r_V_78_reg_2953;
wire  signed [15:0] diff_19_fu_1476_p2;
reg  signed [15:0] diff_19_reg_2958;
reg  signed [31:0] probs_V_22_reg_2968;
wire    ap_CS_fsm_state11;
reg  signed [31:0] prob_V_2_reg_2973;
wire   [31:0] r_V_25_fu_1541_p3;
reg  signed [31:0] r_V_25_reg_2978;
reg  signed [31:0] probs_V_31_reg_2983;
reg  signed [31:0] prob_V_10_reg_2988;
wire   [31:0] r_V_84_fu_1631_p3;
reg  signed [31:0] r_V_84_reg_2993;
wire   [45:0] r_V_106_fu_1669_p2;
reg  signed [45:0] r_V_106_reg_2998;
reg  signed [31:0] probs_V_23_reg_3003;
wire    ap_CS_fsm_state12;
reg  signed [31:0] prob_V_3_reg_3008;
wire   [31:0] r_V_31_fu_1730_p3;
reg  signed [31:0] r_V_31_reg_3013;
reg  signed [31:0] probs_V_32_reg_3018;
reg  signed [31:0] prob_V_11_reg_3023;
wire   [31:0] r_V_90_fu_1820_p3;
reg  signed [31:0] r_V_90_reg_3028;
reg  signed [31:0] probs_V_24_reg_3033;
wire    ap_CS_fsm_state13;
reg  signed [31:0] prob_V_4_reg_3038;
wire   [31:0] r_V_37_fu_1906_p3;
reg  signed [31:0] r_V_37_reg_3043;
reg  signed [31:0] probs_V_33_reg_3048;
reg  signed [31:0] prob_V_12_reg_3053;
wire   [31:0] r_V_96_fu_1996_p3;
reg  signed [31:0] r_V_96_reg_3058;
reg  signed [31:0] probs_V_25_reg_3063;
wire    ap_CS_fsm_state14;
reg  signed [31:0] prob_V_5_reg_3068;
wire   [31:0] r_V_43_fu_2086_p3;
reg  signed [31:0] r_V_43_reg_3073;
reg  signed [31:0] probs_V_34_reg_3078;
reg  signed [31:0] prob_V_13_reg_3083;
wire   [31:0] r_V_102_fu_2149_p3;
reg  signed [31:0] r_V_102_reg_3088;
reg  signed [31:0] probs_V_26_reg_3093;
wire    ap_CS_fsm_state15;
reg  signed [27:0] trunc_ln864_5_reg_3098;
wire   [31:0] r_V_49_fu_2212_p3;
reg  signed [31:0] r_V_49_reg_3103;
reg  signed [31:0] probs_V_35_reg_3108;
reg  signed [26:0] trunc_ln864_s_reg_3113;
wire   [31:0] r_V_108_fu_2275_p3;
reg  signed [31:0] r_V_108_reg_3118;
reg  signed [31:0] probs_V_27_reg_3123;
wire    ap_CS_fsm_state16;
reg  signed [31:0] prob_V_6_reg_3128;
wire   [31:0] r_V_55_fu_2338_p3;
reg  signed [31:0] r_V_55_reg_3133;
reg  signed [31:0] probs_V_36_reg_3138;
reg  signed [25:0] trunc_ln864_1_reg_3143;
wire   [31:0] r_V_114_fu_2401_p3;
reg  signed [31:0] r_V_114_reg_3148;
reg  signed [31:0] probs_V_28_reg_3153;
wire    ap_CS_fsm_state17;
reg  signed [31:0] prob_V_7_reg_3158;
reg  signed [31:0] probs_V_37_reg_3163;
reg  signed [31:0] prob_V_14_reg_3168;
wire    grp_exp_32_16_s_fu_269_ap_start;
wire    grp_exp_32_16_s_fu_269_ap_done;
wire    grp_exp_32_16_s_fu_269_ap_idle;
wire    grp_exp_32_16_s_fu_269_ap_ready;
reg    grp_exp_32_16_s_fu_269_ap_ce;
reg   [31:0] grp_exp_32_16_s_fu_269_x;
wire   [31:0] grp_exp_32_16_s_fu_269_ap_return;
wire    grp_exp_32_16_s_fu_280_ap_start;
wire    grp_exp_32_16_s_fu_280_ap_done;
wire    grp_exp_32_16_s_fu_280_ap_idle;
wire    grp_exp_32_16_s_fu_280_ap_ready;
reg    grp_exp_32_16_s_fu_280_ap_ce;
reg   [31:0] grp_exp_32_16_s_fu_280_x;
wire   [31:0] grp_exp_32_16_s_fu_280_ap_return;
wire    grp_exp_32_16_s_fu_291_ap_start;
wire    grp_exp_32_16_s_fu_291_ap_done;
wire    grp_exp_32_16_s_fu_291_ap_idle;
wire    grp_exp_32_16_s_fu_291_ap_ready;
reg    grp_exp_32_16_s_fu_291_ap_ce;
wire   [31:0] grp_exp_32_16_s_fu_291_x;
wire   [31:0] grp_exp_32_16_s_fu_291_ap_return;
wire    grp_exp_32_16_s_fu_302_ap_start;
wire    grp_exp_32_16_s_fu_302_ap_done;
wire    grp_exp_32_16_s_fu_302_ap_idle;
wire    grp_exp_32_16_s_fu_302_ap_ready;
reg    grp_exp_32_16_s_fu_302_ap_ce;
wire   [31:0] grp_exp_32_16_s_fu_302_x;
wire   [31:0] grp_exp_32_16_s_fu_302_ap_return;
reg    grp_exp_32_16_s_fu_269_ap_start_reg;
reg   [18:0] ap_NS_fsm;
wire    ap_NS_fsm_state5;
wire    ap_NS_fsm_state6;
wire    ap_NS_fsm_state7;
wire    ap_NS_fsm_state8;
wire    ap_NS_fsm_state9;
wire    ap_NS_fsm_state10;
wire    ap_NS_fsm_state11;
wire    ap_NS_fsm_state12;
wire    ap_NS_fsm_state13;
wire  signed [31:0] sext_ln864_fu_516_p1;
wire  signed [31:0] sext_ln864_2_fu_650_p1;
wire  signed [31:0] sext_ln864_3_fu_730_p1;
wire  signed [31:0] sext_ln864_4_fu_854_p1;
wire  signed [31:0] sext_ln864_5_fu_1100_p1;
wire  signed [31:0] sext_ln864_6_fu_1332_p1;
wire  signed [31:0] sext_ln864_7_fu_1571_p1;
wire  signed [31:0] sext_ln864_8_fu_1760_p1;
wire  signed [31:0] sext_ln864_9_fu_1936_p1;
reg    grp_exp_32_16_s_fu_280_ap_start_reg;
wire  signed [31:0] sext_ln864_1_fu_543_p1;
wire  signed [31:0] sext_ln864_12_fu_687_p1;
wire  signed [31:0] sext_ln864_13_fu_767_p1;
wire  signed [31:0] sext_ln864_14_fu_1003_p1;
wire  signed [31:0] sext_ln864_15_fu_1197_p1;
wire  signed [31:0] sext_ln864_16_fu_1471_p1;
wire  signed [31:0] sext_ln864_17_fu_1661_p1;
wire  signed [31:0] sext_ln864_18_fu_2026_p1;
reg    grp_exp_32_16_s_fu_291_ap_start_reg;
reg    grp_exp_32_16_s_fu_302_ap_start_reg;
wire   [31:0] grp_fu_325_p2;
wire   [31:0] grp_fu_359_p2;
wire   [15:0] X_V_fu_385_p2;
wire   [15:0] X_V_1_fu_390_p2;
wire   [15:0] X_V_2_fu_436_p2;
wire   [15:0] X_V_3_fu_462_p2;
wire  signed [41:0] grp_fu_2552_p2;
wire   [55:0] r_V_1_fu_500_p2;
wire   [27:0] exponent_V_fu_506_p4;
wire  signed [39:0] grp_fu_2559_p2;
wire   [53:0] r_V_6_fu_527_p2;
wire   [25:0] exponent_V_1_fu_533_p4;
wire   [15:0] X_V_4_fu_488_p2;
wire  signed [35:0] grp_fu_2566_p2;
wire   [50:0] r_V_60_fu_564_p2;
wire   [22:0] exponent_V_10_fu_570_p4;
wire  signed [35:0] grp_fu_2573_p2;
wire   [50:0] r_V_65_fu_591_p2;
wire   [22:0] exponent_V_11_fu_597_p4;
wire  signed [36:0] grp_fu_2580_p2;
wire   [50:0] r_V_12_fu_634_p2;
wire   [22:0] exponent_V_2_fu_640_p4;
wire   [15:0] X_V_5_fu_622_p2;
wire  signed [36:0] grp_fu_2587_p2;
wire   [50:0] r_V_71_fu_671_p2;
wire   [22:0] exponent_V_12_fu_677_p4;
wire  signed [36:0] grp_fu_2594_p2;
wire   [50:0] r_V_18_fu_714_p2;
wire   [22:0] exponent_V_3_fu_720_p4;
wire   [15:0] X_V_6_fu_702_p2;
wire  signed [35:0] grp_fu_2601_p2;
wire   [50:0] r_V_77_fu_751_p2;
wire   [22:0] exponent_V_13_fu_757_p4;
wire   [30:0] grp_fu_331_p4;
wire   [31:0] zext_ln1349_fu_788_p1;
wire   [30:0] grp_fu_341_p4;
wire   [0:0] grp_fu_317_p3;
wire   [31:0] sub_ln1349_1_fu_792_p2;
wire   [31:0] zext_ln1349_1_fu_798_p1;
wire   [30:0] grp_fu_365_p4;
wire   [31:0] zext_ln1349_2_fu_810_p1;
wire   [30:0] grp_fu_375_p4;
wire   [0:0] grp_fu_351_p3;
wire   [31:0] sub_ln1349_3_fu_814_p2;
wire   [31:0] zext_ln1349_3_fu_820_p1;
wire  signed [38:0] grp_fu_2608_p2;
wire   [52:0] r_V_24_fu_838_p2;
wire   [24:0] exponent_V_4_fu_844_p4;
wire   [31:0] sub_ln1349_20_fu_877_p2;
wire   [30:0] lshr_ln1349_20_fu_883_p4;
wire   [31:0] zext_ln1349_20_fu_893_p1;
wire   [30:0] lshr_ln1349_21_fu_903_p4;
wire   [0:0] tmp_20_fu_869_p3;
wire   [31:0] sub_ln1349_21_fu_897_p2;
wire   [31:0] zext_ln1349_21_fu_913_p1;
wire   [31:0] sub_ln1349_22_fu_933_p2;
wire   [30:0] lshr_ln1349_22_fu_939_p4;
wire   [31:0] zext_ln1349_22_fu_949_p1;
wire   [30:0] lshr_ln1349_23_fu_959_p4;
wire   [0:0] tmp_22_fu_925_p3;
wire   [31:0] sub_ln1349_23_fu_953_p2;
wire   [31:0] zext_ln1349_23_fu_969_p1;
wire  signed [38:0] grp_fu_2615_p2;
wire   [52:0] r_V_83_fu_987_p2;
wire   [24:0] exponent_V_14_fu_993_p4;
wire   [26:0] r_V_3_fu_1021_p1;
wire   [55:0] r_V_3_fu_1021_p2;
wire   [26:0] r_V_8_fu_1040_p1;
wire   [55:0] r_V_8_fu_1040_p2;
wire   [31:0] zext_ln1349_4_fu_1056_p1;
wire   [31:0] sub_ln1349_5_fu_1060_p2;
wire   [31:0] zext_ln1349_5_fu_1066_p1;
wire  signed [35:0] grp_fu_2622_p2;
wire   [50:0] r_V_30_fu_1084_p2;
wire   [22:0] exponent_V_5_fu_1090_p4;
wire   [27:0] r_V_62_fu_1118_p1;
wire   [55:0] r_V_62_fu_1118_p2;
wire   [28:0] r_V_67_fu_1137_p1;
wire   [55:0] r_V_67_fu_1137_p2;
wire   [31:0] zext_ln1349_24_fu_1153_p1;
wire   [31:0] sub_ln1349_25_fu_1157_p2;
wire   [31:0] zext_ln1349_25_fu_1163_p1;
wire  signed [35:0] grp_fu_2629_p2;
wire   [50:0] r_V_89_fu_1181_p2;
wire   [22:0] exponent_V_15_fu_1187_p4;
wire   [46:0] shl_ln_fu_1208_p3;
wire   [34:0] shl_ln1319_1_fu_1219_p3;
wire  signed [47:0] sext_ln1319_2_fu_1215_p1;
wire  signed [47:0] sext_ln1319_3_fu_1226_p1;
wire   [47:0] r_V_4_fu_1230_p2;
wire  signed [31:0] probs_V_20_fu_1236_p4;
wire   [47:0] r_V_10_fu_1253_p2;
wire   [27:0] r_V_14_fu_1272_p1;
wire   [55:0] r_V_14_fu_1272_p2;
wire   [31:0] zext_ln1349_6_fu_1288_p1;
wire   [31:0] sub_ln1349_7_fu_1292_p2;
wire   [31:0] zext_ln1349_7_fu_1298_p1;
wire  signed [39:0] grp_fu_2636_p2;
wire   [53:0] r_V_36_fu_1316_p2;
wire   [25:0] exponent_V_6_fu_1322_p4;
wire   [15:0] X_V_9_fu_1202_p2;
wire   [46:0] shl_ln1319_2_fu_1347_p3;
wire   [33:0] shl_ln1319_3_fu_1358_p3;
wire  signed [47:0] sext_ln1319_33_fu_1354_p1;
wire  signed [47:0] sext_ln1319_34_fu_1365_p1;
wire   [47:0] r_V_63_fu_1369_p2;
wire  signed [31:0] probs_V_29_fu_1375_p4;
wire   [47:0] r_V_69_fu_1392_p2;
wire   [27:0] r_V_73_fu_1411_p1;
wire   [55:0] r_V_73_fu_1411_p2;
wire   [31:0] zext_ln1349_26_fu_1427_p1;
wire   [31:0] sub_ln1349_27_fu_1431_p2;
wire   [31:0] zext_ln1349_27_fu_1437_p1;
wire  signed [36:0] grp_fu_2643_p2;
wire   [50:0] r_V_95_fu_1455_p2;
wire   [22:0] exponent_V_16_fu_1461_p4;
wire   [47:0] r_V_16_fu_1492_p2;
wire   [27:0] r_V_20_fu_1511_p1;
wire   [55:0] r_V_20_fu_1511_p2;
wire   [31:0] zext_ln1349_8_fu_1527_p1;
wire   [31:0] sub_ln1349_9_fu_1531_p2;
wire   [31:0] zext_ln1349_9_fu_1537_p1;
wire  signed [40:0] grp_fu_2650_p2;
wire   [54:0] r_V_42_fu_1555_p2;
wire   [26:0] exponent_V_7_fu_1561_p4;
wire   [47:0] r_V_75_fu_1582_p2;
wire   [27:0] r_V_79_fu_1601_p1;
wire   [55:0] r_V_79_fu_1601_p2;
wire   [31:0] zext_ln1349_28_fu_1617_p1;
wire   [31:0] sub_ln1349_29_fu_1621_p2;
wire   [31:0] zext_ln1349_29_fu_1627_p1;
wire  signed [41:0] grp_fu_2657_p2;
wire   [55:0] r_V_101_fu_1645_p2;
wire   [27:0] exponent_V_17_fu_1651_p4;
wire  signed [29:0] r_V_106_fu_1669_p1;
wire   [47:0] r_V_22_fu_1681_p2;
wire   [26:0] r_V_26_fu_1700_p1;
wire   [55:0] r_V_26_fu_1700_p2;
wire   [31:0] zext_ln1349_10_fu_1716_p1;
wire   [31:0] sub_ln1349_11_fu_1720_p2;
wire   [31:0] zext_ln1349_11_fu_1726_p1;
wire  signed [40:0] grp_fu_2664_p2;
wire   [54:0] r_V_48_fu_1744_p2;
wire   [26:0] exponent_V_8_fu_1750_p4;
wire   [47:0] r_V_81_fu_1771_p2;
wire   [26:0] r_V_85_fu_1790_p1;
wire   [55:0] r_V_85_fu_1790_p2;
wire   [31:0] zext_ln1349_30_fu_1806_p1;
wire   [31:0] sub_ln1349_31_fu_1810_p2;
wire   [31:0] zext_ln1349_31_fu_1816_p1;
wire   [59:0] r_V_107_fu_1834_p2;
wire   [47:0] r_V_28_fu_1857_p2;
wire   [27:0] r_V_32_fu_1876_p1;
wire   [55:0] r_V_32_fu_1876_p2;
wire   [31:0] zext_ln1349_12_fu_1892_p1;
wire   [31:0] sub_ln1349_13_fu_1896_p2;
wire   [31:0] zext_ln1349_13_fu_1902_p1;
wire  signed [35:0] grp_fu_2671_p2;
wire   [50:0] r_V_54_fu_1920_p2;
wire   [22:0] exponent_V_9_fu_1926_p4;
wire   [47:0] r_V_87_fu_1947_p2;
wire   [27:0] r_V_91_fu_1966_p1;
wire   [55:0] r_V_91_fu_1966_p2;
wire   [31:0] zext_ln1349_32_fu_1982_p1;
wire   [31:0] sub_ln1349_33_fu_1986_p2;
wire   [31:0] zext_ln1349_33_fu_1992_p1;
wire  signed [34:0] grp_fu_2678_p2;
wire   [49:0] r_V_113_fu_2010_p2;
wire   [21:0] exponent_V_19_fu_2016_p4;
wire   [47:0] r_V_34_fu_2037_p2;
wire   [25:0] r_V_38_fu_2056_p1;
wire   [55:0] r_V_38_fu_2056_p2;
wire   [31:0] zext_ln1349_14_fu_2072_p1;
wire   [31:0] sub_ln1349_15_fu_2076_p2;
wire   [31:0] zext_ln1349_15_fu_2082_p1;
wire   [47:0] r_V_93_fu_2100_p2;
wire   [27:0] r_V_97_fu_2119_p1;
wire   [55:0] r_V_97_fu_2119_p2;
wire   [31:0] zext_ln1349_34_fu_2135_p1;
wire   [31:0] sub_ln1349_35_fu_2139_p2;
wire   [31:0] zext_ln1349_35_fu_2145_p1;
wire   [47:0] r_V_40_fu_2163_p2;
wire   [20:0] r_V_44_fu_2182_p1;
wire   [51:0] r_V_44_fu_2182_p2;
wire   [31:0] zext_ln1349_16_fu_2198_p1;
wire   [31:0] sub_ln1349_17_fu_2202_p2;
wire   [31:0] zext_ln1349_17_fu_2208_p1;
wire   [47:0] r_V_99_fu_2226_p2;
wire   [19:0] r_V_103_fu_2245_p1;
wire   [50:0] r_V_103_fu_2245_p2;
wire   [31:0] zext_ln1349_36_fu_2261_p1;
wire   [31:0] sub_ln1349_37_fu_2265_p2;
wire   [31:0] zext_ln1349_37_fu_2271_p1;
wire   [47:0] r_V_46_fu_2289_p2;
wire   [25:0] r_V_50_fu_2308_p1;
wire   [55:0] r_V_50_fu_2308_p2;
wire   [31:0] zext_ln1349_18_fu_2324_p1;
wire   [31:0] sub_ln1349_19_fu_2328_p2;
wire   [31:0] zext_ln1349_19_fu_2334_p1;
wire   [47:0] r_V_105_fu_2352_p2;
wire   [17:0] r_V_109_fu_2371_p1;
wire   [49:0] r_V_109_fu_2371_p2;
wire   [31:0] zext_ln1349_38_fu_2387_p1;
wire   [31:0] sub_ln1349_39_fu_2391_p2;
wire   [31:0] zext_ln1349_39_fu_2397_p1;
wire   [47:0] r_V_52_fu_2415_p2;
wire   [27:0] r_V_56_fu_2434_p1;
wire   [55:0] r_V_56_fu_2434_p2;
wire   [47:0] r_V_111_fu_2456_p2;
wire   [28:0] r_V_115_fu_2475_p1;
wire   [55:0] r_V_115_fu_2475_p2;
wire   [47:0] r_V_58_fu_2497_p2;
wire   [47:0] r_V_117_fu_2519_p2;
wire   [31:0] probs_V_19_fu_2525_p4;
wire   [31:0] probs_V_fu_2503_p4;
wire   [0:0] icmp_ln260_fu_2535_p2;
wire   [0:0] out_pkt_data_V_fu_2541_p2;
wire  signed [25:0] grp_fu_2552_p1;
wire  signed [23:0] grp_fu_2559_p1;
wire  signed [19:0] grp_fu_2566_p1;
wire  signed [19:0] grp_fu_2573_p1;
wire  signed [20:0] grp_fu_2580_p1;
wire  signed [20:0] grp_fu_2587_p1;
wire  signed [20:0] grp_fu_2594_p1;
wire  signed [19:0] grp_fu_2601_p1;
wire  signed [22:0] grp_fu_2608_p1;
wire  signed [22:0] grp_fu_2615_p1;
wire  signed [19:0] grp_fu_2622_p1;
wire  signed [19:0] grp_fu_2629_p1;
wire  signed [23:0] grp_fu_2636_p1;
wire  signed [20:0] grp_fu_2643_p1;
wire  signed [24:0] grp_fu_2650_p1;
wire  signed [25:0] grp_fu_2657_p1;
wire  signed [24:0] grp_fu_2664_p1;
wire  signed [19:0] grp_fu_2671_p1;
wire  signed [18:0] grp_fu_2678_p1;
reg    grp_fu_2552_ce;
reg    grp_fu_2559_ce;
reg    grp_fu_2566_ce;
reg    grp_fu_2573_ce;
reg    grp_fu_2580_ce;
reg    grp_fu_2587_ce;
reg    grp_fu_2594_ce;
reg    grp_fu_2601_ce;
reg    grp_fu_2608_ce;
reg    grp_fu_2615_ce;
reg    grp_fu_2622_ce;
reg    grp_fu_2629_ce;
reg    grp_fu_2636_ce;
reg    grp_fu_2643_ce;
reg    grp_fu_2650_ce;
reg    grp_fu_2657_ce;
reg    grp_fu_2664_ce;
reg    grp_fu_2671_ce;
reg    grp_fu_2678_ce;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    regslice_both_out_stream_V_data_V_U_apdone_blk;
reg    ap_block_state19;
wire    regslice_both_in_stream_V_data_V_U_apdone_blk;
wire   [15:0] in_stream_TDATA_int_regslice;
wire    in_stream_TVALID_int_regslice;
reg    in_stream_TREADY_int_regslice;
wire    regslice_both_in_stream_V_data_V_U_ack_in;
wire    regslice_both_in_stream_V_keep_V_U_apdone_blk;
wire   [1:0] in_stream_TKEEP_int_regslice;
wire    regslice_both_in_stream_V_keep_V_U_vld_out;
wire    regslice_both_in_stream_V_keep_V_U_ack_in;
wire    regslice_both_in_stream_V_strb_V_U_apdone_blk;
wire   [1:0] in_stream_TSTRB_int_regslice;
wire    regslice_both_in_stream_V_strb_V_U_vld_out;
wire    regslice_both_in_stream_V_strb_V_U_ack_in;
wire    regslice_both_in_stream_V_last_V_U_apdone_blk;
wire   [0:0] in_stream_TLAST_int_regslice;
wire    regslice_both_in_stream_V_last_V_U_vld_out;
wire    regslice_both_in_stream_V_last_V_U_ack_in;
wire   [15:0] out_stream_TDATA_int_regslice;
reg    out_stream_TVALID_int_regslice;
wire    out_stream_TREADY_int_regslice;
wire    regslice_both_out_stream_V_data_V_U_vld_out;
wire    regslice_both_out_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_out_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_keep_V_U_vld_out;
wire    regslice_both_out_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_out_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_strb_V_U_vld_out;
wire    regslice_both_out_stream_V_last_V_U_apdone_blk;
wire    regslice_both_out_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 grp_exp_32_16_s_fu_269_ap_start_reg = 1'b0;
#0 grp_exp_32_16_s_fu_280_ap_start_reg = 1'b0;
#0 grp_exp_32_16_s_fu_291_ap_start_reg = 1'b0;
#0 grp_exp_32_16_s_fu_302_ap_start_reg = 1'b0;
end

gaussian_nb_exp_32_16_s grp_exp_32_16_s_fu_269(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_exp_32_16_s_fu_269_ap_start),
    .ap_done(grp_exp_32_16_s_fu_269_ap_done),
    .ap_idle(grp_exp_32_16_s_fu_269_ap_idle),
    .ap_ready(grp_exp_32_16_s_fu_269_ap_ready),
    .ap_ce(grp_exp_32_16_s_fu_269_ap_ce),
    .x(grp_exp_32_16_s_fu_269_x),
    .ap_return(grp_exp_32_16_s_fu_269_ap_return)
);

gaussian_nb_exp_32_16_s grp_exp_32_16_s_fu_280(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_exp_32_16_s_fu_280_ap_start),
    .ap_done(grp_exp_32_16_s_fu_280_ap_done),
    .ap_idle(grp_exp_32_16_s_fu_280_ap_idle),
    .ap_ready(grp_exp_32_16_s_fu_280_ap_ready),
    .ap_ce(grp_exp_32_16_s_fu_280_ap_ce),
    .x(grp_exp_32_16_s_fu_280_x),
    .ap_return(grp_exp_32_16_s_fu_280_ap_return)
);

gaussian_nb_exp_32_16_s grp_exp_32_16_s_fu_291(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_exp_32_16_s_fu_291_ap_start),
    .ap_done(grp_exp_32_16_s_fu_291_ap_done),
    .ap_idle(grp_exp_32_16_s_fu_291_ap_idle),
    .ap_ready(grp_exp_32_16_s_fu_291_ap_ready),
    .ap_ce(grp_exp_32_16_s_fu_291_ap_ce),
    .x(grp_exp_32_16_s_fu_291_x),
    .ap_return(grp_exp_32_16_s_fu_291_ap_return)
);

gaussian_nb_exp_32_16_s grp_exp_32_16_s_fu_302(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_exp_32_16_s_fu_302_ap_start),
    .ap_done(grp_exp_32_16_s_fu_302_ap_done),
    .ap_idle(grp_exp_32_16_s_fu_302_ap_idle),
    .ap_ready(grp_exp_32_16_s_fu_302_ap_ready),
    .ap_ce(grp_exp_32_16_s_fu_302_ap_ce),
    .x(grp_exp_32_16_s_fu_302_x),
    .ap_return(grp_exp_32_16_s_fu_302_ap_return)
);

gaussian_nb_mul_42s_16s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 56 ))
mul_42s_16s_56_1_1_U9(
    .din0(grp_fu_2552_p2),
    .din1(diff_reg_2690),
    .dout(r_V_1_fu_500_p2)
);

gaussian_nb_mul_40s_16s_54_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 40 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 54 ))
mul_40s_16s_54_1_1_U10(
    .din0(grp_fu_2559_p2),
    .din1(diff_1_reg_2700),
    .dout(r_V_6_fu_527_p2)
);

gaussian_nb_mul_36s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_36s_16s_51_1_1_U11(
    .din0(grp_fu_2566_p2),
    .din1(diff_10_reg_2710),
    .dout(r_V_60_fu_564_p2)
);

gaussian_nb_mul_36s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_36s_16s_51_1_1_U12(
    .din0(grp_fu_2573_p2),
    .din1(diff_11_reg_2720),
    .dout(r_V_65_fu_591_p2)
);

gaussian_nb_mul_37s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_37s_16s_51_1_1_U13(
    .din0(grp_fu_2580_p2),
    .din1(diff_2_reg_2730),
    .dout(r_V_12_fu_634_p2)
);

gaussian_nb_mul_37s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_37s_16s_51_1_1_U14(
    .din0(grp_fu_2587_p2),
    .din1(diff_12_reg_2740),
    .dout(r_V_71_fu_671_p2)
);

gaussian_nb_mul_37s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_37s_16s_51_1_1_U15(
    .din0(grp_fu_2594_p2),
    .din1(diff_3_reg_2750),
    .dout(r_V_18_fu_714_p2)
);

gaussian_nb_mul_36s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_36s_16s_51_1_1_U16(
    .din0(grp_fu_2601_p2),
    .din1(diff_13_reg_2760),
    .dout(r_V_77_fu_751_p2)
);

gaussian_nb_mul_39s_16s_53_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 39 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 53 ))
mul_39s_16s_53_1_1_U17(
    .din0(grp_fu_2608_p2),
    .din1(diff_4_reg_2770),
    .dout(r_V_24_fu_838_p2)
);

gaussian_nb_mul_39s_16s_53_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 39 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 53 ))
mul_39s_16s_53_1_1_U18(
    .din0(grp_fu_2615_p2),
    .din1(diff_14_reg_2780),
    .dout(r_V_83_fu_987_p2)
);

gaussian_nb_mul_32s_27ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 56 ))
mul_32s_27ns_56_1_1_U19(
    .din0(r_V_2_reg_2835),
    .din1(r_V_3_fu_1021_p1),
    .dout(r_V_3_fu_1021_p2)
);

gaussian_nb_mul_32s_27ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 56 ))
mul_32s_27ns_56_1_1_U20(
    .din0(r_V_7_reg_2840),
    .din1(r_V_8_fu_1040_p1),
    .dout(r_V_8_fu_1040_p2)
);

gaussian_nb_mul_36s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_36s_16s_51_1_1_U21(
    .din0(grp_fu_2622_p2),
    .din1(diff_5_reg_2790),
    .dout(r_V_30_fu_1084_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U22(
    .din0(r_V_61_reg_2855),
    .din1(r_V_62_fu_1118_p1),
    .dout(r_V_62_fu_1118_p2)
);

gaussian_nb_mul_32s_29ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 56 ))
mul_32s_29ns_56_1_1_U23(
    .din0(r_V_66_reg_2860),
    .din1(r_V_67_fu_1137_p1),
    .dout(r_V_67_fu_1137_p2)
);

gaussian_nb_mul_36s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_36s_16s_51_1_1_U24(
    .din0(grp_fu_2629_p2),
    .din1(diff_15_reg_2800),
    .dout(r_V_89_fu_1181_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U25(
    .din0(probs_V_20_fu_1236_p4),
    .din1(prob_V_reg_2882),
    .dout(r_V_10_fu_1253_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U26(
    .din0(r_V_13_reg_2887),
    .din1(r_V_14_fu_1272_p1),
    .dout(r_V_14_fu_1272_p2)
);

gaussian_nb_mul_40s_16s_54_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 40 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 54 ))
mul_40s_16s_54_1_1_U27(
    .din0(grp_fu_2636_p2),
    .din1(diff_6_reg_2810),
    .dout(r_V_36_fu_1316_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U28(
    .din0(probs_V_29_fu_1375_p4),
    .din1(prob_V_8_reg_2908),
    .dout(r_V_69_fu_1392_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U29(
    .din0(r_V_72_reg_2913),
    .din1(r_V_73_fu_1411_p1),
    .dout(r_V_73_fu_1411_p2)
);

gaussian_nb_mul_37s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_37s_16s_51_1_1_U30(
    .din0(grp_fu_2643_p2),
    .din1(diff_16_reg_2820),
    .dout(r_V_95_fu_1455_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U31(
    .din0(probs_V_21_reg_2918),
    .din1(prob_V_1_reg_2923),
    .dout(r_V_16_fu_1492_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U32(
    .din0(r_V_19_reg_2928),
    .din1(r_V_20_fu_1511_p1),
    .dout(r_V_20_fu_1511_p2)
);

gaussian_nb_mul_41s_16s_55_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 55 ))
mul_41s_16s_55_1_1_U33(
    .din0(grp_fu_2650_p2),
    .din1(diff_7_reg_2845),
    .dout(r_V_42_fu_1555_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U34(
    .din0(probs_V_30_reg_2943),
    .din1(prob_V_9_reg_2948),
    .dout(r_V_75_fu_1582_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U35(
    .din0(r_V_78_reg_2953),
    .din1(r_V_79_fu_1601_p1),
    .dout(r_V_79_fu_1601_p2)
);

gaussian_nb_mul_42s_16s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 56 ))
mul_42s_16s_56_1_1_U36(
    .din0(grp_fu_2657_p2),
    .din1(X_V_10_reg_2830),
    .dout(r_V_101_fu_1645_p2)
);

gaussian_nb_mul_16s_30s_46_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 46 ))
mul_16s_30s_46_1_1_U37(
    .din0(X_V_11_reg_2870),
    .din1(r_V_106_fu_1669_p1),
    .dout(r_V_106_fu_1669_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U38(
    .din0(probs_V_22_reg_2968),
    .din1(prob_V_2_reg_2973),
    .dout(r_V_22_fu_1681_p2)
);

gaussian_nb_mul_32s_27ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 56 ))
mul_32s_27ns_56_1_1_U39(
    .din0(r_V_25_reg_2978),
    .din1(r_V_26_fu_1700_p1),
    .dout(r_V_26_fu_1700_p2)
);

gaussian_nb_mul_41s_16s_55_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 55 ))
mul_41s_16s_55_1_1_U40(
    .din0(grp_fu_2664_p2),
    .din1(diff_8_reg_2892),
    .dout(r_V_48_fu_1744_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U41(
    .din0(probs_V_31_reg_2983),
    .din1(prob_V_10_reg_2988),
    .dout(r_V_81_fu_1771_p2)
);

gaussian_nb_mul_32s_27ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 56 ))
mul_32s_27ns_56_1_1_U42(
    .din0(r_V_84_reg_2993),
    .din1(r_V_85_fu_1790_p1),
    .dout(r_V_85_fu_1790_p2)
);

gaussian_nb_mul_46s_16s_60_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 60 ))
mul_46s_16s_60_1_1_U43(
    .din0(r_V_106_reg_2998),
    .din1(X_V_11_reg_2870),
    .dout(r_V_107_fu_1834_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U44(
    .din0(probs_V_23_reg_3003),
    .din1(prob_V_3_reg_3008),
    .dout(r_V_28_fu_1857_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U45(
    .din0(r_V_31_reg_3013),
    .din1(r_V_32_fu_1876_p1),
    .dout(r_V_32_fu_1876_p2)
);

gaussian_nb_mul_36s_16s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 51 ))
mul_36s_16s_51_1_1_U46(
    .din0(grp_fu_2671_p2),
    .din1(diff_9_reg_2933),
    .dout(r_V_54_fu_1920_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U47(
    .din0(probs_V_32_reg_3018),
    .din1(prob_V_11_reg_3023),
    .dout(r_V_87_fu_1947_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U48(
    .din0(r_V_90_reg_3028),
    .din1(r_V_91_fu_1966_p1),
    .dout(r_V_91_fu_1966_p2)
);

gaussian_nb_mul_35s_16s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 50 ))
mul_35s_16s_50_1_1_U49(
    .din0(grp_fu_2678_p2),
    .din1(diff_19_reg_2958),
    .dout(r_V_113_fu_2010_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U50(
    .din0(probs_V_24_reg_3033),
    .din1(prob_V_4_reg_3038),
    .dout(r_V_34_fu_2037_p2)
);

gaussian_nb_mul_32s_26ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 56 ))
mul_32s_26ns_56_1_1_U51(
    .din0(r_V_37_reg_3043),
    .din1(r_V_38_fu_2056_p1),
    .dout(r_V_38_fu_2056_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U52(
    .din0(probs_V_33_reg_3048),
    .din1(prob_V_12_reg_3053),
    .dout(r_V_93_fu_2100_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U53(
    .din0(r_V_96_reg_3058),
    .din1(r_V_97_fu_2119_p1),
    .dout(r_V_97_fu_2119_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U54(
    .din0(probs_V_25_reg_3063),
    .din1(prob_V_5_reg_3068),
    .dout(r_V_40_fu_2163_p2)
);

gaussian_nb_mul_32s_21ns_52_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 52 ))
mul_32s_21ns_52_1_1_U55(
    .din0(r_V_43_reg_3073),
    .din1(r_V_44_fu_2182_p1),
    .dout(r_V_44_fu_2182_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U56(
    .din0(probs_V_34_reg_3078),
    .din1(prob_V_13_reg_3083),
    .dout(r_V_99_fu_2226_p2)
);

gaussian_nb_mul_32s_20ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 51 ))
mul_32s_20ns_51_1_1_U57(
    .din0(r_V_102_reg_3088),
    .din1(r_V_103_fu_2245_p1),
    .dout(r_V_103_fu_2245_p2)
);

gaussian_nb_mul_32s_28s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 48 ))
mul_32s_28s_48_1_1_U58(
    .din0(probs_V_26_reg_3093),
    .din1(trunc_ln864_5_reg_3098),
    .dout(r_V_46_fu_2289_p2)
);

gaussian_nb_mul_32s_26ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 56 ))
mul_32s_26ns_56_1_1_U59(
    .din0(r_V_49_reg_3103),
    .din1(r_V_50_fu_2308_p1),
    .dout(r_V_50_fu_2308_p2)
);

gaussian_nb_mul_32s_27s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 48 ))
mul_32s_27s_48_1_1_U60(
    .din0(probs_V_35_reg_3108),
    .din1(trunc_ln864_s_reg_3113),
    .dout(r_V_105_fu_2352_p2)
);

gaussian_nb_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U61(
    .din0(r_V_108_reg_3118),
    .din1(r_V_109_fu_2371_p1),
    .dout(r_V_109_fu_2371_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U62(
    .din0(probs_V_27_reg_3123),
    .din1(prob_V_6_reg_3128),
    .dout(r_V_52_fu_2415_p2)
);

gaussian_nb_mul_32s_28ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 56 ))
mul_32s_28ns_56_1_1_U63(
    .din0(r_V_55_reg_3133),
    .din1(r_V_56_fu_2434_p1),
    .dout(r_V_56_fu_2434_p2)
);

gaussian_nb_mul_32s_26s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 48 ))
mul_32s_26s_48_1_1_U64(
    .din0(probs_V_36_reg_3138),
    .din1(trunc_ln864_1_reg_3143),
    .dout(r_V_111_fu_2456_p2)
);

gaussian_nb_mul_32s_29ns_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 56 ))
mul_32s_29ns_56_1_1_U65(
    .din0(r_V_114_reg_3148),
    .din1(r_V_115_fu_2475_p1),
    .dout(r_V_115_fu_2475_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U66(
    .din0(probs_V_28_reg_3153),
    .din1(prob_V_7_reg_3158),
    .dout(r_V_58_fu_2497_p2)
);

gaussian_nb_mul_32s_32s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_1_1_U67(
    .din0(probs_V_37_reg_3163),
    .din1(prob_V_14_reg_3168),
    .dout(r_V_117_fu_2519_p2)
);

gaussian_nb_mul_mul_16s_26s_42_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 42 ))
mul_mul_16s_26s_42_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_fu_396_p2),
    .din1(grp_fu_2552_p1),
    .ce(grp_fu_2552_ce),
    .dout(grp_fu_2552_p2)
);

gaussian_nb_mul_mul_16s_24s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 40 ))
mul_mul_16s_24s_40_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_1_fu_406_p2),
    .din1(grp_fu_2559_p1),
    .ce(grp_fu_2559_ce),
    .dout(grp_fu_2559_p2)
);

gaussian_nb_mul_mul_16s_20s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 36 ))
mul_mul_16s_20s_36_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_10_fu_416_p2),
    .din1(grp_fu_2566_p1),
    .ce(grp_fu_2566_ce),
    .dout(grp_fu_2566_p2)
);

gaussian_nb_mul_mul_16s_20s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 36 ))
mul_mul_16s_20s_36_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_11_fu_426_p2),
    .din1(grp_fu_2573_p1),
    .ce(grp_fu_2573_ce),
    .dout(grp_fu_2573_p2)
);

gaussian_nb_mul_mul_16s_21s_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 37 ))
mul_mul_16s_21s_37_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_2_fu_442_p2),
    .din1(grp_fu_2580_p1),
    .ce(grp_fu_2580_ce),
    .dout(grp_fu_2580_p2)
);

gaussian_nb_mul_mul_16s_21s_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 37 ))
mul_mul_16s_21s_37_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_12_fu_452_p2),
    .din1(grp_fu_2587_p1),
    .ce(grp_fu_2587_ce),
    .dout(grp_fu_2587_p2)
);

gaussian_nb_mul_mul_16s_21s_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 37 ))
mul_mul_16s_21s_37_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_3_fu_468_p2),
    .din1(grp_fu_2594_p1),
    .ce(grp_fu_2594_ce),
    .dout(grp_fu_2594_p2)
);

gaussian_nb_mul_mul_16s_20s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 36 ))
mul_mul_16s_20s_36_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_13_fu_478_p2),
    .din1(grp_fu_2601_p1),
    .ce(grp_fu_2601_ce),
    .dout(grp_fu_2601_p2)
);

gaussian_nb_mul_mul_16s_23s_39_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 23 ),
    .dout_WIDTH( 39 ))
mul_mul_16s_23s_39_4_1_U76(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_4_fu_548_p2),
    .din1(grp_fu_2608_p1),
    .ce(grp_fu_2608_ce),
    .dout(grp_fu_2608_p2)
);

gaussian_nb_mul_mul_16s_23s_39_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 23 ),
    .dout_WIDTH( 39 ))
mul_mul_16s_23s_39_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_14_fu_612_p2),
    .din1(grp_fu_2615_p1),
    .ce(grp_fu_2615_ce),
    .dout(grp_fu_2615_p2)
);

gaussian_nb_mul_mul_16s_20s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 36 ))
mul_mul_16s_20s_36_4_1_U78(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_5_fu_655_p2),
    .din1(grp_fu_2622_p1),
    .ce(grp_fu_2622_ce),
    .dout(grp_fu_2622_p2)
);

gaussian_nb_mul_mul_16s_20s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 36 ))
mul_mul_16s_20s_36_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_15_fu_692_p2),
    .din1(grp_fu_2629_p1),
    .ce(grp_fu_2629_ce),
    .dout(grp_fu_2629_p2)
);

gaussian_nb_mul_mul_16s_24s_40_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 40 ))
mul_mul_16s_24s_40_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_6_fu_735_p2),
    .din1(grp_fu_2636_p1),
    .ce(grp_fu_2636_ce),
    .dout(grp_fu_2636_p2)
);

gaussian_nb_mul_mul_16s_21s_37_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 37 ))
mul_mul_16s_21s_37_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_16_fu_772_p2),
    .din1(grp_fu_2643_p1),
    .ce(grp_fu_2643_ce),
    .dout(grp_fu_2643_p2)
);

gaussian_nb_mul_mul_16s_25s_41_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 41 ))
mul_mul_16s_25s_41_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_7_fu_859_p2),
    .din1(grp_fu_2650_p1),
    .ce(grp_fu_2650_ce),
    .dout(grp_fu_2650_p2)
);

gaussian_nb_mul_mul_16s_26s_42_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 42 ))
mul_mul_16s_26s_42_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(X_V_10_fu_782_p2),
    .din1(grp_fu_2657_p1),
    .ce(grp_fu_2657_ce),
    .dout(grp_fu_2657_p2)
);

gaussian_nb_mul_mul_16s_25s_41_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 41 ))
mul_mul_16s_25s_41_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_8_fu_1105_p2),
    .din1(grp_fu_2664_p1),
    .ce(grp_fu_2664_ce),
    .dout(grp_fu_2664_p2)
);

gaussian_nb_mul_mul_16s_20s_36_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 36 ))
mul_mul_16s_20s_36_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_9_fu_1337_p2),
    .din1(grp_fu_2671_p1),
    .ce(grp_fu_2671_ce),
    .dout(grp_fu_2671_p2)
);

gaussian_nb_mul_mul_16s_19s_35_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 35 ))
mul_mul_16s_19s_35_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(diff_19_fu_1476_p2),
    .din1(grp_fu_2678_p1),
    .ce(grp_fu_2678_ce),
    .dout(grp_fu_2678_p2)
);

gaussian_nb_regslice_both #(
    .DataWidth( 16 ))
regslice_both_in_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TDATA),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_data_V_U_ack_in),
    .data_out(in_stream_TDATA_int_regslice),
    .vld_out(in_stream_TVALID_int_regslice),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_data_V_U_apdone_blk)
);

gaussian_nb_regslice_both #(
    .DataWidth( 2 ))
regslice_both_in_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TKEEP),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_keep_V_U_ack_in),
    .data_out(in_stream_TKEEP_int_regslice),
    .vld_out(regslice_both_in_stream_V_keep_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_keep_V_U_apdone_blk)
);

gaussian_nb_regslice_both #(
    .DataWidth( 2 ))
regslice_both_in_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TSTRB),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_strb_V_U_ack_in),
    .data_out(in_stream_TSTRB_int_regslice),
    .vld_out(regslice_both_in_stream_V_strb_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_strb_V_U_apdone_blk)
);

gaussian_nb_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TLAST),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_last_V_U_ack_in),
    .data_out(in_stream_TLAST_int_regslice),
    .vld_out(regslice_both_in_stream_V_last_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_last_V_U_apdone_blk)
);

gaussian_nb_regslice_both #(
    .DataWidth( 16 ))
regslice_both_out_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_stream_TDATA_int_regslice),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(out_stream_TREADY_int_regslice),
    .data_out(out_stream_TDATA),
    .vld_out(regslice_both_out_stream_V_data_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_data_V_U_apdone_blk)
);

gaussian_nb_regslice_both #(
    .DataWidth( 2 ))
regslice_both_out_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(2'd0),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_keep_V_U_ack_in_dummy),
    .data_out(out_stream_TKEEP),
    .vld_out(regslice_both_out_stream_V_keep_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_keep_V_U_apdone_blk)
);

gaussian_nb_regslice_both #(
    .DataWidth( 2 ))
regslice_both_out_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(2'd0),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_strb_V_U_ack_in_dummy),
    .data_out(out_stream_TSTRB),
    .vld_out(regslice_both_out_stream_V_strb_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_strb_V_U_apdone_blk)
);

gaussian_nb_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd1),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_last_V_U_ack_in_dummy),
    .data_out(out_stream_TLAST),
    .vld_out(regslice_both_out_stream_V_last_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_exp_32_16_s_fu_269_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state9) & (1'b1 == ap_NS_fsm_state10)) | ((1'b1 == ap_CS_fsm_state8) & (1'b1 == ap_NS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state7) & (1'b1 == ap_NS_fsm_state8)) | ((1'b1 == ap_CS_fsm_state6) & (1'b1 == ap_NS_fsm_state7)) | ((1'b1 == ap_CS_fsm_state5) & (1'b1 == ap_NS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_NS_fsm_state5)) | ((1'b1 == ap_NS_fsm_state13) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ap_NS_fsm_state12) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state10) & (1'b1 == ap_NS_fsm_state11)))) begin
            grp_exp_32_16_s_fu_269_ap_start_reg <= 1'b1;
        end else if ((grp_exp_32_16_s_fu_269_ap_ready == 1'b1)) begin
            grp_exp_32_16_s_fu_269_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_exp_32_16_s_fu_280_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state9) & (1'b1 == ap_NS_fsm_state10)) | ((1'b1 == ap_CS_fsm_state8) & (1'b1 == ap_NS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state7) & (1'b1 == ap_NS_fsm_state8)) | ((1'b1 == ap_CS_fsm_state6) & (1'b1 == ap_NS_fsm_state7)) | ((1'b1 == ap_CS_fsm_state5) & (1'b1 == ap_NS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_NS_fsm_state5)) | ((1'b1 == ap_NS_fsm_state13) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ap_NS_fsm_state12) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state10) & (1'b1 == ap_NS_fsm_state11)))) begin
            grp_exp_32_16_s_fu_280_ap_start_reg <= 1'b1;
        end else if ((grp_exp_32_16_s_fu_280_ap_ready == 1'b1)) begin
            grp_exp_32_16_s_fu_280_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_exp_32_16_s_fu_291_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_NS_fsm_state5))) begin
            grp_exp_32_16_s_fu_291_ap_start_reg <= 1'b1;
        end else if ((grp_exp_32_16_s_fu_291_ap_ready == 1'b1)) begin
            grp_exp_32_16_s_fu_291_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_exp_32_16_s_fu_302_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_NS_fsm_state5))) begin
            grp_exp_32_16_s_fu_302_ap_start_reg <= 1'b1;
        end else if ((grp_exp_32_16_s_fu_302_ap_ready == 1'b1)) begin
            grp_exp_32_16_s_fu_302_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        X_V_10_reg_2830[15 : 14] <= X_V_10_fu_782_p2[15 : 14];
        diff_7_reg_2845[15 : 14] <= diff_7_fu_859_p2[15 : 14];
        r_V_2_reg_2835 <= r_V_2_fu_802_p3;
        r_V_61_reg_2855 <= r_V_61_fu_917_p3;
        r_V_66_reg_2860 <= r_V_66_fu_973_p3;
        r_V_7_reg_2840 <= r_V_7_fu_824_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        X_V_11_reg_2870[15 : 14] <= X_V_11_fu_1012_p2[15 : 14];
        diff_8_reg_2892[15 : 14] <= diff_8_fu_1105_p2[15 : 14];
        prob_V_8_reg_2908 <= {{r_V_67_fu_1137_p2[55:24]}};
        prob_V_reg_2882 <= {{r_V_8_fu_1040_p2[55:24]}};
        r_V_13_reg_2887 <= r_V_13_fu_1070_p3;
        r_V_72_reg_2913 <= r_V_72_fu_1167_p3;
        tmp_21_reg_2902 <= {{r_V_62_fu_1118_p2[55:24]}};
        tmp_s_reg_2876 <= {{r_V_3_fu_1021_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        diff_10_reg_2710[15 : 14] <= diff_10_fu_416_p2[15 : 14];
        diff_11_reg_2720[15 : 14] <= diff_11_fu_426_p2[15 : 14];
        diff_1_reg_2700[15 : 14] <= diff_1_fu_406_p2[15 : 14];
        diff_reg_2690[15 : 14] <= diff_fu_396_p2[15 : 14];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        diff_12_reg_2740[15 : 14] <= diff_12_fu_452_p2[15 : 14];
        diff_2_reg_2730[15 : 14] <= diff_2_fu_442_p2[15 : 14];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        diff_13_reg_2760[15 : 14] <= diff_13_fu_478_p2[15 : 14];
        diff_3_reg_2750[15 : 14] <= diff_3_fu_468_p2[15 : 14];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        diff_14_reg_2780[15 : 14] <= diff_14_fu_612_p2[15 : 14];
        diff_4_reg_2770[15 : 14] <= diff_4_fu_548_p2[15 : 14];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        diff_15_reg_2800[15 : 14] <= diff_15_fu_692_p2[15 : 14];
        diff_5_reg_2790[15 : 14] <= diff_5_fu_655_p2[15 : 14];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        diff_16_reg_2820[15 : 14] <= diff_16_fu_772_p2[15 : 14];
        diff_6_reg_2810[15 : 14] <= diff_6_fu_735_p2[15 : 14];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        diff_19_reg_2958[15 : 14] <= diff_19_fu_1476_p2[15 : 14];
        diff_9_reg_2933[15 : 14] <= diff_9_fu_1337_p2[15 : 14];
        prob_V_1_reg_2923 <= {{r_V_14_fu_1272_p2[55:24]}};
        prob_V_9_reg_2948 <= {{r_V_73_fu_1411_p2[55:24]}};
        probs_V_21_reg_2918 <= {{r_V_10_fu_1253_p2[47:16]}};
        probs_V_30_reg_2943 <= {{r_V_69_fu_1392_p2[47:16]}};
        r_V_19_reg_2928 <= r_V_19_fu_1302_p3;
        r_V_78_reg_2953 <= r_V_78_fu_1441_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        prob_V_10_reg_2988 <= {{r_V_79_fu_1601_p2[55:24]}};
        prob_V_2_reg_2973 <= {{r_V_20_fu_1511_p2[55:24]}};
        probs_V_22_reg_2968 <= {{r_V_16_fu_1492_p2[47:16]}};
        probs_V_31_reg_2983 <= {{r_V_75_fu_1582_p2[47:16]}};
        r_V_106_reg_2998 <= r_V_106_fu_1669_p2;
        r_V_25_reg_2978 <= r_V_25_fu_1541_p3;
        r_V_84_reg_2993 <= r_V_84_fu_1631_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        prob_V_11_reg_3023 <= {{r_V_85_fu_1790_p2[55:24]}};
        prob_V_3_reg_3008 <= {{r_V_26_fu_1700_p2[55:24]}};
        probs_V_23_reg_3003 <= {{r_V_22_fu_1681_p2[47:16]}};
        probs_V_32_reg_3018 <= {{r_V_81_fu_1771_p2[47:16]}};
        r_V_31_reg_3013 <= r_V_31_fu_1730_p3;
        r_V_90_reg_3028 <= r_V_90_fu_1820_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        prob_V_12_reg_3053 <= {{r_V_91_fu_1966_p2[55:24]}};
        prob_V_4_reg_3038 <= {{r_V_32_fu_1876_p2[55:24]}};
        probs_V_24_reg_3033 <= {{r_V_28_fu_1857_p2[47:16]}};
        probs_V_33_reg_3048 <= {{r_V_87_fu_1947_p2[47:16]}};
        r_V_37_reg_3043 <= r_V_37_fu_1906_p3;
        r_V_96_reg_3058 <= r_V_96_fu_1996_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        prob_V_13_reg_3083 <= {{r_V_97_fu_2119_p2[55:24]}};
        prob_V_5_reg_3068 <= {{r_V_38_fu_2056_p2[55:24]}};
        probs_V_25_reg_3063 <= {{r_V_34_fu_2037_p2[47:16]}};
        probs_V_34_reg_3078 <= {{r_V_93_fu_2100_p2[47:16]}};
        r_V_102_reg_3088 <= r_V_102_fu_2149_p3;
        r_V_43_reg_3073 <= r_V_43_fu_2086_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        prob_V_14_reg_3168 <= {{r_V_115_fu_2475_p2[55:24]}};
        prob_V_7_reg_3158 <= {{r_V_56_fu_2434_p2[55:24]}};
        probs_V_28_reg_3153 <= {{r_V_52_fu_2415_p2[47:16]}};
        probs_V_37_reg_3163 <= {{r_V_111_fu_2456_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        prob_V_6_reg_3128 <= {{r_V_50_fu_2308_p2[55:24]}};
        probs_V_27_reg_3123 <= {{r_V_46_fu_2289_p2[47:16]}};
        probs_V_36_reg_3138 <= {{r_V_105_fu_2352_p2[47:16]}};
        r_V_114_reg_3148 <= r_V_114_fu_2401_p3;
        r_V_55_reg_3133 <= r_V_55_fu_2338_p3;
        trunc_ln864_1_reg_3143 <= {{r_V_109_fu_2371_p2[49:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        probs_V_26_reg_3093 <= {{r_V_40_fu_2163_p2[47:16]}};
        probs_V_35_reg_3108 <= {{r_V_99_fu_2226_p2[47:16]}};
        r_V_108_reg_3118 <= r_V_108_fu_2275_p3;
        r_V_49_reg_3103 <= r_V_49_fu_2212_p3;
        trunc_ln864_5_reg_3098 <= {{r_V_44_fu_2182_p2[51:24]}};
        trunc_ln864_s_reg_3113 <= {{r_V_103_fu_2245_p2[50:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_data_V_1_reg_2685 <= in_stream_TDATA_int_regslice;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((out_stream_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if (((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_exp_32_16_s_fu_269_ap_ce = 1'b1;
    end else begin
        grp_exp_32_16_s_fu_269_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_9_fu_1936_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_8_fu_1760_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_7_fu_1571_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_6_fu_1332_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_5_fu_1100_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_4_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_3_fu_730_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_2_fu_650_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_exp_32_16_s_fu_269_x = sext_ln864_fu_516_p1;
    end else begin
        grp_exp_32_16_s_fu_269_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_exp_32_16_s_fu_280_ap_ce = 1'b1;
    end else begin
        grp_exp_32_16_s_fu_280_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_exp_32_16_s_fu_280_x = sext_ln864_18_fu_2026_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_exp_32_16_s_fu_280_x = {{r_V_107_fu_1834_p2[59:28]}};
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_exp_32_16_s_fu_280_x = sext_ln864_17_fu_1661_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_exp_32_16_s_fu_280_x = sext_ln864_16_fu_1471_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_exp_32_16_s_fu_280_x = sext_ln864_15_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_exp_32_16_s_fu_280_x = sext_ln864_14_fu_1003_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_exp_32_16_s_fu_280_x = sext_ln864_13_fu_767_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_exp_32_16_s_fu_280_x = sext_ln864_12_fu_687_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_exp_32_16_s_fu_280_x = sext_ln864_1_fu_543_p1;
    end else begin
        grp_exp_32_16_s_fu_280_x = 'bx;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_exp_32_16_s_fu_291_ap_ce = 1'b1;
    end else begin
        grp_exp_32_16_s_fu_291_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_exp_32_16_s_fu_302_ap_ce = 1'b1;
    end else begin
        grp_exp_32_16_s_fu_302_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_2552_ce = 1'b1;
    end else begin
        grp_fu_2552_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_2559_ce = 1'b1;
    end else begin
        grp_fu_2559_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_2566_ce = 1'b1;
    end else begin
        grp_fu_2566_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_2573_ce = 1'b1;
    end else begin
        grp_fu_2573_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_fu_2580_ce = 1'b1;
    end else begin
        grp_fu_2580_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_fu_2587_ce = 1'b1;
    end else begin
        grp_fu_2587_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_2594_ce = 1'b1;
    end else begin
        grp_fu_2594_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_2601_ce = 1'b1;
    end else begin
        grp_fu_2601_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_fu_2608_ce = 1'b1;
    end else begin
        grp_fu_2608_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_fu_2615_ce = 1'b1;
    end else begin
        grp_fu_2615_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        grp_fu_2622_ce = 1'b1;
    end else begin
        grp_fu_2622_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        grp_fu_2629_ce = 1'b1;
    end else begin
        grp_fu_2629_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_2636_ce = 1'b1;
    end else begin
        grp_fu_2636_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_2643_ce = 1'b1;
    end else begin
        grp_fu_2643_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_2650_ce = 1'b1;
    end else begin
        grp_fu_2650_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_2657_ce = 1'b1;
    end else begin
        grp_fu_2657_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_2664_ce = 1'b1;
    end else begin
        grp_fu_2664_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_2671_ce = 1'b1;
    end else begin
        grp_fu_2671_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_2678_ce = 1'b1;
    end else begin
        grp_fu_2678_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        in_stream_TDATA_blk_n = in_stream_TVALID_int_regslice;
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        in_stream_TREADY_int_regslice = 1'b1;
    end else begin
        in_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        out_stream_TDATA_blk_n = out_stream_TREADY_int_regslice;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((out_stream_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        out_stream_TVALID_int_regslice = 1'b1;
    end else begin
        out_stream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((in_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((out_stream_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if ((~((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign X_V_10_fu_782_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_11_fu_1012_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_1_fu_390_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_2_fu_436_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_3_fu_462_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_4_fu_488_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_5_fu_622_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_6_fu_702_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_9_fu_1202_p2 = in_stream_TDATA_int_regslice << 16'd14;

assign X_V_fu_385_p2 = tmp_data_V_1_reg_2685 << 16'd14;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state10 = ap_NS_fsm[32'd9];

assign ap_NS_fsm_state11 = ap_NS_fsm[32'd10];

assign ap_NS_fsm_state12 = ap_NS_fsm[32'd11];

assign ap_NS_fsm_state13 = ap_NS_fsm[32'd12];

assign ap_NS_fsm_state5 = ap_NS_fsm[32'd4];

assign ap_NS_fsm_state6 = ap_NS_fsm[32'd5];

assign ap_NS_fsm_state7 = ap_NS_fsm[32'd6];

assign ap_NS_fsm_state8 = ap_NS_fsm[32'd7];

assign ap_NS_fsm_state9 = ap_NS_fsm[32'd8];

always @ (*) begin
    ap_block_state19 = ((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign diff_10_fu_416_p2 = ($signed(X_V_fu_385_p2) + $signed(16'd57956));

assign diff_11_fu_426_p2 = ($signed(X_V_1_fu_390_p2) + $signed(16'd59712));

assign diff_12_fu_452_p2 = ($signed(X_V_2_fu_436_p2) + $signed(16'd52040));

assign diff_13_fu_478_p2 = ($signed(X_V_3_fu_462_p2) + $signed(16'd62189));

assign diff_14_fu_612_p2 = ($signed(X_V_4_fu_488_p2) + $signed(16'd62039));

assign diff_15_fu_692_p2 = ($signed(X_V_5_fu_622_p2) + $signed(16'd58197));

assign diff_16_fu_772_p2 = ($signed(X_V_6_fu_702_p2) + $signed(16'd50399));

assign diff_19_fu_1476_p2 = ($signed(X_V_9_fu_1202_p2) + $signed(16'd55637));

assign diff_1_fu_406_p2 = ($signed(X_V_1_fu_390_p2) + $signed(16'd65272));

assign diff_2_fu_442_p2 = ($signed(X_V_2_fu_436_p2) + $signed(16'd62344));

assign diff_3_fu_468_p2 = ($signed(X_V_3_fu_462_p2) + $signed(16'd64450));

assign diff_4_fu_548_p2 = ($signed(X_V_4_fu_488_p2) + $signed(16'd62717));

assign diff_5_fu_655_p2 = ($signed(X_V_5_fu_622_p2) + $signed(16'd63852));

assign diff_6_fu_735_p2 = ($signed(X_V_6_fu_702_p2) + $signed(16'd64380));

assign diff_7_fu_859_p2 = ($signed(X_V_10_fu_782_p2) + $signed(16'd65534));

assign diff_8_fu_1105_p2 = ($signed(X_V_11_fu_1012_p2) + $signed(16'd65458));

assign diff_9_fu_1337_p2 = ($signed(X_V_9_fu_1202_p2) + $signed(16'd63725));

assign diff_fu_396_p2 = ($signed(X_V_fu_385_p2) + $signed(16'd64984));

assign exponent_V_10_fu_570_p4 = {{r_V_60_fu_564_p2[50:28]}};

assign exponent_V_11_fu_597_p4 = {{r_V_65_fu_591_p2[50:28]}};

assign exponent_V_12_fu_677_p4 = {{r_V_71_fu_671_p2[50:28]}};

assign exponent_V_13_fu_757_p4 = {{r_V_77_fu_751_p2[50:28]}};

assign exponent_V_14_fu_993_p4 = {{r_V_83_fu_987_p2[52:28]}};

assign exponent_V_15_fu_1187_p4 = {{r_V_89_fu_1181_p2[50:28]}};

assign exponent_V_16_fu_1461_p4 = {{r_V_95_fu_1455_p2[50:28]}};

assign exponent_V_17_fu_1651_p4 = {{r_V_101_fu_1645_p2[55:28]}};

assign exponent_V_19_fu_2016_p4 = {{r_V_113_fu_2010_p2[49:28]}};

assign exponent_V_1_fu_533_p4 = {{r_V_6_fu_527_p2[53:28]}};

assign exponent_V_2_fu_640_p4 = {{r_V_12_fu_634_p2[50:28]}};

assign exponent_V_3_fu_720_p4 = {{r_V_18_fu_714_p2[50:28]}};

assign exponent_V_4_fu_844_p4 = {{r_V_24_fu_838_p2[52:28]}};

assign exponent_V_5_fu_1090_p4 = {{r_V_30_fu_1084_p2[50:28]}};

assign exponent_V_6_fu_1322_p4 = {{r_V_36_fu_1316_p2[53:28]}};

assign exponent_V_7_fu_1561_p4 = {{r_V_42_fu_1555_p2[54:28]}};

assign exponent_V_8_fu_1750_p4 = {{r_V_48_fu_1744_p2[54:28]}};

assign exponent_V_9_fu_1926_p4 = {{r_V_54_fu_1920_p2[50:28]}};

assign exponent_V_fu_506_p4 = {{r_V_1_fu_500_p2[55:28]}};

assign grp_exp_32_16_s_fu_269_ap_start = grp_exp_32_16_s_fu_269_ap_start_reg;

assign grp_exp_32_16_s_fu_280_ap_start = grp_exp_32_16_s_fu_280_ap_start_reg;

assign grp_exp_32_16_s_fu_291_ap_start = grp_exp_32_16_s_fu_291_ap_start_reg;

assign grp_exp_32_16_s_fu_291_x = $signed(exponent_V_10_fu_570_p4);

assign grp_exp_32_16_s_fu_302_ap_start = grp_exp_32_16_s_fu_302_ap_start_reg;

assign grp_exp_32_16_s_fu_302_x = $signed(exponent_V_11_fu_597_p4);

assign grp_fu_2552_p1 = 42'd4398015609176;

assign grp_fu_2559_p1 = 40'd1099504230989;

assign grp_fu_2566_p1 = 36'd68719084503;

assign grp_fu_2573_p1 = 36'd68719160721;

assign grp_fu_2580_p1 = 37'd137438281269;

assign grp_fu_2587_p1 = 37'd137438413586;

assign grp_fu_2594_p1 = 37'd137438021156;

assign grp_fu_2601_p1 = 36'd68719107702;

assign grp_fu_2608_p1 = 39'd549752891113;

assign grp_fu_2615_p1 = 39'd549753487818;

assign grp_fu_2622_p1 = 36'd68719011168;

assign grp_fu_2629_p1 = 36'd68719123759;

assign grp_fu_2636_p1 = 40'd1099505970118;

assign grp_fu_2643_p1 = 37'd137437979082;

assign grp_fu_2650_p1 = 41'd2199012277682;

assign grp_fu_2657_p1 = 42'd4398019183509;

assign grp_fu_2664_p1 = 41'd2199007263916;

assign grp_fu_2671_p1 = 36'd68719044067;

assign grp_fu_2678_p1 = 35'd34359501848;

assign grp_fu_317_p3 = grp_exp_32_16_s_fu_269_ap_return[32'd31];

assign grp_fu_325_p2 = (32'd0 - grp_exp_32_16_s_fu_269_ap_return);

assign grp_fu_331_p4 = {{grp_fu_325_p2[31:1]}};

assign grp_fu_341_p4 = {{grp_exp_32_16_s_fu_269_ap_return[31:1]}};

assign grp_fu_351_p3 = grp_exp_32_16_s_fu_280_ap_return[32'd31];

assign grp_fu_359_p2 = (32'd0 - grp_exp_32_16_s_fu_280_ap_return);

assign grp_fu_365_p4 = {{grp_fu_359_p2[31:1]}};

assign grp_fu_375_p4 = {{grp_exp_32_16_s_fu_280_ap_return[31:1]}};

assign icmp_ln260_fu_2535_p2 = (($signed(probs_V_19_fu_2525_p4) < $signed(probs_V_fu_2503_p4)) ? 1'b1 : 1'b0);

assign in_stream_TREADY = regslice_both_in_stream_V_data_V_U_ack_in;

assign lshr_ln1349_20_fu_883_p4 = {{sub_ln1349_20_fu_877_p2[31:1]}};

assign lshr_ln1349_21_fu_903_p4 = {{grp_exp_32_16_s_fu_291_ap_return[31:1]}};

assign lshr_ln1349_22_fu_939_p4 = {{sub_ln1349_22_fu_933_p2[31:1]}};

assign lshr_ln1349_23_fu_959_p4 = {{grp_exp_32_16_s_fu_302_ap_return[31:1]}};

assign out_pkt_data_V_fu_2541_p2 = (icmp_ln260_fu_2535_p2 ^ 1'd1);

assign out_stream_TDATA_int_regslice = out_pkt_data_V_fu_2541_p2;

assign out_stream_TVALID = regslice_both_out_stream_V_data_V_U_vld_out;

assign probs_V_19_fu_2525_p4 = {{r_V_117_fu_2519_p2[47:16]}};

assign probs_V_20_fu_1236_p4 = {{r_V_4_fu_1230_p2[47:16]}};

assign probs_V_29_fu_1375_p4 = {{r_V_63_fu_1369_p2[47:16]}};

assign probs_V_fu_2503_p4 = {{r_V_58_fu_2497_p2[47:16]}};

assign r_V_102_fu_2149_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_35_fu_2139_p2 : zext_ln1349_35_fu_2145_p1);

assign r_V_103_fu_2245_p1 = 51'd315747;

assign r_V_106_fu_1669_p1 = 46'd70368399588130;

assign r_V_108_fu_2275_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_37_fu_2265_p2 : zext_ln1349_37_fu_2271_p1);

assign r_V_109_fu_2371_p1 = 50'd129520;

assign r_V_114_fu_2401_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_39_fu_2391_p2 : zext_ln1349_39_fu_2397_p1);

assign r_V_115_fu_2475_p1 = 56'd156540820;

assign r_V_13_fu_1070_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_5_fu_1060_p2 : zext_ln1349_5_fu_1066_p1);

assign r_V_14_fu_1272_p1 = 56'd92861304;

assign r_V_19_fu_1302_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_7_fu_1292_p2 : zext_ln1349_7_fu_1298_p1);

assign r_V_20_fu_1511_p1 = 56'd78697390;

assign r_V_25_fu_1541_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_9_fu_1531_p2 : zext_ln1349_9_fu_1537_p1);

assign r_V_26_fu_1700_p1 = 56'd44535287;

assign r_V_2_fu_802_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_1_fu_792_p2 : zext_ln1349_1_fu_798_p1);

assign r_V_31_fu_1730_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_11_fu_1720_p2 : zext_ln1349_11_fu_1726_p1);

assign r_V_32_fu_1876_p1 = 56'd111415142;

assign r_V_37_fu_1906_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_13_fu_1896_p2 : zext_ln1349_13_fu_1902_p1);

assign r_V_38_fu_2056_p1 = 56'd32033912;

assign r_V_3_fu_1021_p1 = 56'd43204095;

assign r_V_43_fu_2086_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_15_fu_2076_p2 : zext_ln1349_15_fu_2082_p1);

assign r_V_44_fu_2182_p1 = 52'd727460;

assign r_V_49_fu_2212_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_17_fu_2202_p2 : zext_ln1349_17_fu_2208_p1);

assign r_V_4_fu_1230_p2 = ($signed(sext_ln1319_2_fu_1215_p1) - $signed(sext_ln1319_3_fu_1226_p1));

assign r_V_50_fu_2308_p1 = 56'd19074520;

assign r_V_55_fu_2338_p3 = ((grp_fu_317_p3[0:0] == 1'b1) ? sub_ln1349_19_fu_2328_p2 : zext_ln1349_19_fu_2334_p1);

assign r_V_56_fu_2434_p1 = 56'd115889961;

assign r_V_61_fu_917_p3 = ((tmp_20_fu_869_p3[0:0] == 1'b1) ? sub_ln1349_21_fu_897_p2 : zext_ln1349_21_fu_913_p1);

assign r_V_62_fu_1118_p1 = 56'd121515194;

assign r_V_63_fu_1369_p2 = ($signed(sext_ln1319_33_fu_1354_p1) + $signed(sext_ln1319_34_fu_1365_p1));

assign r_V_66_fu_973_p3 = ((tmp_22_fu_925_p3[0:0] == 1'b1) ? sub_ln1349_23_fu_953_p2 : zext_ln1349_23_fu_969_p1);

assign r_V_67_fu_1137_p1 = 56'd135376194;

assign r_V_72_fu_1167_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_25_fu_1157_p2 : zext_ln1349_25_fu_1163_p1);

assign r_V_73_fu_1411_p1 = 56'd103989211;

assign r_V_78_fu_1441_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_27_fu_1431_p2 : zext_ln1349_27_fu_1437_p1);

assign r_V_79_fu_1601_p1 = 56'd125184036;

assign r_V_7_fu_824_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_3_fu_814_p2 : zext_ln1349_3_fu_820_p1);

assign r_V_84_fu_1631_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_29_fu_1621_p2 : zext_ln1349_29_fu_1627_p1);

assign r_V_85_fu_1790_p1 = 56'd49875643;

assign r_V_8_fu_1040_p1 = 56'd62624257;

assign r_V_90_fu_1820_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_31_fu_1810_p2 : zext_ln1349_31_fu_1816_p1);

assign r_V_91_fu_1966_p1 = 56'd127692733;

assign r_V_96_fu_1996_p3 = ((grp_fu_351_p3[0:0] == 1'b1) ? sub_ln1349_33_fu_1986_p2 : zext_ln1349_33_fu_1992_p1);

assign r_V_97_fu_2119_p1 = 56'd77082583;

assign sext_ln1319_2_fu_1215_p1 = $signed(shl_ln_fu_1208_p3);

assign sext_ln1319_33_fu_1354_p1 = $signed(shl_ln1319_2_fu_1347_p3);

assign sext_ln1319_34_fu_1365_p1 = $signed(shl_ln1319_3_fu_1358_p3);

assign sext_ln1319_3_fu_1226_p1 = $signed(shl_ln1319_1_fu_1219_p3);

assign sext_ln864_12_fu_687_p1 = $signed(exponent_V_12_fu_677_p4);

assign sext_ln864_13_fu_767_p1 = $signed(exponent_V_13_fu_757_p4);

assign sext_ln864_14_fu_1003_p1 = $signed(exponent_V_14_fu_993_p4);

assign sext_ln864_15_fu_1197_p1 = $signed(exponent_V_15_fu_1187_p4);

assign sext_ln864_16_fu_1471_p1 = $signed(exponent_V_16_fu_1461_p4);

assign sext_ln864_17_fu_1661_p1 = $signed(exponent_V_17_fu_1651_p4);

assign sext_ln864_18_fu_2026_p1 = $signed(exponent_V_19_fu_2016_p4);

assign sext_ln864_1_fu_543_p1 = $signed(exponent_V_1_fu_533_p4);

assign sext_ln864_2_fu_650_p1 = $signed(exponent_V_2_fu_640_p4);

assign sext_ln864_3_fu_730_p1 = $signed(exponent_V_3_fu_720_p4);

assign sext_ln864_4_fu_854_p1 = $signed(exponent_V_4_fu_844_p4);

assign sext_ln864_5_fu_1100_p1 = $signed(exponent_V_5_fu_1090_p4);

assign sext_ln864_6_fu_1332_p1 = $signed(exponent_V_6_fu_1322_p4);

assign sext_ln864_7_fu_1571_p1 = $signed(exponent_V_7_fu_1561_p4);

assign sext_ln864_8_fu_1760_p1 = $signed(exponent_V_8_fu_1750_p4);

assign sext_ln864_9_fu_1936_p1 = $signed(exponent_V_9_fu_1926_p4);

assign sext_ln864_fu_516_p1 = $signed(exponent_V_fu_506_p4);

assign shl_ln1319_1_fu_1219_p3 = {{tmp_s_reg_2876}, {3'd0}};

assign shl_ln1319_2_fu_1347_p3 = {{tmp_21_reg_2902}, {15'd0}};

assign shl_ln1319_3_fu_1358_p3 = {{tmp_21_reg_2902}, {2'd0}};

assign shl_ln_fu_1208_p3 = {{tmp_s_reg_2876}, {15'd0}};

assign sub_ln1349_11_fu_1720_p2 = (32'd0 - zext_ln1349_10_fu_1716_p1);

assign sub_ln1349_13_fu_1896_p2 = (32'd0 - zext_ln1349_12_fu_1892_p1);

assign sub_ln1349_15_fu_2076_p2 = (32'd0 - zext_ln1349_14_fu_2072_p1);

assign sub_ln1349_17_fu_2202_p2 = (32'd0 - zext_ln1349_16_fu_2198_p1);

assign sub_ln1349_19_fu_2328_p2 = (32'd0 - zext_ln1349_18_fu_2324_p1);

assign sub_ln1349_1_fu_792_p2 = (32'd0 - zext_ln1349_fu_788_p1);

assign sub_ln1349_20_fu_877_p2 = (32'd0 - grp_exp_32_16_s_fu_291_ap_return);

assign sub_ln1349_21_fu_897_p2 = (32'd0 - zext_ln1349_20_fu_893_p1);

assign sub_ln1349_22_fu_933_p2 = (32'd0 - grp_exp_32_16_s_fu_302_ap_return);

assign sub_ln1349_23_fu_953_p2 = (32'd0 - zext_ln1349_22_fu_949_p1);

assign sub_ln1349_25_fu_1157_p2 = (32'd0 - zext_ln1349_24_fu_1153_p1);

assign sub_ln1349_27_fu_1431_p2 = (32'd0 - zext_ln1349_26_fu_1427_p1);

assign sub_ln1349_29_fu_1621_p2 = (32'd0 - zext_ln1349_28_fu_1617_p1);

assign sub_ln1349_31_fu_1810_p2 = (32'd0 - zext_ln1349_30_fu_1806_p1);

assign sub_ln1349_33_fu_1986_p2 = (32'd0 - zext_ln1349_32_fu_1982_p1);

assign sub_ln1349_35_fu_2139_p2 = (32'd0 - zext_ln1349_34_fu_2135_p1);

assign sub_ln1349_37_fu_2265_p2 = (32'd0 - zext_ln1349_36_fu_2261_p1);

assign sub_ln1349_39_fu_2391_p2 = (32'd0 - zext_ln1349_38_fu_2387_p1);

assign sub_ln1349_3_fu_814_p2 = (32'd0 - zext_ln1349_2_fu_810_p1);

assign sub_ln1349_5_fu_1060_p2 = (32'd0 - zext_ln1349_4_fu_1056_p1);

assign sub_ln1349_7_fu_1292_p2 = (32'd0 - zext_ln1349_6_fu_1288_p1);

assign sub_ln1349_9_fu_1531_p2 = (32'd0 - zext_ln1349_8_fu_1527_p1);

assign tmp_20_fu_869_p3 = grp_exp_32_16_s_fu_291_ap_return[32'd31];

assign tmp_22_fu_925_p3 = grp_exp_32_16_s_fu_302_ap_return[32'd31];

assign zext_ln1349_10_fu_1716_p1 = grp_fu_331_p4;

assign zext_ln1349_11_fu_1726_p1 = grp_fu_341_p4;

assign zext_ln1349_12_fu_1892_p1 = grp_fu_331_p4;

assign zext_ln1349_13_fu_1902_p1 = grp_fu_341_p4;

assign zext_ln1349_14_fu_2072_p1 = grp_fu_331_p4;

assign zext_ln1349_15_fu_2082_p1 = grp_fu_341_p4;

assign zext_ln1349_16_fu_2198_p1 = grp_fu_331_p4;

assign zext_ln1349_17_fu_2208_p1 = grp_fu_341_p4;

assign zext_ln1349_18_fu_2324_p1 = grp_fu_331_p4;

assign zext_ln1349_19_fu_2334_p1 = grp_fu_341_p4;

assign zext_ln1349_1_fu_798_p1 = grp_fu_341_p4;

assign zext_ln1349_20_fu_893_p1 = lshr_ln1349_20_fu_883_p4;

assign zext_ln1349_21_fu_913_p1 = lshr_ln1349_21_fu_903_p4;

assign zext_ln1349_22_fu_949_p1 = lshr_ln1349_22_fu_939_p4;

assign zext_ln1349_23_fu_969_p1 = lshr_ln1349_23_fu_959_p4;

assign zext_ln1349_24_fu_1153_p1 = grp_fu_365_p4;

assign zext_ln1349_25_fu_1163_p1 = grp_fu_375_p4;

assign zext_ln1349_26_fu_1427_p1 = grp_fu_365_p4;

assign zext_ln1349_27_fu_1437_p1 = grp_fu_375_p4;

assign zext_ln1349_28_fu_1617_p1 = grp_fu_365_p4;

assign zext_ln1349_29_fu_1627_p1 = grp_fu_375_p4;

assign zext_ln1349_2_fu_810_p1 = grp_fu_365_p4;

assign zext_ln1349_30_fu_1806_p1 = grp_fu_365_p4;

assign zext_ln1349_31_fu_1816_p1 = grp_fu_375_p4;

assign zext_ln1349_32_fu_1982_p1 = grp_fu_365_p4;

assign zext_ln1349_33_fu_1992_p1 = grp_fu_375_p4;

assign zext_ln1349_34_fu_2135_p1 = grp_fu_365_p4;

assign zext_ln1349_35_fu_2145_p1 = grp_fu_375_p4;

assign zext_ln1349_36_fu_2261_p1 = grp_fu_365_p4;

assign zext_ln1349_37_fu_2271_p1 = grp_fu_375_p4;

assign zext_ln1349_38_fu_2387_p1 = grp_fu_365_p4;

assign zext_ln1349_39_fu_2397_p1 = grp_fu_375_p4;

assign zext_ln1349_3_fu_820_p1 = grp_fu_375_p4;

assign zext_ln1349_4_fu_1056_p1 = grp_fu_331_p4;

assign zext_ln1349_5_fu_1066_p1 = grp_fu_341_p4;

assign zext_ln1349_6_fu_1288_p1 = grp_fu_331_p4;

assign zext_ln1349_7_fu_1298_p1 = grp_fu_341_p4;

assign zext_ln1349_8_fu_1527_p1 = grp_fu_331_p4;

assign zext_ln1349_9_fu_1537_p1 = grp_fu_341_p4;

assign zext_ln1349_fu_788_p1 = grp_fu_331_p4;

always @ (posedge ap_clk) begin
    diff_reg_2690[13:0] <= 14'b11110111011000;
    diff_1_reg_2700[13:0] <= 14'b11111011111000;
    diff_10_reg_2710[13:0] <= 14'b10001001100100;
    diff_11_reg_2720[13:0] <= 14'b10100101000000;
    diff_2_reg_2730[13:0] <= 14'b11001110001000;
    diff_12_reg_2740[13:0] <= 14'b00101101001000;
    diff_3_reg_2750[13:0] <= 14'b11101111000010;
    diff_13_reg_2760[13:0] <= 14'b11001011101101;
    diff_4_reg_2770[13:0] <= 14'b11010011111101;
    diff_14_reg_2780[13:0] <= 14'b11001001010111;
    diff_5_reg_2790[13:0] <= 14'b11100101101100;
    diff_15_reg_2800[13:0] <= 14'b10001101010101;
    diff_6_reg_2810[13:0] <= 14'b11101101111100;
    diff_16_reg_2820[13:0] <= 14'b00010011011111;
    X_V_10_reg_2830[13:0] <= 14'b00000000000000;
    diff_7_reg_2845[13:0] <= 14'b11111111111110;
    X_V_11_reg_2870[13:0] <= 14'b00000000000000;
    diff_8_reg_2892[13:0] <= 14'b11111110110010;
    diff_9_reg_2933[13:0] <= 14'b11100011101101;
    diff_19_reg_2958[13:0] <= 14'b01100101010101;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "gaussian_nb_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //gaussian_nb

