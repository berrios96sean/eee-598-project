-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gaussian_nb is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of gaussian_nb is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "gaussian_nb_gaussian_nb,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu5eg-sfvc784-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.929000,HLS_SYN_LAT=18,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=4218,HLS_SYN_LUT=5882,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001110";
    constant ap_const_lv16_FDD8 : STD_LOGIC_VECTOR (15 downto 0) := "1111110111011000";
    constant ap_const_lv16_FEF8 : STD_LOGIC_VECTOR (15 downto 0) := "1111111011111000";
    constant ap_const_lv16_E264 : STD_LOGIC_VECTOR (15 downto 0) := "1110001001100100";
    constant ap_const_lv16_E940 : STD_LOGIC_VECTOR (15 downto 0) := "1110100101000000";
    constant ap_const_lv16_F388 : STD_LOGIC_VECTOR (15 downto 0) := "1111001110001000";
    constant ap_const_lv16_CB48 : STD_LOGIC_VECTOR (15 downto 0) := "1100101101001000";
    constant ap_const_lv16_FBC2 : STD_LOGIC_VECTOR (15 downto 0) := "1111101111000010";
    constant ap_const_lv16_F2ED : STD_LOGIC_VECTOR (15 downto 0) := "1111001011101101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv16_F4FD : STD_LOGIC_VECTOR (15 downto 0) := "1111010011111101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv16_F257 : STD_LOGIC_VECTOR (15 downto 0) := "1111001001010111";
    constant ap_const_lv16_F96C : STD_LOGIC_VECTOR (15 downto 0) := "1111100101101100";
    constant ap_const_lv16_E355 : STD_LOGIC_VECTOR (15 downto 0) := "1110001101010101";
    constant ap_const_lv16_FB7C : STD_LOGIC_VECTOR (15 downto 0) := "1111101101111100";
    constant ap_const_lv16_C4DF : STD_LOGIC_VECTOR (15 downto 0) := "1100010011011111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv16_FFFE : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111110";
    constant ap_const_lv56_2933DFF : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000010100100110011110111111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv56_3BB9201 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000011101110111001001000000001";
    constant ap_const_lv16_FFB2 : STD_LOGIC_VECTOR (15 downto 0) := "1111111110110010";
    constant ap_const_lv56_73E2CBA : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000111001111100010110010111010";
    constant ap_const_lv56_811AD42 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000001000000100011010110101000010";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv56_588F378 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000101100010001111001101111000";
    constant ap_const_lv16_F8ED : STD_LOGIC_VECTOR (15 downto 0) := "1111100011101101";
    constant ap_const_lv56_632BFDB : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000110001100101011111111011011";
    constant ap_const_lv16_D955 : STD_LOGIC_VECTOR (15 downto 0) := "1101100101010101";
    constant ap_const_lv56_4B0D3AE : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000100101100001101001110101110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv56_7762824 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000111011101100010100000100100";
    constant ap_const_lv46_3FFFEB75FB22 : STD_LOGIC_VECTOR (45 downto 0) := "1111111111111111101011011101011111101100100010";
    constant ap_const_lv56_2A78DF7 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000010101001111000110111110111";
    constant ap_const_lv56_2F90ABB : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000010111110010000101010111011";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv56_6A40F66 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000110101001000000111101100110";
    constant ap_const_lv56_79C6FBD : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000111100111000110111110111101";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv56_1E8CC78 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000001111010001100110001111000";
    constant ap_const_lv56_4982FD7 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000100100110000010111111010111";
    constant ap_const_lv52_B19A4 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000010110001100110100100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv51_4D163 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000001001101000101100011";
    constant ap_const_lv56_1230DD8 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000001001000110000110111011000";
    constant ap_const_lv50_1F9F0 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000011111100111110000";
    constant ap_const_lv56_6E85729 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000110111010000101011100101001";
    constant ap_const_lv56_9549F94 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000001001010101001001111110010100";
    constant ap_const_lv42_3FFFE287958 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111110001010000111100101011000";
    constant ap_const_lv40_FFFF8F224D : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111100011110010001001001101";
    constant ap_const_lv36_FFFFA03D7 : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111110100000001111010111";
    constant ap_const_lv36_FFFFB2D91 : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111110110010110110010001";
    constant ap_const_lv37_1FFFF5BE35 : STD_LOGIC_VECTOR (36 downto 0) := "1111111111111111101011011111000110101";
    constant ap_const_lv37_1FFFF7C312 : STD_LOGIC_VECTOR (36 downto 0) := "1111111111111111101111100001100010010";
    constant ap_const_lv37_1FFFF1C624 : STD_LOGIC_VECTOR (36 downto 0) := "1111111111111111100011100011000100100";
    constant ap_const_lv36_FFFFA5E76 : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111110100101111001110110";
    constant ap_const_lv39_7FFFD366E9 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111110100110110011011101001";
    constant ap_const_lv39_7FFFDC81CA : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111110111001000000111001010";
    constant ap_const_lv36_FFFF8E560 : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111110001110010101100000";
    constant ap_const_lv36_FFFFA9D2F : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111110101001110100101111";
    constant ap_const_lv40_FFFFA9ABC6 : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111101010011010101111000110";
    constant ap_const_lv37_1FFFF121CA : STD_LOGIC_VECTOR (36 downto 0) := "1111111111111111100010010000111001010";
    constant ap_const_lv41_1FFFF587DB2 : STD_LOGIC_VECTOR (40 downto 0) := "11111111111111111010110000111110110110010";
    constant ap_const_lv42_3FFFE5F0395 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111110010111110000001110010101";
    constant ap_const_lv41_1FFFF0BFCAC : STD_LOGIC_VECTOR (40 downto 0) := "11111111111111111000010111111110010101100";
    constant ap_const_lv36_FFFF965E3 : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111110010110010111100011";
    constant ap_const_lv35_7FFFC6418 : STD_LOGIC_VECTOR (34 downto 0) := "11111111111111111000110010000011000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_data_V_1_reg_2685 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_fu_396_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_reg_2690 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_1_fu_406_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_1_reg_2700 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_10_fu_416_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_10_reg_2710 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_11_fu_426_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_11_reg_2720 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_2_fu_442_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_2_reg_2730 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_12_fu_452_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_12_reg_2740 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_3_fu_468_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_3_reg_2750 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_13_fu_478_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_13_reg_2760 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_4_fu_548_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_4_reg_2770 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_14_fu_612_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_14_reg_2780 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_5_fu_655_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_5_reg_2790 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_15_fu_692_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_15_reg_2800 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_6_fu_735_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_6_reg_2810 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_16_fu_772_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_16_reg_2820 : STD_LOGIC_VECTOR (15 downto 0);
    signal X_V_10_fu_782_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal X_V_10_reg_2830 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_fu_802_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_reg_2835 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_reg_2840 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_7_fu_859_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_7_reg_2845 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_61_fu_917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_61_reg_2855 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_66_fu_973_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_66_reg_2860 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_V_11_fu_1012_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal X_V_11_reg_2870 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_reg_2876 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_reg_2882 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_13_fu_1070_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_13_reg_2887 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_8_fu_1105_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_8_reg_2892 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_reg_2902 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_8_reg_2908 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_72_fu_1167_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_72_reg_2913 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_21_reg_2918 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_1_reg_2923 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_19_fu_1302_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_19_reg_2928 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_9_fu_1337_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_9_reg_2933 : STD_LOGIC_VECTOR (15 downto 0);
    signal probs_V_30_reg_2943 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_9_reg_2948 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_78_fu_1441_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_78_reg_2953 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_19_fu_1476_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal diff_19_reg_2958 : STD_LOGIC_VECTOR (15 downto 0);
    signal probs_V_22_reg_2968 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal prob_V_2_reg_2973 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_25_fu_1541_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_25_reg_2978 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_31_reg_2983 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_10_reg_2988 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_84_fu_1631_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_84_reg_2993 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_106_fu_1669_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_106_reg_2998 : STD_LOGIC_VECTOR (45 downto 0);
    signal probs_V_23_reg_3003 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal prob_V_3_reg_3008 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_31_fu_1730_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_31_reg_3013 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_32_reg_3018 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_11_reg_3023 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_90_fu_1820_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_90_reg_3028 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_24_reg_3033 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal prob_V_4_reg_3038 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_37_fu_1906_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_37_reg_3043 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_33_reg_3048 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_12_reg_3053 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_96_fu_1996_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_96_reg_3058 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_25_reg_3063 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal prob_V_5_reg_3068 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_43_fu_2086_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_43_reg_3073 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_34_reg_3078 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_13_reg_3083 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_102_fu_2149_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_102_reg_3088 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_26_reg_3093 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal trunc_ln864_5_reg_3098 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_49_fu_2212_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_49_reg_3103 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_35_reg_3108 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln864_s_reg_3113 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_108_fu_2275_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_108_reg_3118 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_27_reg_3123 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal prob_V_6_reg_3128 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_55_fu_2338_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_55_reg_3133 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_36_reg_3138 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln864_1_reg_3143 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_114_fu_2401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_114_reg_3148 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_28_reg_3153 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal prob_V_7_reg_3158 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_37_reg_3163 : STD_LOGIC_VECTOR (31 downto 0);
    signal prob_V_14_reg_3168 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_269_ap_start : STD_LOGIC;
    signal grp_exp_32_16_s_fu_269_ap_done : STD_LOGIC;
    signal grp_exp_32_16_s_fu_269_ap_idle : STD_LOGIC;
    signal grp_exp_32_16_s_fu_269_ap_ready : STD_LOGIC;
    signal grp_exp_32_16_s_fu_269_ap_ce : STD_LOGIC;
    signal grp_exp_32_16_s_fu_269_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_269_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_280_ap_start : STD_LOGIC;
    signal grp_exp_32_16_s_fu_280_ap_done : STD_LOGIC;
    signal grp_exp_32_16_s_fu_280_ap_idle : STD_LOGIC;
    signal grp_exp_32_16_s_fu_280_ap_ready : STD_LOGIC;
    signal grp_exp_32_16_s_fu_280_ap_ce : STD_LOGIC;
    signal grp_exp_32_16_s_fu_280_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_280_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_291_ap_start : STD_LOGIC;
    signal grp_exp_32_16_s_fu_291_ap_done : STD_LOGIC;
    signal grp_exp_32_16_s_fu_291_ap_idle : STD_LOGIC;
    signal grp_exp_32_16_s_fu_291_ap_ready : STD_LOGIC;
    signal grp_exp_32_16_s_fu_291_ap_ce : STD_LOGIC;
    signal grp_exp_32_16_s_fu_291_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_291_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_302_ap_start : STD_LOGIC;
    signal grp_exp_32_16_s_fu_302_ap_done : STD_LOGIC;
    signal grp_exp_32_16_s_fu_302_ap_idle : STD_LOGIC;
    signal grp_exp_32_16_s_fu_302_ap_ready : STD_LOGIC;
    signal grp_exp_32_16_s_fu_302_ap_ce : STD_LOGIC;
    signal grp_exp_32_16_s_fu_302_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_302_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_269_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_NS_fsm_state5 : STD_LOGIC;
    signal ap_NS_fsm_state6 : STD_LOGIC;
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal ap_NS_fsm_state8 : STD_LOGIC;
    signal ap_NS_fsm_state9 : STD_LOGIC;
    signal ap_NS_fsm_state10 : STD_LOGIC;
    signal ap_NS_fsm_state11 : STD_LOGIC;
    signal ap_NS_fsm_state12 : STD_LOGIC;
    signal ap_NS_fsm_state13 : STD_LOGIC;
    signal sext_ln864_fu_516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_2_fu_650_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_3_fu_730_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_4_fu_854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_5_fu_1100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_6_fu_1332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_7_fu_1571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_8_fu_1760_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_9_fu_1936_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_280_ap_start_reg : STD_LOGIC := '0';
    signal sext_ln864_1_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_12_fu_687_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_13_fu_767_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_14_fu_1003_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_15_fu_1197_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_16_fu_1471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_17_fu_1661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln864_18_fu_2026_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_exp_32_16_s_fu_291_ap_start_reg : STD_LOGIC := '0';
    signal grp_exp_32_16_s_fu_302_ap_start_reg : STD_LOGIC := '0';
    signal grp_fu_325_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_359_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_V_fu_385_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal X_V_1_fu_390_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal X_V_2_fu_436_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal X_V_3_fu_462_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2552_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_1_fu_500_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal exponent_V_fu_506_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_2559_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_6_fu_527_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal exponent_V_1_fu_533_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal X_V_4_fu_488_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2566_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_60_fu_564_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_10_fu_570_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_2573_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_65_fu_591_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_11_fu_597_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_2580_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_12_fu_634_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_2_fu_640_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal X_V_5_fu_622_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2587_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_71_fu_671_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_12_fu_677_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_2594_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_18_fu_714_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_3_fu_720_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal X_V_6_fu_702_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2601_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_77_fu_751_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_13_fu_757_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_331_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1349_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_341_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_317_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1349_1_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_1_fu_798_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_365_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1349_2_fu_810_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_375_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_351_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1349_3_fu_814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_3_fu_820_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2608_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_24_fu_838_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal exponent_V_4_fu_844_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln1349_20_fu_877_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1349_20_fu_883_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1349_20_fu_893_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1349_21_fu_903_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_20_fu_869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1349_21_fu_897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_21_fu_913_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_22_fu_933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1349_22_fu_939_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1349_22_fu_949_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1349_23_fu_959_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_22_fu_925_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1349_23_fu_953_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_23_fu_969_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2615_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_83_fu_987_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal exponent_V_14_fu_993_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_3_fu_1021_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_3_fu_1021_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_8_fu_1040_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_8_fu_1040_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_4_fu_1056_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_5_fu_1060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_5_fu_1066_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2622_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_30_fu_1084_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_5_fu_1090_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_62_fu_1118_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_62_fu_1118_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_67_fu_1137_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_67_fu_1137_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_24_fu_1153_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_25_fu_1157_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_25_fu_1163_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2629_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_89_fu_1181_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_15_fu_1187_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln_fu_1208_p3 : STD_LOGIC_VECTOR (46 downto 0);
    signal shl_ln1319_1_fu_1219_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln1319_2_fu_1215_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1319_3_fu_1226_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_4_fu_1230_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal probs_V_20_fu_1236_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_10_fu_1253_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_14_fu_1272_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_14_fu_1272_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_6_fu_1288_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_7_fu_1292_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_7_fu_1298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2636_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_36_fu_1316_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal exponent_V_6_fu_1322_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal X_V_9_fu_1202_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1319_2_fu_1347_p3 : STD_LOGIC_VECTOR (46 downto 0);
    signal shl_ln1319_3_fu_1358_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1319_33_fu_1354_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1319_34_fu_1365_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_63_fu_1369_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal probs_V_29_fu_1375_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_69_fu_1392_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_73_fu_1411_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_73_fu_1411_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_26_fu_1427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_27_fu_1431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_27_fu_1437_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2643_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_95_fu_1455_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_16_fu_1461_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_16_fu_1492_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_20_fu_1511_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_20_fu_1511_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_8_fu_1527_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_9_fu_1531_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_9_fu_1537_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2650_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_42_fu_1555_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal exponent_V_7_fu_1561_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_75_fu_1582_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_79_fu_1601_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_79_fu_1601_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_28_fu_1617_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_29_fu_1621_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_29_fu_1627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2657_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_101_fu_1645_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal exponent_V_17_fu_1651_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_106_fu_1669_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_22_fu_1681_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_26_fu_1700_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_26_fu_1700_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_10_fu_1716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_11_fu_1720_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_11_fu_1726_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2664_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_48_fu_1744_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal exponent_V_8_fu_1750_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_81_fu_1771_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_85_fu_1790_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_85_fu_1790_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_30_fu_1806_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_31_fu_1810_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_31_fu_1816_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_107_fu_1834_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal r_V_28_fu_1857_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_32_fu_1876_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_32_fu_1876_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_12_fu_1892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_13_fu_1896_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_13_fu_1902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2671_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_54_fu_1920_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal exponent_V_9_fu_1926_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_87_fu_1947_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_91_fu_1966_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_91_fu_1966_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_32_fu_1982_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_33_fu_1986_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_33_fu_1992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2678_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_113_fu_2010_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal exponent_V_19_fu_2016_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_34_fu_2037_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_38_fu_2056_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_38_fu_2056_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_14_fu_2072_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_15_fu_2076_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_15_fu_2082_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_93_fu_2100_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_97_fu_2119_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_97_fu_2119_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_34_fu_2135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_35_fu_2139_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_35_fu_2145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_40_fu_2163_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_44_fu_2182_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_44_fu_2182_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln1349_16_fu_2198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_17_fu_2202_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_17_fu_2208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_99_fu_2226_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_103_fu_2245_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_103_fu_2245_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln1349_36_fu_2261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_37_fu_2265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_37_fu_2271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_46_fu_2289_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_50_fu_2308_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_50_fu_2308_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1349_18_fu_2324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_19_fu_2328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_19_fu_2334_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_105_fu_2352_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_109_fu_2371_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_109_fu_2371_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln1349_38_fu_2387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1349_39_fu_2391_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1349_39_fu_2397_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_52_fu_2415_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_56_fu_2434_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_56_fu_2434_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_111_fu_2456_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_115_fu_2475_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_115_fu_2475_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_58_fu_2497_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_117_fu_2519_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal probs_V_19_fu_2525_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal probs_V_fu_2503_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln260_fu_2535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_pkt_data_V_fu_2541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2552_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2559_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2566_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2573_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2580_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2587_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2594_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2601_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2608_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_2615_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_2622_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2629_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2636_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2643_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2650_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2657_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2664_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2671_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2678_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2552_ce : STD_LOGIC;
    signal grp_fu_2559_ce : STD_LOGIC;
    signal grp_fu_2566_ce : STD_LOGIC;
    signal grp_fu_2573_ce : STD_LOGIC;
    signal grp_fu_2580_ce : STD_LOGIC;
    signal grp_fu_2587_ce : STD_LOGIC;
    signal grp_fu_2594_ce : STD_LOGIC;
    signal grp_fu_2601_ce : STD_LOGIC;
    signal grp_fu_2608_ce : STD_LOGIC;
    signal grp_fu_2615_ce : STD_LOGIC;
    signal grp_fu_2622_ce : STD_LOGIC;
    signal grp_fu_2629_ce : STD_LOGIC;
    signal grp_fu_2636_ce : STD_LOGIC;
    signal grp_fu_2643_ce : STD_LOGIC;
    signal grp_fu_2650_ce : STD_LOGIC;
    signal grp_fu_2657_ce : STD_LOGIC;
    signal grp_fu_2664_ce : STD_LOGIC;
    signal grp_fu_2671_ce : STD_LOGIC;
    signal grp_fu_2678_ce : STD_LOGIC;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state19 : BOOLEAN;
    signal regslice_both_in_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal in_stream_TVALID_int_regslice : STD_LOGIC;
    signal in_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_in_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_in_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal out_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal out_stream_TVALID_int_regslice : STD_LOGIC;
    signal out_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gaussian_nb_exp_32_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_nb_mul_42s_16s_56_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (41 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component gaussian_nb_mul_40s_16s_54_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component gaussian_nb_mul_36s_16s_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (35 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component gaussian_nb_mul_37s_16s_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (36 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component gaussian_nb_mul_39s_16s_53_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (38 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (52 downto 0) );
    end component;


    component gaussian_nb_mul_32s_27ns_56_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component gaussian_nb_mul_32s_28ns_56_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component gaussian_nb_mul_32s_29ns_56_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component gaussian_nb_mul_32s_32s_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component gaussian_nb_mul_41s_16s_55_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (40 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (54 downto 0) );
    end component;


    component gaussian_nb_mul_16s_30s_46_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component gaussian_nb_mul_46s_16s_60_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (45 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component gaussian_nb_mul_35s_16s_50_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (34 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component gaussian_nb_mul_32s_26ns_56_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component gaussian_nb_mul_32s_21ns_52_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component gaussian_nb_mul_32s_20ns_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component gaussian_nb_mul_32s_28s_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component gaussian_nb_mul_32s_27s_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component gaussian_nb_mul_32s_18ns_50_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component gaussian_nb_mul_32s_26s_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component gaussian_nb_mul_mul_16s_26s_42_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component gaussian_nb_mul_mul_16s_24s_40_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component gaussian_nb_mul_mul_16s_20s_36_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component gaussian_nb_mul_mul_16s_21s_37_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component gaussian_nb_mul_mul_16s_23s_39_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component gaussian_nb_mul_mul_16s_25s_41_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (24 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component gaussian_nb_mul_mul_16s_19s_35_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component gaussian_nb_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_exp_32_16_s_fu_269 : component gaussian_nb_exp_32_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_exp_32_16_s_fu_269_ap_start,
        ap_done => grp_exp_32_16_s_fu_269_ap_done,
        ap_idle => grp_exp_32_16_s_fu_269_ap_idle,
        ap_ready => grp_exp_32_16_s_fu_269_ap_ready,
        ap_ce => grp_exp_32_16_s_fu_269_ap_ce,
        x => grp_exp_32_16_s_fu_269_x,
        ap_return => grp_exp_32_16_s_fu_269_ap_return);

    grp_exp_32_16_s_fu_280 : component gaussian_nb_exp_32_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_exp_32_16_s_fu_280_ap_start,
        ap_done => grp_exp_32_16_s_fu_280_ap_done,
        ap_idle => grp_exp_32_16_s_fu_280_ap_idle,
        ap_ready => grp_exp_32_16_s_fu_280_ap_ready,
        ap_ce => grp_exp_32_16_s_fu_280_ap_ce,
        x => grp_exp_32_16_s_fu_280_x,
        ap_return => grp_exp_32_16_s_fu_280_ap_return);

    grp_exp_32_16_s_fu_291 : component gaussian_nb_exp_32_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_exp_32_16_s_fu_291_ap_start,
        ap_done => grp_exp_32_16_s_fu_291_ap_done,
        ap_idle => grp_exp_32_16_s_fu_291_ap_idle,
        ap_ready => grp_exp_32_16_s_fu_291_ap_ready,
        ap_ce => grp_exp_32_16_s_fu_291_ap_ce,
        x => grp_exp_32_16_s_fu_291_x,
        ap_return => grp_exp_32_16_s_fu_291_ap_return);

    grp_exp_32_16_s_fu_302 : component gaussian_nb_exp_32_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_exp_32_16_s_fu_302_ap_start,
        ap_done => grp_exp_32_16_s_fu_302_ap_done,
        ap_idle => grp_exp_32_16_s_fu_302_ap_idle,
        ap_ready => grp_exp_32_16_s_fu_302_ap_ready,
        ap_ce => grp_exp_32_16_s_fu_302_ap_ce,
        x => grp_exp_32_16_s_fu_302_x,
        ap_return => grp_exp_32_16_s_fu_302_ap_return);

    mul_42s_16s_56_1_1_U9 : component gaussian_nb_mul_42s_16s_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 42,
        din1_WIDTH => 16,
        dout_WIDTH => 56)
    port map (
        din0 => grp_fu_2552_p2,
        din1 => diff_reg_2690,
        dout => r_V_1_fu_500_p2);

    mul_40s_16s_54_1_1_U10 : component gaussian_nb_mul_40s_16s_54_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 16,
        dout_WIDTH => 54)
    port map (
        din0 => grp_fu_2559_p2,
        din1 => diff_1_reg_2700,
        dout => r_V_6_fu_527_p2);

    mul_36s_16s_51_1_1_U11 : component gaussian_nb_mul_36s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 36,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2566_p2,
        din1 => diff_10_reg_2710,
        dout => r_V_60_fu_564_p2);

    mul_36s_16s_51_1_1_U12 : component gaussian_nb_mul_36s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 36,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2573_p2,
        din1 => diff_11_reg_2720,
        dout => r_V_65_fu_591_p2);

    mul_37s_16s_51_1_1_U13 : component gaussian_nb_mul_37s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 37,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2580_p2,
        din1 => diff_2_reg_2730,
        dout => r_V_12_fu_634_p2);

    mul_37s_16s_51_1_1_U14 : component gaussian_nb_mul_37s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 37,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2587_p2,
        din1 => diff_12_reg_2740,
        dout => r_V_71_fu_671_p2);

    mul_37s_16s_51_1_1_U15 : component gaussian_nb_mul_37s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 37,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2594_p2,
        din1 => diff_3_reg_2750,
        dout => r_V_18_fu_714_p2);

    mul_36s_16s_51_1_1_U16 : component gaussian_nb_mul_36s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 36,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2601_p2,
        din1 => diff_13_reg_2760,
        dout => r_V_77_fu_751_p2);

    mul_39s_16s_53_1_1_U17 : component gaussian_nb_mul_39s_16s_53_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 39,
        din1_WIDTH => 16,
        dout_WIDTH => 53)
    port map (
        din0 => grp_fu_2608_p2,
        din1 => diff_4_reg_2770,
        dout => r_V_24_fu_838_p2);

    mul_39s_16s_53_1_1_U18 : component gaussian_nb_mul_39s_16s_53_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 39,
        din1_WIDTH => 16,
        dout_WIDTH => 53)
    port map (
        din0 => grp_fu_2615_p2,
        din1 => diff_14_reg_2780,
        dout => r_V_83_fu_987_p2);

    mul_32s_27ns_56_1_1_U19 : component gaussian_nb_mul_32s_27ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 27,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_2_reg_2835,
        din1 => r_V_3_fu_1021_p1,
        dout => r_V_3_fu_1021_p2);

    mul_32s_27ns_56_1_1_U20 : component gaussian_nb_mul_32s_27ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 27,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_7_reg_2840,
        din1 => r_V_8_fu_1040_p1,
        dout => r_V_8_fu_1040_p2);

    mul_36s_16s_51_1_1_U21 : component gaussian_nb_mul_36s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 36,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2622_p2,
        din1 => diff_5_reg_2790,
        dout => r_V_30_fu_1084_p2);

    mul_32s_28ns_56_1_1_U22 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_61_reg_2855,
        din1 => r_V_62_fu_1118_p1,
        dout => r_V_62_fu_1118_p2);

    mul_32s_29ns_56_1_1_U23 : component gaussian_nb_mul_32s_29ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 29,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_66_reg_2860,
        din1 => r_V_67_fu_1137_p1,
        dout => r_V_67_fu_1137_p2);

    mul_36s_16s_51_1_1_U24 : component gaussian_nb_mul_36s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 36,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2629_p2,
        din1 => diff_15_reg_2800,
        dout => r_V_89_fu_1181_p2);

    mul_32s_32s_48_1_1_U25 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_20_fu_1236_p4,
        din1 => prob_V_reg_2882,
        dout => r_V_10_fu_1253_p2);

    mul_32s_28ns_56_1_1_U26 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_13_reg_2887,
        din1 => r_V_14_fu_1272_p1,
        dout => r_V_14_fu_1272_p2);

    mul_40s_16s_54_1_1_U27 : component gaussian_nb_mul_40s_16s_54_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 16,
        dout_WIDTH => 54)
    port map (
        din0 => grp_fu_2636_p2,
        din1 => diff_6_reg_2810,
        dout => r_V_36_fu_1316_p2);

    mul_32s_32s_48_1_1_U28 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_29_fu_1375_p4,
        din1 => prob_V_8_reg_2908,
        dout => r_V_69_fu_1392_p2);

    mul_32s_28ns_56_1_1_U29 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_72_reg_2913,
        din1 => r_V_73_fu_1411_p1,
        dout => r_V_73_fu_1411_p2);

    mul_37s_16s_51_1_1_U30 : component gaussian_nb_mul_37s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 37,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2643_p2,
        din1 => diff_16_reg_2820,
        dout => r_V_95_fu_1455_p2);

    mul_32s_32s_48_1_1_U31 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_21_reg_2918,
        din1 => prob_V_1_reg_2923,
        dout => r_V_16_fu_1492_p2);

    mul_32s_28ns_56_1_1_U32 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_19_reg_2928,
        din1 => r_V_20_fu_1511_p1,
        dout => r_V_20_fu_1511_p2);

    mul_41s_16s_55_1_1_U33 : component gaussian_nb_mul_41s_16s_55_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 41,
        din1_WIDTH => 16,
        dout_WIDTH => 55)
    port map (
        din0 => grp_fu_2650_p2,
        din1 => diff_7_reg_2845,
        dout => r_V_42_fu_1555_p2);

    mul_32s_32s_48_1_1_U34 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_30_reg_2943,
        din1 => prob_V_9_reg_2948,
        dout => r_V_75_fu_1582_p2);

    mul_32s_28ns_56_1_1_U35 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_78_reg_2953,
        din1 => r_V_79_fu_1601_p1,
        dout => r_V_79_fu_1601_p2);

    mul_42s_16s_56_1_1_U36 : component gaussian_nb_mul_42s_16s_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 42,
        din1_WIDTH => 16,
        dout_WIDTH => 56)
    port map (
        din0 => grp_fu_2657_p2,
        din1 => X_V_10_reg_2830,
        dout => r_V_101_fu_1645_p2);

    mul_16s_30s_46_1_1_U37 : component gaussian_nb_mul_16s_30s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 30,
        dout_WIDTH => 46)
    port map (
        din0 => X_V_11_reg_2870,
        din1 => r_V_106_fu_1669_p1,
        dout => r_V_106_fu_1669_p2);

    mul_32s_32s_48_1_1_U38 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_22_reg_2968,
        din1 => prob_V_2_reg_2973,
        dout => r_V_22_fu_1681_p2);

    mul_32s_27ns_56_1_1_U39 : component gaussian_nb_mul_32s_27ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 27,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_25_reg_2978,
        din1 => r_V_26_fu_1700_p1,
        dout => r_V_26_fu_1700_p2);

    mul_41s_16s_55_1_1_U40 : component gaussian_nb_mul_41s_16s_55_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 41,
        din1_WIDTH => 16,
        dout_WIDTH => 55)
    port map (
        din0 => grp_fu_2664_p2,
        din1 => diff_8_reg_2892,
        dout => r_V_48_fu_1744_p2);

    mul_32s_32s_48_1_1_U41 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_31_reg_2983,
        din1 => prob_V_10_reg_2988,
        dout => r_V_81_fu_1771_p2);

    mul_32s_27ns_56_1_1_U42 : component gaussian_nb_mul_32s_27ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 27,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_84_reg_2993,
        din1 => r_V_85_fu_1790_p1,
        dout => r_V_85_fu_1790_p2);

    mul_46s_16s_60_1_1_U43 : component gaussian_nb_mul_46s_16s_60_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 46,
        din1_WIDTH => 16,
        dout_WIDTH => 60)
    port map (
        din0 => r_V_106_reg_2998,
        din1 => X_V_11_reg_2870,
        dout => r_V_107_fu_1834_p2);

    mul_32s_32s_48_1_1_U44 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_23_reg_3003,
        din1 => prob_V_3_reg_3008,
        dout => r_V_28_fu_1857_p2);

    mul_32s_28ns_56_1_1_U45 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_31_reg_3013,
        din1 => r_V_32_fu_1876_p1,
        dout => r_V_32_fu_1876_p2);

    mul_36s_16s_51_1_1_U46 : component gaussian_nb_mul_36s_16s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 36,
        din1_WIDTH => 16,
        dout_WIDTH => 51)
    port map (
        din0 => grp_fu_2671_p2,
        din1 => diff_9_reg_2933,
        dout => r_V_54_fu_1920_p2);

    mul_32s_32s_48_1_1_U47 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_32_reg_3018,
        din1 => prob_V_11_reg_3023,
        dout => r_V_87_fu_1947_p2);

    mul_32s_28ns_56_1_1_U48 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_90_reg_3028,
        din1 => r_V_91_fu_1966_p1,
        dout => r_V_91_fu_1966_p2);

    mul_35s_16s_50_1_1_U49 : component gaussian_nb_mul_35s_16s_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 35,
        din1_WIDTH => 16,
        dout_WIDTH => 50)
    port map (
        din0 => grp_fu_2678_p2,
        din1 => diff_19_reg_2958,
        dout => r_V_113_fu_2010_p2);

    mul_32s_32s_48_1_1_U50 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_24_reg_3033,
        din1 => prob_V_4_reg_3038,
        dout => r_V_34_fu_2037_p2);

    mul_32s_26ns_56_1_1_U51 : component gaussian_nb_mul_32s_26ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 26,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_37_reg_3043,
        din1 => r_V_38_fu_2056_p1,
        dout => r_V_38_fu_2056_p2);

    mul_32s_32s_48_1_1_U52 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_33_reg_3048,
        din1 => prob_V_12_reg_3053,
        dout => r_V_93_fu_2100_p2);

    mul_32s_28ns_56_1_1_U53 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_96_reg_3058,
        din1 => r_V_97_fu_2119_p1,
        dout => r_V_97_fu_2119_p2);

    mul_32s_32s_48_1_1_U54 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_25_reg_3063,
        din1 => prob_V_5_reg_3068,
        dout => r_V_40_fu_2163_p2);

    mul_32s_21ns_52_1_1_U55 : component gaussian_nb_mul_32s_21ns_52_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        din0 => r_V_43_reg_3073,
        din1 => r_V_44_fu_2182_p1,
        dout => r_V_44_fu_2182_p2);

    mul_32s_32s_48_1_1_U56 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_34_reg_3078,
        din1 => prob_V_13_reg_3083,
        dout => r_V_99_fu_2226_p2);

    mul_32s_20ns_51_1_1_U57 : component gaussian_nb_mul_32s_20ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 20,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_102_reg_3088,
        din1 => r_V_103_fu_2245_p1,
        dout => r_V_103_fu_2245_p2);

    mul_32s_28s_48_1_1_U58 : component gaussian_nb_mul_32s_28s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_26_reg_3093,
        din1 => trunc_ln864_5_reg_3098,
        dout => r_V_46_fu_2289_p2);

    mul_32s_26ns_56_1_1_U59 : component gaussian_nb_mul_32s_26ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 26,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_49_reg_3103,
        din1 => r_V_50_fu_2308_p1,
        dout => r_V_50_fu_2308_p2);

    mul_32s_27s_48_1_1_U60 : component gaussian_nb_mul_32s_27s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 27,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_35_reg_3108,
        din1 => trunc_ln864_s_reg_3113,
        dout => r_V_105_fu_2352_p2);

    mul_32s_18ns_50_1_1_U61 : component gaussian_nb_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_108_reg_3118,
        din1 => r_V_109_fu_2371_p1,
        dout => r_V_109_fu_2371_p2);

    mul_32s_32s_48_1_1_U62 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_27_reg_3123,
        din1 => prob_V_6_reg_3128,
        dout => r_V_52_fu_2415_p2);

    mul_32s_28ns_56_1_1_U63 : component gaussian_nb_mul_32s_28ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 28,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_55_reg_3133,
        din1 => r_V_56_fu_2434_p1,
        dout => r_V_56_fu_2434_p2);

    mul_32s_26s_48_1_1_U64 : component gaussian_nb_mul_32s_26s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 26,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_36_reg_3138,
        din1 => trunc_ln864_1_reg_3143,
        dout => r_V_111_fu_2456_p2);

    mul_32s_29ns_56_1_1_U65 : component gaussian_nb_mul_32s_29ns_56_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 29,
        dout_WIDTH => 56)
    port map (
        din0 => r_V_114_reg_3148,
        din1 => r_V_115_fu_2475_p1,
        dout => r_V_115_fu_2475_p2);

    mul_32s_32s_48_1_1_U66 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_28_reg_3153,
        din1 => prob_V_7_reg_3158,
        dout => r_V_58_fu_2497_p2);

    mul_32s_32s_48_1_1_U67 : component gaussian_nb_mul_32s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => probs_V_37_reg_3163,
        din1 => prob_V_14_reg_3168,
        dout => r_V_117_fu_2519_p2);

    mul_mul_16s_26s_42_4_1_U68 : component gaussian_nb_mul_mul_16s_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_fu_396_p2,
        din1 => grp_fu_2552_p1,
        ce => grp_fu_2552_ce,
        dout => grp_fu_2552_p2);

    mul_mul_16s_24s_40_4_1_U69 : component gaussian_nb_mul_mul_16s_24s_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_1_fu_406_p2,
        din1 => grp_fu_2559_p1,
        ce => grp_fu_2559_ce,
        dout => grp_fu_2559_p2);

    mul_mul_16s_20s_36_4_1_U70 : component gaussian_nb_mul_mul_16s_20s_36_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 20,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_10_fu_416_p2,
        din1 => grp_fu_2566_p1,
        ce => grp_fu_2566_ce,
        dout => grp_fu_2566_p2);

    mul_mul_16s_20s_36_4_1_U71 : component gaussian_nb_mul_mul_16s_20s_36_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 20,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_11_fu_426_p2,
        din1 => grp_fu_2573_p1,
        ce => grp_fu_2573_ce,
        dout => grp_fu_2573_p2);

    mul_mul_16s_21s_37_4_1_U72 : component gaussian_nb_mul_mul_16s_21s_37_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 21,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_2_fu_442_p2,
        din1 => grp_fu_2580_p1,
        ce => grp_fu_2580_ce,
        dout => grp_fu_2580_p2);

    mul_mul_16s_21s_37_4_1_U73 : component gaussian_nb_mul_mul_16s_21s_37_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 21,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_12_fu_452_p2,
        din1 => grp_fu_2587_p1,
        ce => grp_fu_2587_ce,
        dout => grp_fu_2587_p2);

    mul_mul_16s_21s_37_4_1_U74 : component gaussian_nb_mul_mul_16s_21s_37_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 21,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_3_fu_468_p2,
        din1 => grp_fu_2594_p1,
        ce => grp_fu_2594_ce,
        dout => grp_fu_2594_p2);

    mul_mul_16s_20s_36_4_1_U75 : component gaussian_nb_mul_mul_16s_20s_36_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 20,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_13_fu_478_p2,
        din1 => grp_fu_2601_p1,
        ce => grp_fu_2601_ce,
        dout => grp_fu_2601_p2);

    mul_mul_16s_23s_39_4_1_U76 : component gaussian_nb_mul_mul_16s_23s_39_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 23,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_4_fu_548_p2,
        din1 => grp_fu_2608_p1,
        ce => grp_fu_2608_ce,
        dout => grp_fu_2608_p2);

    mul_mul_16s_23s_39_4_1_U77 : component gaussian_nb_mul_mul_16s_23s_39_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 23,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_14_fu_612_p2,
        din1 => grp_fu_2615_p1,
        ce => grp_fu_2615_ce,
        dout => grp_fu_2615_p2);

    mul_mul_16s_20s_36_4_1_U78 : component gaussian_nb_mul_mul_16s_20s_36_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 20,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_5_fu_655_p2,
        din1 => grp_fu_2622_p1,
        ce => grp_fu_2622_ce,
        dout => grp_fu_2622_p2);

    mul_mul_16s_20s_36_4_1_U79 : component gaussian_nb_mul_mul_16s_20s_36_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 20,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_15_fu_692_p2,
        din1 => grp_fu_2629_p1,
        ce => grp_fu_2629_ce,
        dout => grp_fu_2629_p2);

    mul_mul_16s_24s_40_4_1_U80 : component gaussian_nb_mul_mul_16s_24s_40_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_6_fu_735_p2,
        din1 => grp_fu_2636_p1,
        ce => grp_fu_2636_ce,
        dout => grp_fu_2636_p2);

    mul_mul_16s_21s_37_4_1_U81 : component gaussian_nb_mul_mul_16s_21s_37_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 21,
        dout_WIDTH => 37)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_16_fu_772_p2,
        din1 => grp_fu_2643_p1,
        ce => grp_fu_2643_ce,
        dout => grp_fu_2643_p2);

    mul_mul_16s_25s_41_4_1_U82 : component gaussian_nb_mul_mul_16s_25s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_7_fu_859_p2,
        din1 => grp_fu_2650_p1,
        ce => grp_fu_2650_ce,
        dout => grp_fu_2650_p2);

    mul_mul_16s_26s_42_4_1_U83 : component gaussian_nb_mul_mul_16s_26s_42_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 26,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => X_V_10_fu_782_p2,
        din1 => grp_fu_2657_p1,
        ce => grp_fu_2657_ce,
        dout => grp_fu_2657_p2);

    mul_mul_16s_25s_41_4_1_U84 : component gaussian_nb_mul_mul_16s_25s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 25,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_8_fu_1105_p2,
        din1 => grp_fu_2664_p1,
        ce => grp_fu_2664_ce,
        dout => grp_fu_2664_p2);

    mul_mul_16s_20s_36_4_1_U85 : component gaussian_nb_mul_mul_16s_20s_36_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 20,
        dout_WIDTH => 36)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_9_fu_1337_p2,
        din1 => grp_fu_2671_p1,
        ce => grp_fu_2671_ce,
        dout => grp_fu_2671_p2);

    mul_mul_16s_19s_35_4_1_U86 : component gaussian_nb_mul_mul_16s_19s_35_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 19,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => diff_19_fu_1476_p2,
        din1 => grp_fu_2678_p1,
        ce => grp_fu_2678_ce,
        dout => grp_fu_2678_p2);

    regslice_both_in_stream_V_data_V_U : component gaussian_nb_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDATA,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_data_V_U_ack_in,
        data_out => in_stream_TDATA_int_regslice,
        vld_out => in_stream_TVALID_int_regslice,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_data_V_U_apdone_blk);

    regslice_both_in_stream_V_keep_V_U : component gaussian_nb_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TKEEP,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_keep_V_U_ack_in,
        data_out => in_stream_TKEEP_int_regslice,
        vld_out => regslice_both_in_stream_V_keep_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_keep_V_U_apdone_blk);

    regslice_both_in_stream_V_strb_V_U : component gaussian_nb_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TSTRB,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_strb_V_U_ack_in,
        data_out => in_stream_TSTRB_int_regslice,
        vld_out => regslice_both_in_stream_V_strb_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_strb_V_U_apdone_blk);

    regslice_both_in_stream_V_last_V_U : component gaussian_nb_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TLAST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_last_V_U_ack_in,
        data_out => in_stream_TLAST_int_regslice,
        vld_out => regslice_both_in_stream_V_last_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_last_V_U_apdone_blk);

    regslice_both_out_stream_V_data_V_U : component gaussian_nb_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_stream_TDATA_int_regslice,
        vld_in => out_stream_TVALID_int_regslice,
        ack_in => out_stream_TREADY_int_regslice,
        data_out => out_stream_TDATA,
        vld_out => regslice_both_out_stream_V_data_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_data_V_U_apdone_blk);

    regslice_both_out_stream_V_keep_V_U : component gaussian_nb_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv2_0,
        vld_in => out_stream_TVALID_int_regslice,
        ack_in => regslice_both_out_stream_V_keep_V_U_ack_in_dummy,
        data_out => out_stream_TKEEP,
        vld_out => regslice_both_out_stream_V_keep_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_keep_V_U_apdone_blk);

    regslice_both_out_stream_V_strb_V_U : component gaussian_nb_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv2_0,
        vld_in => out_stream_TVALID_int_regslice,
        ack_in => regslice_both_out_stream_V_strb_V_U_ack_in_dummy,
        data_out => out_stream_TSTRB,
        vld_out => regslice_both_out_stream_V_strb_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_strb_V_U_apdone_blk);

    regslice_both_out_stream_V_last_V_U : component gaussian_nb_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv1_1,
        vld_in => out_stream_TVALID_int_regslice,
        ack_in => regslice_both_out_stream_V_last_V_U_ack_in_dummy,
        data_out => out_stream_TLAST,
        vld_out => regslice_both_out_stream_V_last_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_exp_32_16_s_fu_269_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_exp_32_16_s_fu_269_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = ap_NS_fsm_state10)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = ap_NS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_logic_1 = ap_NS_fsm_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_NS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_NS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5)) or ((ap_const_logic_1 = ap_NS_fsm_state13) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_const_logic_1 = ap_NS_fsm_state12) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = ap_NS_fsm_state11)))) then 
                    grp_exp_32_16_s_fu_269_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_exp_32_16_s_fu_269_ap_ready = ap_const_logic_1)) then 
                    grp_exp_32_16_s_fu_269_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_exp_32_16_s_fu_280_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_exp_32_16_s_fu_280_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = ap_NS_fsm_state10)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = ap_NS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_logic_1 = ap_NS_fsm_state8)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_NS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_NS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5)) or ((ap_const_logic_1 = ap_NS_fsm_state13) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_const_logic_1 = ap_NS_fsm_state12) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = ap_NS_fsm_state11)))) then 
                    grp_exp_32_16_s_fu_280_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_exp_32_16_s_fu_280_ap_ready = ap_const_logic_1)) then 
                    grp_exp_32_16_s_fu_280_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_exp_32_16_s_fu_291_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_exp_32_16_s_fu_291_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5))) then 
                    grp_exp_32_16_s_fu_291_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_exp_32_16_s_fu_291_ap_ready = ap_const_logic_1)) then 
                    grp_exp_32_16_s_fu_291_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_exp_32_16_s_fu_302_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_exp_32_16_s_fu_302_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5))) then 
                    grp_exp_32_16_s_fu_302_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_exp_32_16_s_fu_302_ap_ready = ap_const_logic_1)) then 
                    grp_exp_32_16_s_fu_302_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    X_V_10_reg_2830(15 downto 14) <= X_V_10_fu_782_p2(15 downto 14);
                    diff_7_reg_2845(15 downto 14) <= diff_7_fu_859_p2(15 downto 14);
                r_V_2_reg_2835 <= r_V_2_fu_802_p3;
                r_V_61_reg_2855 <= r_V_61_fu_917_p3;
                r_V_66_reg_2860 <= r_V_66_fu_973_p3;
                r_V_7_reg_2840 <= r_V_7_fu_824_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    X_V_11_reg_2870(15 downto 14) <= X_V_11_fu_1012_p2(15 downto 14);
                    diff_8_reg_2892(15 downto 14) <= diff_8_fu_1105_p2(15 downto 14);
                prob_V_8_reg_2908 <= r_V_67_fu_1137_p2(55 downto 24);
                prob_V_reg_2882 <= r_V_8_fu_1040_p2(55 downto 24);
                r_V_13_reg_2887 <= r_V_13_fu_1070_p3;
                r_V_72_reg_2913 <= r_V_72_fu_1167_p3;
                tmp_21_reg_2902 <= r_V_62_fu_1118_p2(55 downto 24);
                tmp_s_reg_2876 <= r_V_3_fu_1021_p2(55 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    diff_10_reg_2710(15 downto 14) <= diff_10_fu_416_p2(15 downto 14);
                    diff_11_reg_2720(15 downto 14) <= diff_11_fu_426_p2(15 downto 14);
                    diff_1_reg_2700(15 downto 14) <= diff_1_fu_406_p2(15 downto 14);
                    diff_reg_2690(15 downto 14) <= diff_fu_396_p2(15 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    diff_12_reg_2740(15 downto 14) <= diff_12_fu_452_p2(15 downto 14);
                    diff_2_reg_2730(15 downto 14) <= diff_2_fu_442_p2(15 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    diff_13_reg_2760(15 downto 14) <= diff_13_fu_478_p2(15 downto 14);
                    diff_3_reg_2750(15 downto 14) <= diff_3_fu_468_p2(15 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    diff_14_reg_2780(15 downto 14) <= diff_14_fu_612_p2(15 downto 14);
                    diff_4_reg_2770(15 downto 14) <= diff_4_fu_548_p2(15 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    diff_15_reg_2800(15 downto 14) <= diff_15_fu_692_p2(15 downto 14);
                    diff_5_reg_2790(15 downto 14) <= diff_5_fu_655_p2(15 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                    diff_16_reg_2820(15 downto 14) <= diff_16_fu_772_p2(15 downto 14);
                    diff_6_reg_2810(15 downto 14) <= diff_6_fu_735_p2(15 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    diff_19_reg_2958(15 downto 14) <= diff_19_fu_1476_p2(15 downto 14);
                    diff_9_reg_2933(15 downto 14) <= diff_9_fu_1337_p2(15 downto 14);
                prob_V_1_reg_2923 <= r_V_14_fu_1272_p2(55 downto 24);
                prob_V_9_reg_2948 <= r_V_73_fu_1411_p2(55 downto 24);
                probs_V_21_reg_2918 <= r_V_10_fu_1253_p2(47 downto 16);
                probs_V_30_reg_2943 <= r_V_69_fu_1392_p2(47 downto 16);
                r_V_19_reg_2928 <= r_V_19_fu_1302_p3;
                r_V_78_reg_2953 <= r_V_78_fu_1441_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                prob_V_10_reg_2988 <= r_V_79_fu_1601_p2(55 downto 24);
                prob_V_2_reg_2973 <= r_V_20_fu_1511_p2(55 downto 24);
                probs_V_22_reg_2968 <= r_V_16_fu_1492_p2(47 downto 16);
                probs_V_31_reg_2983 <= r_V_75_fu_1582_p2(47 downto 16);
                r_V_106_reg_2998 <= r_V_106_fu_1669_p2;
                r_V_25_reg_2978 <= r_V_25_fu_1541_p3;
                r_V_84_reg_2993 <= r_V_84_fu_1631_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                prob_V_11_reg_3023 <= r_V_85_fu_1790_p2(55 downto 24);
                prob_V_3_reg_3008 <= r_V_26_fu_1700_p2(55 downto 24);
                probs_V_23_reg_3003 <= r_V_22_fu_1681_p2(47 downto 16);
                probs_V_32_reg_3018 <= r_V_81_fu_1771_p2(47 downto 16);
                r_V_31_reg_3013 <= r_V_31_fu_1730_p3;
                r_V_90_reg_3028 <= r_V_90_fu_1820_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                prob_V_12_reg_3053 <= r_V_91_fu_1966_p2(55 downto 24);
                prob_V_4_reg_3038 <= r_V_32_fu_1876_p2(55 downto 24);
                probs_V_24_reg_3033 <= r_V_28_fu_1857_p2(47 downto 16);
                probs_V_33_reg_3048 <= r_V_87_fu_1947_p2(47 downto 16);
                r_V_37_reg_3043 <= r_V_37_fu_1906_p3;
                r_V_96_reg_3058 <= r_V_96_fu_1996_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                prob_V_13_reg_3083 <= r_V_97_fu_2119_p2(55 downto 24);
                prob_V_5_reg_3068 <= r_V_38_fu_2056_p2(55 downto 24);
                probs_V_25_reg_3063 <= r_V_34_fu_2037_p2(47 downto 16);
                probs_V_34_reg_3078 <= r_V_93_fu_2100_p2(47 downto 16);
                r_V_102_reg_3088 <= r_V_102_fu_2149_p3;
                r_V_43_reg_3073 <= r_V_43_fu_2086_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                prob_V_14_reg_3168 <= r_V_115_fu_2475_p2(55 downto 24);
                prob_V_7_reg_3158 <= r_V_56_fu_2434_p2(55 downto 24);
                probs_V_28_reg_3153 <= r_V_52_fu_2415_p2(47 downto 16);
                probs_V_37_reg_3163 <= r_V_111_fu_2456_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                prob_V_6_reg_3128 <= r_V_50_fu_2308_p2(55 downto 24);
                probs_V_27_reg_3123 <= r_V_46_fu_2289_p2(47 downto 16);
                probs_V_36_reg_3138 <= r_V_105_fu_2352_p2(47 downto 16);
                r_V_114_reg_3148 <= r_V_114_fu_2401_p3;
                r_V_55_reg_3133 <= r_V_55_fu_2338_p3;
                trunc_ln864_1_reg_3143 <= r_V_109_fu_2371_p2(49 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                probs_V_26_reg_3093 <= r_V_40_fu_2163_p2(47 downto 16);
                probs_V_35_reg_3108 <= r_V_99_fu_2226_p2(47 downto 16);
                r_V_108_reg_3118 <= r_V_108_fu_2275_p3;
                r_V_49_reg_3103 <= r_V_49_fu_2212_p3;
                trunc_ln864_5_reg_3098 <= r_V_44_fu_2182_p2(51 downto 24);
                trunc_ln864_s_reg_3113 <= r_V_103_fu_2245_p2(50 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                tmp_data_V_1_reg_2685 <= in_stream_TDATA_int_regslice;
            end if;
        end if;
    end process;
    diff_reg_2690(13 downto 0) <= "11110111011000";
    diff_1_reg_2700(13 downto 0) <= "11111011111000";
    diff_10_reg_2710(13 downto 0) <= "10001001100100";
    diff_11_reg_2720(13 downto 0) <= "10100101000000";
    diff_2_reg_2730(13 downto 0) <= "11001110001000";
    diff_12_reg_2740(13 downto 0) <= "00101101001000";
    diff_3_reg_2750(13 downto 0) <= "11101111000010";
    diff_13_reg_2760(13 downto 0) <= "11001011101101";
    diff_4_reg_2770(13 downto 0) <= "11010011111101";
    diff_14_reg_2780(13 downto 0) <= "11001001010111";
    diff_5_reg_2790(13 downto 0) <= "11100101101100";
    diff_15_reg_2800(13 downto 0) <= "10001101010101";
    diff_6_reg_2810(13 downto 0) <= "11101101111100";
    diff_16_reg_2820(13 downto 0) <= "00010011011111";
    X_V_10_reg_2830(13 downto 0) <= "00000000000000";
    diff_7_reg_2845(13 downto 0) <= "11111111111110";
    X_V_11_reg_2870(13 downto 0) <= "00000000000000";
    diff_8_reg_2892(13 downto 0) <= "11111110110010";
    diff_9_reg_2933(13 downto 0) <= "11100011101101";
    diff_19_reg_2958(13 downto 0) <= "01100101010101";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state19, regslice_both_out_stream_V_data_V_U_apdone_blk, in_stream_TVALID_int_regslice, out_stream_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((out_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if ((not(((out_stream_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    X_V_10_fu_782_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_11_fu_1012_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_1_fu_390_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_2_fu_436_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_3_fu_462_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_4_fu_488_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_5_fu_622_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_6_fu_702_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_9_fu_1202_p2 <= std_logic_vector(shift_left(unsigned(in_stream_TDATA_int_regslice),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    X_V_fu_385_p2 <= std_logic_vector(shift_left(unsigned(tmp_data_V_1_reg_2685),to_integer(unsigned('0' & ap_const_lv16_E(16-1 downto 0)))));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state10 <= ap_NS_fsm(9);
    ap_NS_fsm_state11 <= ap_NS_fsm(10);
    ap_NS_fsm_state12 <= ap_NS_fsm(11);
    ap_NS_fsm_state13 <= ap_NS_fsm(12);
    ap_NS_fsm_state5 <= ap_NS_fsm(4);
    ap_NS_fsm_state6 <= ap_NS_fsm(5);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);
    ap_NS_fsm_state8 <= ap_NS_fsm(7);
    ap_NS_fsm_state9 <= ap_NS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(out_stream_TREADY_int_regslice)
    begin
        if ((out_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state19_blk_assign_proc : process(regslice_both_out_stream_V_data_V_U_apdone_blk, out_stream_TREADY_int_regslice)
    begin
        if (((out_stream_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(in_stream_TVALID_int_regslice)
    begin
        if ((in_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state19_assign_proc : process(regslice_both_out_stream_V_data_V_U_apdone_blk, out_stream_TREADY_int_regslice)
    begin
                ap_block_state19 <= ((out_stream_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    diff_10_fu_416_p2 <= std_logic_vector(unsigned(X_V_fu_385_p2) + unsigned(ap_const_lv16_E264));
    diff_11_fu_426_p2 <= std_logic_vector(unsigned(X_V_1_fu_390_p2) + unsigned(ap_const_lv16_E940));
    diff_12_fu_452_p2 <= std_logic_vector(unsigned(X_V_2_fu_436_p2) + unsigned(ap_const_lv16_CB48));
    diff_13_fu_478_p2 <= std_logic_vector(unsigned(X_V_3_fu_462_p2) + unsigned(ap_const_lv16_F2ED));
    diff_14_fu_612_p2 <= std_logic_vector(unsigned(X_V_4_fu_488_p2) + unsigned(ap_const_lv16_F257));
    diff_15_fu_692_p2 <= std_logic_vector(unsigned(X_V_5_fu_622_p2) + unsigned(ap_const_lv16_E355));
    diff_16_fu_772_p2 <= std_logic_vector(unsigned(X_V_6_fu_702_p2) + unsigned(ap_const_lv16_C4DF));
    diff_19_fu_1476_p2 <= std_logic_vector(unsigned(X_V_9_fu_1202_p2) + unsigned(ap_const_lv16_D955));
    diff_1_fu_406_p2 <= std_logic_vector(unsigned(X_V_1_fu_390_p2) + unsigned(ap_const_lv16_FEF8));
    diff_2_fu_442_p2 <= std_logic_vector(unsigned(X_V_2_fu_436_p2) + unsigned(ap_const_lv16_F388));
    diff_3_fu_468_p2 <= std_logic_vector(unsigned(X_V_3_fu_462_p2) + unsigned(ap_const_lv16_FBC2));
    diff_4_fu_548_p2 <= std_logic_vector(unsigned(X_V_4_fu_488_p2) + unsigned(ap_const_lv16_F4FD));
    diff_5_fu_655_p2 <= std_logic_vector(unsigned(X_V_5_fu_622_p2) + unsigned(ap_const_lv16_F96C));
    diff_6_fu_735_p2 <= std_logic_vector(unsigned(X_V_6_fu_702_p2) + unsigned(ap_const_lv16_FB7C));
    diff_7_fu_859_p2 <= std_logic_vector(signed(X_V_10_fu_782_p2) + signed(ap_const_lv16_FFFE));
    diff_8_fu_1105_p2 <= std_logic_vector(signed(X_V_11_fu_1012_p2) + signed(ap_const_lv16_FFB2));
    diff_9_fu_1337_p2 <= std_logic_vector(unsigned(X_V_9_fu_1202_p2) + unsigned(ap_const_lv16_F8ED));
    diff_fu_396_p2 <= std_logic_vector(unsigned(X_V_fu_385_p2) + unsigned(ap_const_lv16_FDD8));
    exponent_V_10_fu_570_p4 <= r_V_60_fu_564_p2(50 downto 28);
    exponent_V_11_fu_597_p4 <= r_V_65_fu_591_p2(50 downto 28);
    exponent_V_12_fu_677_p4 <= r_V_71_fu_671_p2(50 downto 28);
    exponent_V_13_fu_757_p4 <= r_V_77_fu_751_p2(50 downto 28);
    exponent_V_14_fu_993_p4 <= r_V_83_fu_987_p2(52 downto 28);
    exponent_V_15_fu_1187_p4 <= r_V_89_fu_1181_p2(50 downto 28);
    exponent_V_16_fu_1461_p4 <= r_V_95_fu_1455_p2(50 downto 28);
    exponent_V_17_fu_1651_p4 <= r_V_101_fu_1645_p2(55 downto 28);
    exponent_V_19_fu_2016_p4 <= r_V_113_fu_2010_p2(49 downto 28);
    exponent_V_1_fu_533_p4 <= r_V_6_fu_527_p2(53 downto 28);
    exponent_V_2_fu_640_p4 <= r_V_12_fu_634_p2(50 downto 28);
    exponent_V_3_fu_720_p4 <= r_V_18_fu_714_p2(50 downto 28);
    exponent_V_4_fu_844_p4 <= r_V_24_fu_838_p2(52 downto 28);
    exponent_V_5_fu_1090_p4 <= r_V_30_fu_1084_p2(50 downto 28);
    exponent_V_6_fu_1322_p4 <= r_V_36_fu_1316_p2(53 downto 28);
    exponent_V_7_fu_1561_p4 <= r_V_42_fu_1555_p2(54 downto 28);
    exponent_V_8_fu_1750_p4 <= r_V_48_fu_1744_p2(54 downto 28);
    exponent_V_9_fu_1926_p4 <= r_V_54_fu_1920_p2(50 downto 28);
    exponent_V_fu_506_p4 <= r_V_1_fu_500_p2(55 downto 28);

    grp_exp_32_16_s_fu_269_ap_ce_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, in_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_exp_32_16_s_fu_269_ap_ce <= ap_const_logic_1;
        else 
            grp_exp_32_16_s_fu_269_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_exp_32_16_s_fu_269_ap_start <= grp_exp_32_16_s_fu_269_ap_start_reg;

    grp_exp_32_16_s_fu_269_x_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, sext_ln864_fu_516_p1, sext_ln864_2_fu_650_p1, sext_ln864_3_fu_730_p1, sext_ln864_4_fu_854_p1, sext_ln864_5_fu_1100_p1, sext_ln864_6_fu_1332_p1, sext_ln864_7_fu_1571_p1, sext_ln864_8_fu_1760_p1, sext_ln864_9_fu_1936_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_9_fu_1936_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_8_fu_1760_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_7_fu_1571_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_6_fu_1332_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_5_fu_1100_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_4_fu_854_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_3_fu_730_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_2_fu_650_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_exp_32_16_s_fu_269_x <= sext_ln864_fu_516_p1;
        else 
            grp_exp_32_16_s_fu_269_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_exp_32_16_s_fu_280_ap_ce_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, in_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_exp_32_16_s_fu_280_ap_ce <= ap_const_logic_1;
        else 
            grp_exp_32_16_s_fu_280_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_exp_32_16_s_fu_280_ap_start <= grp_exp_32_16_s_fu_280_ap_start_reg;

    grp_exp_32_16_s_fu_280_x_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, sext_ln864_1_fu_543_p1, sext_ln864_12_fu_687_p1, sext_ln864_13_fu_767_p1, sext_ln864_14_fu_1003_p1, sext_ln864_15_fu_1197_p1, sext_ln864_16_fu_1471_p1, sext_ln864_17_fu_1661_p1, sext_ln864_18_fu_2026_p1, r_V_107_fu_1834_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_exp_32_16_s_fu_280_x <= sext_ln864_18_fu_2026_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_exp_32_16_s_fu_280_x <= r_V_107_fu_1834_p2(59 downto 28);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_exp_32_16_s_fu_280_x <= sext_ln864_17_fu_1661_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_exp_32_16_s_fu_280_x <= sext_ln864_16_fu_1471_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_exp_32_16_s_fu_280_x <= sext_ln864_15_fu_1197_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_exp_32_16_s_fu_280_x <= sext_ln864_14_fu_1003_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_exp_32_16_s_fu_280_x <= sext_ln864_13_fu_767_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_exp_32_16_s_fu_280_x <= sext_ln864_12_fu_687_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_exp_32_16_s_fu_280_x <= sext_ln864_1_fu_543_p1;
        else 
            grp_exp_32_16_s_fu_280_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_exp_32_16_s_fu_291_ap_ce_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            grp_exp_32_16_s_fu_291_ap_ce <= ap_const_logic_1;
        else 
            grp_exp_32_16_s_fu_291_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_exp_32_16_s_fu_291_ap_start <= grp_exp_32_16_s_fu_291_ap_start_reg;
        grp_exp_32_16_s_fu_291_x <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_10_fu_570_p4),32));


    grp_exp_32_16_s_fu_302_ap_ce_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            grp_exp_32_16_s_fu_302_ap_ce <= ap_const_logic_1;
        else 
            grp_exp_32_16_s_fu_302_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_exp_32_16_s_fu_302_ap_start <= grp_exp_32_16_s_fu_302_ap_start_reg;
        grp_exp_32_16_s_fu_302_x <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_11_fu_597_p4),32));


    grp_fu_2552_ce_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_2552_ce <= ap_const_logic_1;
        else 
            grp_fu_2552_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2552_p1 <= ap_const_lv42_3FFFE287958(26 - 1 downto 0);

    grp_fu_2559_ce_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_2559_ce <= ap_const_logic_1;
        else 
            grp_fu_2559_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2559_p1 <= ap_const_lv40_FFFF8F224D(24 - 1 downto 0);

    grp_fu_2566_ce_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_2566_ce <= ap_const_logic_1;
        else 
            grp_fu_2566_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2566_p1 <= ap_const_lv36_FFFFA03D7(20 - 1 downto 0);

    grp_fu_2573_ce_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_2573_ce <= ap_const_logic_1;
        else 
            grp_fu_2573_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2573_p1 <= ap_const_lv36_FFFFB2D91(20 - 1 downto 0);

    grp_fu_2580_ce_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_2580_ce <= ap_const_logic_1;
        else 
            grp_fu_2580_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2580_p1 <= ap_const_lv37_1FFFF5BE35(21 - 1 downto 0);

    grp_fu_2587_ce_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_2587_ce <= ap_const_logic_1;
        else 
            grp_fu_2587_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2587_p1 <= ap_const_lv37_1FFFF7C312(21 - 1 downto 0);

    grp_fu_2594_ce_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            grp_fu_2594_ce <= ap_const_logic_1;
        else 
            grp_fu_2594_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2594_p1 <= ap_const_lv37_1FFFF1C624(21 - 1 downto 0);

    grp_fu_2601_ce_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            grp_fu_2601_ce <= ap_const_logic_1;
        else 
            grp_fu_2601_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2601_p1 <= ap_const_lv36_FFFFA5E76(20 - 1 downto 0);

    grp_fu_2608_ce_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            grp_fu_2608_ce <= ap_const_logic_1;
        else 
            grp_fu_2608_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2608_p1 <= ap_const_lv39_7FFFD366E9(23 - 1 downto 0);

    grp_fu_2615_ce_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            grp_fu_2615_ce <= ap_const_logic_1;
        else 
            grp_fu_2615_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2615_p1 <= ap_const_lv39_7FFFDC81CA(23 - 1 downto 0);

    grp_fu_2622_ce_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_fu_2622_ce <= ap_const_logic_1;
        else 
            grp_fu_2622_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2622_p1 <= ap_const_lv36_FFFF8E560(20 - 1 downto 0);

    grp_fu_2629_ce_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_fu_2629_ce <= ap_const_logic_1;
        else 
            grp_fu_2629_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2629_p1 <= ap_const_lv36_FFFFA9D2F(20 - 1 downto 0);

    grp_fu_2636_ce_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_fu_2636_ce <= ap_const_logic_1;
        else 
            grp_fu_2636_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2636_p1 <= ap_const_lv40_FFFFA9ABC6(24 - 1 downto 0);

    grp_fu_2643_ce_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_fu_2643_ce <= ap_const_logic_1;
        else 
            grp_fu_2643_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2643_p1 <= ap_const_lv37_1FFFF121CA(21 - 1 downto 0);

    grp_fu_2650_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, in_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_fu_2650_ce <= ap_const_logic_1;
        else 
            grp_fu_2650_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2650_p1 <= ap_const_lv41_1FFFF587DB2(25 - 1 downto 0);

    grp_fu_2657_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, in_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_fu_2657_ce <= ap_const_logic_1;
        else 
            grp_fu_2657_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2657_p1 <= ap_const_lv42_3FFFE5F0395(26 - 1 downto 0);

    grp_fu_2664_ce_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, in_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_fu_2664_ce <= ap_const_logic_1;
        else 
            grp_fu_2664_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2664_p1 <= ap_const_lv41_1FFFF0BFCAC(25 - 1 downto 0);

    grp_fu_2671_ce_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, in_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_fu_2671_ce <= ap_const_logic_1;
        else 
            grp_fu_2671_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2671_p1 <= ap_const_lv36_FFFF965E3(20 - 1 downto 0);

    grp_fu_2678_ce_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, in_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            grp_fu_2678_ce <= ap_const_logic_1;
        else 
            grp_fu_2678_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2678_p1 <= ap_const_lv35_7FFFC6418(19 - 1 downto 0);
    grp_fu_317_p3 <= grp_exp_32_16_s_fu_269_ap_return(31 downto 31);
    grp_fu_325_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(grp_exp_32_16_s_fu_269_ap_return));
    grp_fu_331_p4 <= grp_fu_325_p2(31 downto 1);
    grp_fu_341_p4 <= grp_exp_32_16_s_fu_269_ap_return(31 downto 1);
    grp_fu_351_p3 <= grp_exp_32_16_s_fu_280_ap_return(31 downto 31);
    grp_fu_359_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(grp_exp_32_16_s_fu_280_ap_return));
    grp_fu_365_p4 <= grp_fu_359_p2(31 downto 1);
    grp_fu_375_p4 <= grp_exp_32_16_s_fu_280_ap_return(31 downto 1);
    icmp_ln260_fu_2535_p2 <= "1" when (signed(probs_V_19_fu_2525_p4) < signed(probs_V_fu_2503_p4)) else "0";

    in_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, in_stream_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_stream_TDATA_blk_n <= in_stream_TVALID_int_regslice;
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_stream_TREADY <= regslice_both_in_stream_V_data_V_U_ack_in;

    in_stream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, in_stream_TVALID_int_regslice)
    begin
        if ((((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((in_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            in_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln1349_20_fu_883_p4 <= sub_ln1349_20_fu_877_p2(31 downto 1);
    lshr_ln1349_21_fu_903_p4 <= grp_exp_32_16_s_fu_291_ap_return(31 downto 1);
    lshr_ln1349_22_fu_939_p4 <= sub_ln1349_22_fu_933_p2(31 downto 1);
    lshr_ln1349_23_fu_959_p4 <= grp_exp_32_16_s_fu_302_ap_return(31 downto 1);
    out_pkt_data_V_fu_2541_p2 <= (icmp_ln260_fu_2535_p2 xor ap_const_lv1_1);

    out_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state19, out_stream_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY_int_regslice;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_pkt_data_V_fu_2541_p2),16));
    out_stream_TVALID <= regslice_both_out_stream_V_data_V_U_vld_out;

    out_stream_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state18, out_stream_TREADY_int_regslice)
    begin
        if (((out_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            out_stream_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out_stream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    probs_V_19_fu_2525_p4 <= r_V_117_fu_2519_p2(47 downto 16);
    probs_V_20_fu_1236_p4 <= r_V_4_fu_1230_p2(47 downto 16);
    probs_V_29_fu_1375_p4 <= r_V_63_fu_1369_p2(47 downto 16);
    probs_V_fu_2503_p4 <= r_V_58_fu_2497_p2(47 downto 16);
    r_V_102_fu_2149_p3 <= 
        sub_ln1349_35_fu_2139_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_35_fu_2145_p1;
    r_V_103_fu_2245_p1 <= ap_const_lv51_4D163(20 - 1 downto 0);
    r_V_106_fu_1669_p1 <= ap_const_lv46_3FFFEB75FB22(30 - 1 downto 0);
    r_V_108_fu_2275_p3 <= 
        sub_ln1349_37_fu_2265_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_37_fu_2271_p1;
    r_V_109_fu_2371_p1 <= ap_const_lv50_1F9F0(18 - 1 downto 0);
    r_V_114_fu_2401_p3 <= 
        sub_ln1349_39_fu_2391_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_39_fu_2397_p1;
    r_V_115_fu_2475_p1 <= ap_const_lv56_9549F94(29 - 1 downto 0);
    r_V_13_fu_1070_p3 <= 
        sub_ln1349_5_fu_1060_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_5_fu_1066_p1;
    r_V_14_fu_1272_p1 <= ap_const_lv56_588F378(28 - 1 downto 0);
    r_V_19_fu_1302_p3 <= 
        sub_ln1349_7_fu_1292_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_7_fu_1298_p1;
    r_V_20_fu_1511_p1 <= ap_const_lv56_4B0D3AE(28 - 1 downto 0);
    r_V_25_fu_1541_p3 <= 
        sub_ln1349_9_fu_1531_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_9_fu_1537_p1;
    r_V_26_fu_1700_p1 <= ap_const_lv56_2A78DF7(27 - 1 downto 0);
    r_V_2_fu_802_p3 <= 
        sub_ln1349_1_fu_792_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_1_fu_798_p1;
    r_V_31_fu_1730_p3 <= 
        sub_ln1349_11_fu_1720_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_11_fu_1726_p1;
    r_V_32_fu_1876_p1 <= ap_const_lv56_6A40F66(28 - 1 downto 0);
    r_V_37_fu_1906_p3 <= 
        sub_ln1349_13_fu_1896_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_13_fu_1902_p1;
    r_V_38_fu_2056_p1 <= ap_const_lv56_1E8CC78(26 - 1 downto 0);
    r_V_3_fu_1021_p1 <= ap_const_lv56_2933DFF(27 - 1 downto 0);
    r_V_43_fu_2086_p3 <= 
        sub_ln1349_15_fu_2076_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_15_fu_2082_p1;
    r_V_44_fu_2182_p1 <= ap_const_lv52_B19A4(21 - 1 downto 0);
    r_V_49_fu_2212_p3 <= 
        sub_ln1349_17_fu_2202_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_17_fu_2208_p1;
    r_V_4_fu_1230_p2 <= std_logic_vector(signed(sext_ln1319_2_fu_1215_p1) - signed(sext_ln1319_3_fu_1226_p1));
    r_V_50_fu_2308_p1 <= ap_const_lv56_1230DD8(26 - 1 downto 0);
    r_V_55_fu_2338_p3 <= 
        sub_ln1349_19_fu_2328_p2 when (grp_fu_317_p3(0) = '1') else 
        zext_ln1349_19_fu_2334_p1;
    r_V_56_fu_2434_p1 <= ap_const_lv56_6E85729(28 - 1 downto 0);
    r_V_61_fu_917_p3 <= 
        sub_ln1349_21_fu_897_p2 when (tmp_20_fu_869_p3(0) = '1') else 
        zext_ln1349_21_fu_913_p1;
    r_V_62_fu_1118_p1 <= ap_const_lv56_73E2CBA(28 - 1 downto 0);
    r_V_63_fu_1369_p2 <= std_logic_vector(signed(sext_ln1319_33_fu_1354_p1) + signed(sext_ln1319_34_fu_1365_p1));
    r_V_66_fu_973_p3 <= 
        sub_ln1349_23_fu_953_p2 when (tmp_22_fu_925_p3(0) = '1') else 
        zext_ln1349_23_fu_969_p1;
    r_V_67_fu_1137_p1 <= ap_const_lv56_811AD42(29 - 1 downto 0);
    r_V_72_fu_1167_p3 <= 
        sub_ln1349_25_fu_1157_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_25_fu_1163_p1;
    r_V_73_fu_1411_p1 <= ap_const_lv56_632BFDB(28 - 1 downto 0);
    r_V_78_fu_1441_p3 <= 
        sub_ln1349_27_fu_1431_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_27_fu_1437_p1;
    r_V_79_fu_1601_p1 <= ap_const_lv56_7762824(28 - 1 downto 0);
    r_V_7_fu_824_p3 <= 
        sub_ln1349_3_fu_814_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_3_fu_820_p1;
    r_V_84_fu_1631_p3 <= 
        sub_ln1349_29_fu_1621_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_29_fu_1627_p1;
    r_V_85_fu_1790_p1 <= ap_const_lv56_2F90ABB(27 - 1 downto 0);
    r_V_8_fu_1040_p1 <= ap_const_lv56_3BB9201(27 - 1 downto 0);
    r_V_90_fu_1820_p3 <= 
        sub_ln1349_31_fu_1810_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_31_fu_1816_p1;
    r_V_91_fu_1966_p1 <= ap_const_lv56_79C6FBD(28 - 1 downto 0);
    r_V_96_fu_1996_p3 <= 
        sub_ln1349_33_fu_1986_p2 when (grp_fu_351_p3(0) = '1') else 
        zext_ln1349_33_fu_1992_p1;
    r_V_97_fu_2119_p1 <= ap_const_lv56_4982FD7(28 - 1 downto 0);
        sext_ln1319_2_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1208_p3),48));

        sext_ln1319_33_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1319_2_fu_1347_p3),48));

        sext_ln1319_34_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1319_3_fu_1358_p3),48));

        sext_ln1319_3_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1319_1_fu_1219_p3),48));

        sext_ln864_12_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_12_fu_677_p4),32));

        sext_ln864_13_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_13_fu_757_p4),32));

        sext_ln864_14_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_14_fu_993_p4),32));

        sext_ln864_15_fu_1197_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_15_fu_1187_p4),32));

        sext_ln864_16_fu_1471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_16_fu_1461_p4),32));

        sext_ln864_17_fu_1661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_17_fu_1651_p4),32));

        sext_ln864_18_fu_2026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_19_fu_2016_p4),32));

        sext_ln864_1_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_1_fu_533_p4),32));

        sext_ln864_2_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_2_fu_640_p4),32));

        sext_ln864_3_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_3_fu_720_p4),32));

        sext_ln864_4_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_4_fu_844_p4),32));

        sext_ln864_5_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_5_fu_1090_p4),32));

        sext_ln864_6_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_6_fu_1322_p4),32));

        sext_ln864_7_fu_1571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_7_fu_1561_p4),32));

        sext_ln864_8_fu_1760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_8_fu_1750_p4),32));

        sext_ln864_9_fu_1936_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_9_fu_1926_p4),32));

        sext_ln864_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(exponent_V_fu_506_p4),32));

    shl_ln1319_1_fu_1219_p3 <= (tmp_s_reg_2876 & ap_const_lv3_0);
    shl_ln1319_2_fu_1347_p3 <= (tmp_21_reg_2902 & ap_const_lv15_0);
    shl_ln1319_3_fu_1358_p3 <= (tmp_21_reg_2902 & ap_const_lv2_0);
    shl_ln_fu_1208_p3 <= (tmp_s_reg_2876 & ap_const_lv15_0);
    sub_ln1349_11_fu_1720_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_10_fu_1716_p1));
    sub_ln1349_13_fu_1896_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_12_fu_1892_p1));
    sub_ln1349_15_fu_2076_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_14_fu_2072_p1));
    sub_ln1349_17_fu_2202_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_16_fu_2198_p1));
    sub_ln1349_19_fu_2328_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_18_fu_2324_p1));
    sub_ln1349_1_fu_792_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_fu_788_p1));
    sub_ln1349_20_fu_877_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(grp_exp_32_16_s_fu_291_ap_return));
    sub_ln1349_21_fu_897_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_20_fu_893_p1));
    sub_ln1349_22_fu_933_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(grp_exp_32_16_s_fu_302_ap_return));
    sub_ln1349_23_fu_953_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_22_fu_949_p1));
    sub_ln1349_25_fu_1157_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_24_fu_1153_p1));
    sub_ln1349_27_fu_1431_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_26_fu_1427_p1));
    sub_ln1349_29_fu_1621_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_28_fu_1617_p1));
    sub_ln1349_31_fu_1810_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_30_fu_1806_p1));
    sub_ln1349_33_fu_1986_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_32_fu_1982_p1));
    sub_ln1349_35_fu_2139_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_34_fu_2135_p1));
    sub_ln1349_37_fu_2265_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_36_fu_2261_p1));
    sub_ln1349_39_fu_2391_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_38_fu_2387_p1));
    sub_ln1349_3_fu_814_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_2_fu_810_p1));
    sub_ln1349_5_fu_1060_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_4_fu_1056_p1));
    sub_ln1349_7_fu_1292_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_6_fu_1288_p1));
    sub_ln1349_9_fu_1531_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln1349_8_fu_1527_p1));
    tmp_20_fu_869_p3 <= grp_exp_32_16_s_fu_291_ap_return(31 downto 31);
    tmp_22_fu_925_p3 <= grp_exp_32_16_s_fu_302_ap_return(31 downto 31);
    zext_ln1349_10_fu_1716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
    zext_ln1349_11_fu_1726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_12_fu_1892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
    zext_ln1349_13_fu_1902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_14_fu_2072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
    zext_ln1349_15_fu_2082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_16_fu_2198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
    zext_ln1349_17_fu_2208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_18_fu_2324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
    zext_ln1349_19_fu_2334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_1_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_20_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1349_20_fu_883_p4),32));
    zext_ln1349_21_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1349_21_fu_903_p4),32));
    zext_ln1349_22_fu_949_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1349_22_fu_939_p4),32));
    zext_ln1349_23_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1349_23_fu_959_p4),32));
    zext_ln1349_24_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_25_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_26_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_27_fu_1437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_28_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_29_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_2_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_30_fu_1806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_31_fu_1816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_32_fu_1982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_33_fu_1992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_34_fu_2135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_35_fu_2145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_36_fu_2261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_37_fu_2271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_38_fu_2387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_365_p4),32));
    zext_ln1349_39_fu_2397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_3_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),32));
    zext_ln1349_4_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
    zext_ln1349_5_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_6_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
    zext_ln1349_7_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_8_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
    zext_ln1349_9_fu_1537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_341_p4),32));
    zext_ln1349_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_331_p4),32));
end behav;
