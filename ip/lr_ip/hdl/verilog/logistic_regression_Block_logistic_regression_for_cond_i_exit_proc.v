// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module logistic_regression_Block_logistic_regression_for_cond_i_exit_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        weights_Addr_A,
        weights_EN_A,
        weights_WEN_A,
        weights_Din_A,
        weights_Dout_A,
        weights_Addr_B,
        weights_EN_B,
        weights_WEN_B,
        weights_Din_B,
        weights_Dout_B,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        out_stream_TKEEP,
        out_stream_TSTRB,
        out_stream_TLAST
);

parameter    ap_ST_fsm_state1 = 58'd1;
parameter    ap_ST_fsm_state2 = 58'd2;
parameter    ap_ST_fsm_state3 = 58'd4;
parameter    ap_ST_fsm_state4 = 58'd8;
parameter    ap_ST_fsm_state5 = 58'd16;
parameter    ap_ST_fsm_state6 = 58'd32;
parameter    ap_ST_fsm_state7 = 58'd64;
parameter    ap_ST_fsm_state8 = 58'd128;
parameter    ap_ST_fsm_state9 = 58'd256;
parameter    ap_ST_fsm_state10 = 58'd512;
parameter    ap_ST_fsm_state11 = 58'd1024;
parameter    ap_ST_fsm_state12 = 58'd2048;
parameter    ap_ST_fsm_state13 = 58'd4096;
parameter    ap_ST_fsm_state14 = 58'd8192;
parameter    ap_ST_fsm_state15 = 58'd16384;
parameter    ap_ST_fsm_state16 = 58'd32768;
parameter    ap_ST_fsm_state17 = 58'd65536;
parameter    ap_ST_fsm_state18 = 58'd131072;
parameter    ap_ST_fsm_state19 = 58'd262144;
parameter    ap_ST_fsm_state20 = 58'd524288;
parameter    ap_ST_fsm_state21 = 58'd1048576;
parameter    ap_ST_fsm_state22 = 58'd2097152;
parameter    ap_ST_fsm_state23 = 58'd4194304;
parameter    ap_ST_fsm_state24 = 58'd8388608;
parameter    ap_ST_fsm_state25 = 58'd16777216;
parameter    ap_ST_fsm_state26 = 58'd33554432;
parameter    ap_ST_fsm_state27 = 58'd67108864;
parameter    ap_ST_fsm_state28 = 58'd134217728;
parameter    ap_ST_fsm_state29 = 58'd268435456;
parameter    ap_ST_fsm_state30 = 58'd536870912;
parameter    ap_ST_fsm_state31 = 58'd1073741824;
parameter    ap_ST_fsm_state32 = 58'd2147483648;
parameter    ap_ST_fsm_state33 = 58'd4294967296;
parameter    ap_ST_fsm_state34 = 58'd8589934592;
parameter    ap_ST_fsm_state35 = 58'd17179869184;
parameter    ap_ST_fsm_state36 = 58'd34359738368;
parameter    ap_ST_fsm_state37 = 58'd68719476736;
parameter    ap_ST_fsm_state38 = 58'd137438953472;
parameter    ap_ST_fsm_state39 = 58'd274877906944;
parameter    ap_ST_fsm_state40 = 58'd549755813888;
parameter    ap_ST_fsm_state41 = 58'd1099511627776;
parameter    ap_ST_fsm_state42 = 58'd2199023255552;
parameter    ap_ST_fsm_state43 = 58'd4398046511104;
parameter    ap_ST_fsm_state44 = 58'd8796093022208;
parameter    ap_ST_fsm_state45 = 58'd17592186044416;
parameter    ap_ST_fsm_state46 = 58'd35184372088832;
parameter    ap_ST_fsm_state47 = 58'd70368744177664;
parameter    ap_ST_fsm_state48 = 58'd140737488355328;
parameter    ap_ST_fsm_state49 = 58'd281474976710656;
parameter    ap_ST_fsm_state50 = 58'd562949953421312;
parameter    ap_ST_fsm_state51 = 58'd1125899906842624;
parameter    ap_ST_fsm_state52 = 58'd2251799813685248;
parameter    ap_ST_fsm_state53 = 58'd4503599627370496;
parameter    ap_ST_fsm_state54 = 58'd9007199254740992;
parameter    ap_ST_fsm_state55 = 58'd18014398509481984;
parameter    ap_ST_fsm_state56 = 58'd36028797018963968;
parameter    ap_ST_fsm_state57 = 58'd72057594037927936;
parameter    ap_ST_fsm_state58 = 58'd144115188075855872;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] weights_Addr_A;
output   weights_EN_A;
output  [1:0] weights_WEN_A;
output  [15:0] weights_Din_A;
input  [15:0] weights_Dout_A;
output  [31:0] weights_Addr_B;
output   weights_EN_B;
output  [1:0] weights_WEN_B;
output  [15:0] weights_Din_B;
input  [15:0] weights_Dout_B;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] p_read16;
input  [7:0] p_read17;
input  [7:0] p_read18;
input  [7:0] p_read19;
input  [7:0] p_read20;
input  [7:0] p_read21;
input  [7:0] p_read22;
input  [7:0] p_read23;
input  [7:0] p_read24;
input  [7:0] p_read25;
input  [7:0] p_read26;
input  [7:0] p_read27;
input  [7:0] p_read28;
input  [7:0] p_read29;
input  [7:0] p_read30;
input  [7:0] p_read31;
output  [31:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
output  [3:0] out_stream_TKEEP;
output  [3:0] out_stream_TSTRB;
output  [0:0] out_stream_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weights_EN_A;
reg weights_EN_B;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [57:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_stream_TDATA_blk_n;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire   [23:0] grp_fu_844_p2;
reg   [23:0] mul_ln1316_30_reg_1082;
wire    ap_CS_fsm_state18;
reg   [15:0] reg_1315;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
reg   [15:0] reg_1320;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state15;
reg   [15:0] reg_1325;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
reg   [15:0] reg_1330;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg   [15:0] reg_1335;
reg   [15:0] reg_1339;
reg   [15:0] reg_1343;
reg   [15:0] reg_1347;
reg   [15:0] reg_1351;
reg   [15:0] reg_1355;
reg   [15:0] reg_1359;
reg   [15:0] reg_1363;
reg   [15:0] reg_1367;
reg   [15:0] reg_1371;
reg   [15:0] reg_1375;
wire   [15:0] add_ln859_17_fu_1483_p2;
reg   [15:0] add_ln859_17_reg_2805;
wire   [15:0] add_ln859_20_fu_1639_p2;
reg   [15:0] add_ln859_20_reg_2850;
wire   [15:0] add_ln859_22_fu_1691_p2;
reg   [15:0] add_ln859_22_reg_2870;
wire   [15:0] add_ln859_23_fu_1720_p2;
reg   [15:0] add_ln859_23_reg_2885;
wire   [15:0] add_ln859_7_fu_1818_p2;
reg   [15:0] add_ln859_7_reg_2945;
reg   [15:0] tmp_V_23_reg_2970;
wire   [15:0] add_ln859_8_fu_1847_p2;
reg   [15:0] add_ln859_8_reg_2985;
wire   [15:0] add_ln859_12_fu_2002_p2;
reg   [15:0] add_ln859_12_reg_3040;
reg   [15:0] partial_sums_V_25_reg_3055;
reg   [15:0] partial_sums_V_27_reg_3060;
wire   [15:0] add_ln859_13_fu_2104_p2;
reg   [15:0] add_ln859_13_reg_3075;
wire   [15:0] add_ln859_5_fu_2165_p2;
reg   [15:0] add_ln859_5_reg_3095;
reg   [15:0] partial_sums_V_31_reg_3100;
wire   [15:0] add_ln859_1_fu_2217_p2;
reg   [15:0] add_ln859_1_reg_3105;
wire   [15:0] add_ln859_6_fu_2250_p2;
reg   [15:0] add_ln859_6_reg_3110;
wire    ap_CS_fsm_state19;
wire   [15:0] add_ln859_27_fu_2260_p2;
reg   [15:0] add_ln859_27_reg_3115;
wire   [15:0] add_ln859_28_fu_2272_p2;
reg   [15:0] add_ln859_28_reg_3120;
wire    ap_CS_fsm_state20;
wire   [15:0] add_ln859_29_fu_2281_p2;
reg   [15:0] add_ln859_29_reg_3125;
wire    ap_CS_fsm_state21;
wire   [15:0] add_ln859_30_fu_2290_p2;
reg   [15:0] add_ln859_30_reg_3130;
wire    ap_CS_fsm_state22;
wire   [15:0] linear_sum_V_3_fu_2299_p2;
reg   [15:0] linear_sum_V_3_reg_3135;
wire    ap_CS_fsm_state23;
wire   [15:0] abs_linear_sum_V_fu_2304_p2;
reg   [15:0] abs_linear_sum_V_reg_3142;
wire    ap_CS_fsm_state24;
wire   [15:0] grp_fu_2344_p2;
reg   [15:0] sdiv_ln1349_reg_3157;
wire    ap_CS_fsm_state51;
wire   [0:0] icmp_ln1136_fu_2359_p2;
reg   [0:0] icmp_ln1136_reg_3162;
wire    ap_CS_fsm_state52;
wire   [0:0] p_Result_7_fu_2365_p3;
reg   [0:0] p_Result_7_reg_3168;
wire   [15:0] tmp_V_35_fu_2379_p3;
reg   [15:0] tmp_V_35_reg_3173;
wire   [31:0] sub_ln1145_fu_2417_p2;
reg   [31:0] sub_ln1145_reg_3180;
wire   [15:0] trunc_ln1145_fu_2423_p1;
reg   [15:0] trunc_ln1145_reg_3187;
wire   [4:0] trunc_ln1148_fu_2427_p1;
reg   [4:0] trunc_ln1148_reg_3192;
wire   [7:0] trunc_ln1144_fu_2431_p1;
reg   [7:0] trunc_ln1144_reg_3197;
wire   [1:0] or_ln_i_fu_2526_p3;
reg   [1:0] or_ln_i_reg_3202;
wire    ap_CS_fsm_state53;
wire   [0:0] icmp_ln1159_fu_2534_p2;
reg   [0:0] icmp_ln1159_reg_3207;
reg   [62:0] m_4_reg_3212;
wire    ap_CS_fsm_state54;
reg   [0:0] p_Result_5_reg_3217;
reg   [22:0] tmp_s_reg_3222;
wire   [31:0] trunc_ln809_fu_2657_p1;
reg   [31:0] trunc_ln809_reg_3227;
wire    ap_CS_fsm_state55;
wire   [0:0] notlhs_fu_2661_p2;
reg   [0:0] notlhs_reg_3232;
wire   [0:0] notrhs_fu_2667_p2;
reg   [0:0] notrhs_reg_3237;
wire    ap_CS_fsm_state56;
reg    ap_block_state1;
reg   [31:0] weights_Addr_B_orig;
reg   [31:0] weights_Addr_A_orig;
reg  signed [15:0] grp_fu_841_p0;
wire  signed [23:0] sext_ln1316_8_fu_1495_p1;
wire  signed [23:0] sext_ln1316_32_fu_1732_p1;
wire  signed [23:0] sext_ln1316_28_fu_1950_p1;
reg  signed [15:0] grp_fu_841_p1;
wire  signed [23:0] sext_ln1316_9_fu_1507_p1;
wire  signed [23:0] sext_ln1316_33_fu_1744_p1;
wire  signed [23:0] sext_ln1316_29_fu_1962_p1;
reg  signed [15:0] grp_fu_842_p0;
wire  signed [23:0] sext_ln1316_fu_1385_p1;
wire  signed [23:0] sext_ln1316_38_fu_1801_p1;
wire  signed [23:0] sext_ln1316_48_fu_2014_p1;
reg  signed [15:0] grp_fu_842_p1;
wire  signed [23:0] sext_ln1316_1_fu_1397_p1;
wire  signed [23:0] sext_ln1316_39_fu_1813_p1;
wire  signed [23:0] sext_ln1316_49_fu_2026_p1;
reg  signed [15:0] grp_fu_843_p0;
wire  signed [23:0] sext_ln1316_10_fu_1518_p1;
wire  signed [23:0] sext_ln1316_26_fu_1703_p1;
wire  signed [23:0] sext_ln1316_50_fu_2037_p1;
reg  signed [15:0] grp_fu_843_p1;
wire  signed [23:0] sext_ln1316_11_fu_1530_p1;
wire  signed [23:0] sext_ln1316_27_fu_1715_p1;
wire  signed [23:0] sext_ln1316_51_fu_2049_p1;
reg  signed [15:0] grp_fu_844_p0;
wire  signed [23:0] sext_ln1316_6_fu_1454_p1;
wire  signed [23:0] sext_ln1316_20_fu_1651_p1;
wire  signed [23:0] sext_ln1316_46_fu_1927_p1;
wire  signed [23:0] sext_ln1316_60_fu_2177_p1;
reg  signed [15:0] grp_fu_844_p1;
wire  signed [23:0] sext_ln1316_7_fu_1466_p1;
wire  signed [23:0] sext_ln1316_21_fu_1663_p1;
wire  signed [23:0] sext_ln1316_47_fu_1939_p1;
wire  signed [23:0] sext_ln1316_61_fu_2189_p1;
reg  signed [15:0] grp_fu_845_p0;
wire  signed [23:0] sext_ln1316_4_fu_1431_p1;
wire  signed [23:0] sext_ln1316_40_fu_1859_p1;
wire  signed [23:0] sext_ln1316_58_fu_2138_p1;
reg  signed [15:0] grp_fu_845_p1;
wire  signed [23:0] sext_ln1316_5_fu_1443_p1;
wire  signed [23:0] sext_ln1316_41_fu_1871_p1;
wire  signed [23:0] sext_ln1316_59_fu_2150_p1;
reg  signed [15:0] grp_fu_846_p0;
wire  signed [23:0] sext_ln1316_2_fu_1408_p1;
wire  signed [23:0] sext_ln1316_36_fu_1778_p1;
wire  signed [23:0] sext_ln1316_44_fu_1905_p1;
reg  signed [15:0] grp_fu_846_p1;
wire  signed [23:0] sext_ln1316_3_fu_1420_p1;
wire  signed [23:0] sext_ln1316_37_fu_1790_p1;
wire  signed [23:0] sext_ln1316_45_fu_1917_p1;
reg  signed [15:0] grp_fu_847_p0;
wire  signed [23:0] sext_ln1316_16_fu_1587_p1;
wire  signed [23:0] sext_ln1316_34_fu_1755_p1;
wire  signed [23:0] sext_ln1316_56_fu_2115_p1;
reg  signed [15:0] grp_fu_847_p1;
wire  signed [23:0] sext_ln1316_17_fu_1599_p1;
wire  signed [23:0] sext_ln1316_35_fu_1767_p1;
wire  signed [23:0] sext_ln1316_57_fu_2127_p1;
reg  signed [15:0] grp_fu_848_p0;
wire  signed [23:0] sext_ln1316_12_fu_1541_p1;
wire  signed [23:0] sext_ln1316_42_fu_1882_p1;
wire  signed [23:0] sext_ln1316_52_fu_2060_p1;
reg  signed [15:0] grp_fu_848_p1;
wire  signed [23:0] sext_ln1316_13_fu_1553_p1;
wire  signed [23:0] sext_ln1316_43_fu_1894_p1;
wire  signed [23:0] sext_ln1316_53_fu_2072_p1;
reg  signed [15:0] grp_fu_849_p0;
wire  signed [23:0] sext_ln1316_14_fu_1564_p1;
wire  signed [23:0] sext_ln1316_24_fu_1830_p1;
wire  signed [23:0] sext_ln1316_54_fu_2083_p1;
reg  signed [15:0] grp_fu_849_p1;
wire  signed [23:0] sext_ln1316_15_fu_1576_p1;
wire  signed [23:0] sext_ln1316_25_fu_1842_p1;
wire  signed [23:0] sext_ln1316_55_fu_2095_p1;
reg  signed [15:0] grp_fu_850_p0;
wire  signed [23:0] sext_ln1316_18_fu_1610_p1;
wire  signed [23:0] sext_ln1316_22_fu_1674_p1;
wire  signed [23:0] sext_ln1316_30_fu_1973_p1;
wire  signed [23:0] sext_ln1316_62_fu_2200_p1;
reg  signed [15:0] grp_fu_850_p1;
wire  signed [23:0] sext_ln1316_19_fu_1622_p1;
wire  signed [23:0] sext_ln1316_23_fu_1686_p1;
wire  signed [23:0] sext_ln1316_31_fu_1985_p1;
wire  signed [23:0] sext_ln1316_63_fu_2212_p1;
wire   [31:0] grp_fu_1210_p0;
wire   [23:0] grp_fu_842_p2;
wire   [23:0] grp_fu_846_p2;
wire   [23:0] grp_fu_845_p2;
wire   [23:0] grp_fu_841_p2;
wire   [23:0] grp_fu_843_p2;
wire   [23:0] grp_fu_848_p2;
wire   [23:0] grp_fu_849_p2;
wire   [23:0] grp_fu_847_p2;
wire   [23:0] grp_fu_850_p2;
wire   [15:0] r_V_fu_1379_p2;
wire   [15:0] shl_ln_fu_1390_p3;
wire   [15:0] r_V_1_fu_1402_p2;
wire   [15:0] shl_ln884_1_fu_1413_p3;
wire   [15:0] r_V_2_fu_1425_p2;
wire   [15:0] shl_ln884_2_fu_1436_p3;
wire   [15:0] r_V_3_fu_1448_p2;
wire   [15:0] shl_ln884_3_fu_1459_p3;
wire   [15:0] add_ln859_16_fu_1477_p2;
wire   [15:0] add_ln859_15_fu_1471_p2;
wire   [15:0] r_V_4_fu_1489_p2;
wire   [15:0] shl_ln884_4_fu_1500_p3;
wire   [15:0] r_V_5_fu_1512_p2;
wire   [15:0] shl_ln884_5_fu_1523_p3;
wire   [15:0] r_V_6_fu_1535_p2;
wire   [15:0] shl_ln884_6_fu_1546_p3;
wire   [15:0] r_V_7_fu_1558_p2;
wire   [15:0] shl_ln884_7_fu_1569_p3;
wire   [15:0] r_V_8_fu_1581_p2;
wire   [15:0] shl_ln884_8_fu_1592_p3;
wire   [15:0] r_V_9_fu_1604_p2;
wire   [15:0] shl_ln884_9_fu_1615_p3;
wire   [15:0] add_ln859_19_fu_1633_p2;
wire   [15:0] add_ln859_18_fu_1627_p2;
wire   [15:0] r_V_10_fu_1645_p2;
wire   [15:0] shl_ln884_s_fu_1656_p3;
wire   [15:0] r_V_11_fu_1668_p2;
wire   [15:0] shl_ln884_10_fu_1679_p3;
wire   [15:0] r_V_13_fu_1697_p2;
wire   [15:0] shl_ln884_12_fu_1708_p3;
wire   [15:0] r_V_16_fu_1726_p2;
wire   [15:0] shl_ln884_15_fu_1737_p3;
wire   [15:0] r_V_17_fu_1749_p2;
wire   [15:0] shl_ln884_16_fu_1760_p3;
wire   [15:0] r_V_18_fu_1772_p2;
wire   [15:0] shl_ln884_17_fu_1783_p3;
wire   [15:0] r_V_19_fu_1795_p2;
wire   [15:0] shl_ln884_18_fu_1806_p3;
wire   [15:0] r_V_12_fu_1824_p2;
wire   [15:0] shl_ln884_11_fu_1835_p3;
wire   [15:0] r_V_20_fu_1853_p2;
wire   [15:0] shl_ln884_19_fu_1864_p3;
wire   [15:0] r_V_21_fu_1876_p2;
wire   [15:0] shl_ln884_20_fu_1887_p3;
wire   [15:0] r_V_22_fu_1899_p2;
wire   [15:0] shl_ln884_21_fu_1910_p3;
wire   [15:0] r_V_23_fu_1922_p2;
wire   [15:0] shl_ln884_22_fu_1932_p3;
wire   [15:0] r_V_14_fu_1944_p2;
wire   [15:0] shl_ln884_13_fu_1955_p3;
wire   [15:0] r_V_15_fu_1967_p2;
wire   [15:0] shl_ln884_14_fu_1978_p3;
wire   [15:0] add_ln859_11_fu_1996_p2;
wire   [15:0] add_ln859_10_fu_1990_p2;
wire   [15:0] r_V_24_fu_2008_p2;
wire   [15:0] shl_ln884_23_fu_2019_p3;
wire   [15:0] r_V_25_fu_2031_p2;
wire   [15:0] shl_ln884_24_fu_2042_p3;
wire   [15:0] r_V_26_fu_2054_p2;
wire   [15:0] shl_ln884_25_fu_2065_p3;
wire   [15:0] r_V_27_fu_2077_p2;
wire   [15:0] shl_ln884_26_fu_2088_p3;
wire   [15:0] add_ln859_9_fu_2100_p2;
wire   [15:0] r_V_28_fu_2109_p2;
wire   [15:0] shl_ln884_27_fu_2120_p3;
wire   [15:0] r_V_29_fu_2132_p2;
wire   [15:0] shl_ln884_28_fu_2143_p3;
wire   [15:0] add_ln859_4_fu_2160_p2;
wire   [15:0] add_ln859_3_fu_2155_p2;
wire   [15:0] r_V_30_fu_2171_p2;
wire   [15:0] shl_ln884_29_fu_2182_p3;
wire   [15:0] r_V_31_fu_2194_p2;
wire   [15:0] shl_ln884_30_fu_2205_p3;
wire   [15:0] partial_sums_V_30_fu_2223_p4;
wire   [15:0] linear_sum_V_fu_2233_p2;
wire   [15:0] add_ln859_fu_2239_p2;
wire   [15:0] add_ln859_2_fu_2245_p2;
wire   [15:0] add_ln859_26_fu_2255_p2;
wire   [15:0] add_ln859_25_fu_2266_p2;
wire   [15:0] add_ln859_24_fu_2277_p2;
wire   [15:0] add_ln859_21_fu_2286_p2;
wire   [15:0] add_ln859_14_fu_2295_p2;
wire   [0:0] tmp_1_fu_2310_p3;
wire   [15:0] linear_sum_V_4_fu_2317_p3;
wire  signed [16:0] sext_ln859_fu_2323_p1;
wire  signed [16:0] ret_V_fu_2327_p2;
wire   [23:0] grp_fu_2344_p0;
wire   [15:0] trunc_ln859_fu_2350_p1;
wire   [15:0] probability_V_fu_2353_p2;
wire   [15:0] tmp_V_33_fu_2373_p2;
reg   [15:0] p_Result_s_fu_2387_p4;
wire   [16:0] p_Result_8_fu_2397_p3;
wire  signed [31:0] sext_ln1244_fu_2405_p1;
reg   [31:0] l_fu_2409_p3;
wire   [31:0] lsb_index_fu_2435_p2;
wire   [30:0] tmp_3_fu_2440_p4;
wire   [4:0] sub_ln1148_fu_2456_p2;
wire   [15:0] zext_ln1148_fu_2461_p1;
wire   [15:0] lshr_ln1148_fu_2465_p2;
wire   [15:0] p_Result_4_fu_2471_p2;
wire   [0:0] icmp_ln1147_fu_2450_p2;
wire   [0:0] icmp_ln1148_fu_2476_p2;
wire   [0:0] tmp_4_fu_2488_p3;
wire   [15:0] add_ln1150_fu_2502_p2;
wire   [0:0] p_Result_3_fu_2507_p3;
wire   [0:0] xor_ln1150_fu_2496_p2;
wire   [0:0] and_ln1150_fu_2514_p2;
wire   [0:0] a_fu_2482_p2;
wire   [0:0] or_ln1150_fu_2520_p2;
wire   [31:0] add_ln1159_fu_2543_p2;
wire   [63:0] zext_ln1158_fu_2540_p1;
wire   [63:0] zext_ln1159_fu_2548_p1;
wire   [31:0] sub_ln1160_fu_2558_p2;
wire   [63:0] zext_ln1160_fu_2563_p1;
wire   [63:0] lshr_ln1159_fu_2552_p2;
wire   [63:0] shl_ln1160_fu_2567_p2;
wire   [63:0] m_2_fu_2573_p3;
wire   [63:0] zext_ln1162_fu_2580_p1;
wire   [63:0] m_3_fu_2583_p2;
wire   [7:0] sub_ln1165_fu_2627_p2;
wire   [7:0] select_ln1144_fu_2620_p3;
wire   [7:0] add_ln1170_fu_2632_p2;
wire   [63:0] zext_ln1163_fu_2617_p1;
wire   [8:0] tmp_1_i_fu_2638_p3;
wire   [63:0] p_Result_9_fu_2645_p5;
wire   [0:0] empty_fu_2676_p2;
wire   [0:0] grp_fu_1210_p2;
wire   [0:0] empty_90_fu_2680_p2;
wire   [0:0] or_ln1136_fu_2693_p2;
wire   [23:0] select_ln1136_fu_2686_p3;
wire   [23:0] output_pkt_data_V_fu_2698_p3;
wire  signed [29:0] sext_ln60_fu_2706_p1;
reg    grp_fu_1210_ce;
reg    grp_fu_2344_ap_start;
wire    grp_fu_2344_ap_done;
wire    regslice_both_out_stream_V_data_V_U_apdone_blk;
reg    ap_block_state58;
reg   [57:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
reg    ap_ST_fsm_state57_blk;
reg    ap_ST_fsm_state58_blk;
wire   [31:0] out_stream_TDATA_int_regslice;
reg    out_stream_TVALID_int_regslice;
wire    out_stream_TREADY_int_regslice;
wire    regslice_both_out_stream_V_data_V_U_vld_out;
wire    regslice_both_out_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_out_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_keep_V_U_vld_out;
wire    regslice_both_out_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_out_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_strb_V_U_vld_out;
wire    regslice_both_out_stream_V_last_V_U_apdone_blk;
wire    regslice_both_out_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 58'd1;
end

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U9(
    .din0(grp_fu_841_p0),
    .din1(grp_fu_841_p1),
    .dout(grp_fu_841_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U10(
    .din0(grp_fu_842_p0),
    .din1(grp_fu_842_p1),
    .dout(grp_fu_842_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U11(
    .din0(grp_fu_843_p0),
    .din1(grp_fu_843_p1),
    .dout(grp_fu_843_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U12(
    .din0(grp_fu_844_p0),
    .din1(grp_fu_844_p1),
    .dout(grp_fu_844_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U13(
    .din0(grp_fu_845_p0),
    .din1(grp_fu_845_p1),
    .dout(grp_fu_845_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U14(
    .din0(grp_fu_846_p0),
    .din1(grp_fu_846_p1),
    .dout(grp_fu_846_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U15(
    .din0(grp_fu_847_p0),
    .din1(grp_fu_847_p1),
    .dout(grp_fu_847_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U16(
    .din0(grp_fu_848_p0),
    .din1(grp_fu_848_p1),
    .dout(grp_fu_848_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U17(
    .din0(grp_fu_849_p0),
    .din1(grp_fu_849_p1),
    .dout(grp_fu_849_p2)
);

logistic_regression_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U18(
    .din0(grp_fu_850_p0),
    .din1(grp_fu_850_p1),
    .dout(grp_fu_850_p2)
);

logistic_regression_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1210_p0),
    .din1(32'd1056964608),
    .ce(grp_fu_1210_ce),
    .opcode(5'd3),
    .dout(grp_fu_1210_p2)
);

logistic_regression_sdiv_24ns_17s_16_28_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
sdiv_24ns_17s_16_28_seq_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_2344_ap_start),
    .done(grp_fu_2344_ap_done),
    .din0(grp_fu_2344_p0),
    .din1(ret_V_fu_2327_p2),
    .ce(1'b1),
    .dout(grp_fu_2344_p2)
);

logistic_regression_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(out_stream_TDATA_int_regslice),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(out_stream_TREADY_int_regslice),
    .data_out(out_stream_TDATA),
    .vld_out(regslice_both_out_stream_V_data_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_data_V_U_apdone_blk)
);

logistic_regression_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(4'd0),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_keep_V_U_ack_in_dummy),
    .data_out(out_stream_TKEEP),
    .vld_out(regslice_both_out_stream_V_keep_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_keep_V_U_apdone_blk)
);

logistic_regression_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(4'd0),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_strb_V_U_ack_in_dummy),
    .data_out(out_stream_TSTRB),
    .vld_out(regslice_both_out_stream_V_strb_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_strb_V_U_apdone_blk)
);

logistic_regression_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(1'd1),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_last_V_U_ack_in_dummy),
    .data_out(out_stream_TLAST),
    .vld_out(regslice_both_out_stream_V_last_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state58))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_1315 <= weights_Dout_A;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_1315 <= weights_Dout_B;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_1320 <= weights_Dout_B;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_1320 <= weights_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_1325 <= weights_Dout_A;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_1325 <= weights_Dout_B;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_1330 <= weights_Dout_B;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_1330 <= weights_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        abs_linear_sum_V_reg_3142 <= abs_linear_sum_V_fu_2304_p2;
        linear_sum_V_3_reg_3135 <= linear_sum_V_3_fu_2299_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln859_12_reg_3040 <= add_ln859_12_fu_2002_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln859_13_reg_3075 <= add_ln859_13_fu_2104_p2;
        partial_sums_V_25_reg_3055 <= {{grp_fu_843_p2[23:8]}};
        partial_sums_V_27_reg_3060 <= {{grp_fu_849_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln859_17_reg_2805 <= add_ln859_17_fu_1483_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln859_1_reg_3105 <= add_ln859_1_fu_2217_p2;
        mul_ln1316_30_reg_1082 <= grp_fu_844_p2;
        partial_sums_V_31_reg_3100 <= {{grp_fu_850_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln859_20_reg_2850 <= add_ln859_20_fu_1639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln859_22_reg_2870 <= add_ln859_22_fu_1691_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln859_23_reg_2885 <= add_ln859_23_fu_1720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln859_27_reg_3115 <= add_ln859_27_fu_2260_p2;
        add_ln859_6_reg_3110 <= add_ln859_6_fu_2250_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln859_28_reg_3120 <= add_ln859_28_fu_2272_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln859_29_reg_3125 <= add_ln859_29_fu_2281_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln859_30_reg_3130 <= add_ln859_30_fu_2290_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln859_5_reg_3095 <= add_ln859_5_fu_2165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln859_7_reg_2945 <= add_ln859_7_fu_1818_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln859_8_reg_2985 <= add_ln859_8_fu_1847_p2;
        tmp_V_23_reg_2970 <= weights_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        icmp_ln1136_reg_3162 <= icmp_ln1136_fu_2359_p2;
        p_Result_7_reg_3168 <= probability_V_fu_2353_p2[32'd15];
        sub_ln1145_reg_3180 <= sub_ln1145_fu_2417_p2;
        tmp_V_35_reg_3173 <= tmp_V_35_fu_2379_p3;
        trunc_ln1144_reg_3197 <= trunc_ln1144_fu_2431_p1;
        trunc_ln1145_reg_3187 <= trunc_ln1145_fu_2423_p1;
        trunc_ln1148_reg_3192 <= trunc_ln1148_fu_2427_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        icmp_ln1159_reg_3207 <= icmp_ln1159_fu_2534_p2;
        or_ln_i_reg_3202[0] <= or_ln_i_fu_2526_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        m_4_reg_3212 <= {{m_3_fu_2583_p2[63:1]}};
        p_Result_5_reg_3217 <= m_3_fu_2583_p2[32'd25];
        tmp_s_reg_3222 <= {{m_3_fu_2583_p2[23:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        notlhs_reg_3232 <= notlhs_fu_2661_p2;
        notrhs_reg_3237 <= notrhs_fu_2667_p2;
        trunc_ln809_reg_3227 <= trunc_ln809_fu_2657_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_1335 <= {{grp_fu_842_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_1339 <= {{grp_fu_846_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_1343 <= {{grp_fu_845_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_1347 <= {{grp_fu_844_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_1351 <= {{grp_fu_841_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_1355 <= {{grp_fu_843_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_1359 <= {{grp_fu_848_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_1363 <= {{grp_fu_849_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1367 <= {{grp_fu_847_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1371 <= {{grp_fu_850_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_1375 <= weights_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        sdiv_ln1349_reg_3157 <= grp_fu_2344_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

always @ (*) begin
    if ((out_stream_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state57_blk = 1'b1;
    end else begin
        ap_ST_fsm_state57_blk = 1'b0;
    end
end

always @ (*) begin
    if (((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state58_blk = 1'b1;
    end else begin
        ap_ST_fsm_state58_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state58))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state58))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | ((1'b1 == ap_CS_fsm_state57) & (out_stream_TREADY_int_regslice == 1'b1)))) begin
        grp_fu_1210_ce = 1'b1;
    end else begin
        grp_fu_1210_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_2344_ap_start = 1'b1;
    end else begin
        grp_fu_2344_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_841_p0 = sext_ln1316_28_fu_1950_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_841_p0 = sext_ln1316_32_fu_1732_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_841_p0 = sext_ln1316_8_fu_1495_p1;
    end else begin
        grp_fu_841_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_841_p1 = sext_ln1316_29_fu_1962_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_841_p1 = sext_ln1316_33_fu_1744_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_841_p1 = sext_ln1316_9_fu_1507_p1;
    end else begin
        grp_fu_841_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_842_p0 = sext_ln1316_48_fu_2014_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_842_p0 = sext_ln1316_38_fu_1801_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_842_p0 = sext_ln1316_fu_1385_p1;
    end else begin
        grp_fu_842_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_842_p1 = sext_ln1316_49_fu_2026_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_842_p1 = sext_ln1316_39_fu_1813_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_842_p1 = sext_ln1316_1_fu_1397_p1;
    end else begin
        grp_fu_842_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_843_p0 = sext_ln1316_50_fu_2037_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_843_p0 = sext_ln1316_26_fu_1703_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_843_p0 = sext_ln1316_10_fu_1518_p1;
    end else begin
        grp_fu_843_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_843_p1 = sext_ln1316_51_fu_2049_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_843_p1 = sext_ln1316_27_fu_1715_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_843_p1 = sext_ln1316_11_fu_1530_p1;
    end else begin
        grp_fu_843_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_844_p0 = sext_ln1316_60_fu_2177_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_844_p0 = sext_ln1316_46_fu_1927_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_844_p0 = sext_ln1316_20_fu_1651_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_844_p0 = sext_ln1316_6_fu_1454_p1;
    end else begin
        grp_fu_844_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_844_p1 = sext_ln1316_61_fu_2189_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_844_p1 = sext_ln1316_47_fu_1939_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_844_p1 = sext_ln1316_21_fu_1663_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_844_p1 = sext_ln1316_7_fu_1466_p1;
    end else begin
        grp_fu_844_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_845_p0 = sext_ln1316_58_fu_2138_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_845_p0 = sext_ln1316_40_fu_1859_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_845_p0 = sext_ln1316_4_fu_1431_p1;
    end else begin
        grp_fu_845_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_845_p1 = sext_ln1316_59_fu_2150_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_845_p1 = sext_ln1316_41_fu_1871_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_845_p1 = sext_ln1316_5_fu_1443_p1;
    end else begin
        grp_fu_845_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_846_p0 = sext_ln1316_44_fu_1905_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_846_p0 = sext_ln1316_36_fu_1778_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_846_p0 = sext_ln1316_2_fu_1408_p1;
    end else begin
        grp_fu_846_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_846_p1 = sext_ln1316_45_fu_1917_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_846_p1 = sext_ln1316_37_fu_1790_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_846_p1 = sext_ln1316_3_fu_1420_p1;
    end else begin
        grp_fu_846_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_847_p0 = sext_ln1316_56_fu_2115_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_847_p0 = sext_ln1316_34_fu_1755_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_847_p0 = sext_ln1316_16_fu_1587_p1;
    end else begin
        grp_fu_847_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_847_p1 = sext_ln1316_57_fu_2127_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_847_p1 = sext_ln1316_35_fu_1767_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_847_p1 = sext_ln1316_17_fu_1599_p1;
    end else begin
        grp_fu_847_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_848_p0 = sext_ln1316_52_fu_2060_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_848_p0 = sext_ln1316_42_fu_1882_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_848_p0 = sext_ln1316_12_fu_1541_p1;
    end else begin
        grp_fu_848_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_848_p1 = sext_ln1316_53_fu_2072_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_848_p1 = sext_ln1316_43_fu_1894_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_848_p1 = sext_ln1316_13_fu_1553_p1;
    end else begin
        grp_fu_848_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_849_p0 = sext_ln1316_54_fu_2083_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_849_p0 = sext_ln1316_24_fu_1830_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_849_p0 = sext_ln1316_14_fu_1564_p1;
    end else begin
        grp_fu_849_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_849_p1 = sext_ln1316_55_fu_2095_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_849_p1 = sext_ln1316_25_fu_1842_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_849_p1 = sext_ln1316_15_fu_1576_p1;
    end else begin
        grp_fu_849_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_850_p0 = sext_ln1316_62_fu_2200_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_850_p0 = sext_ln1316_30_fu_1973_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_850_p0 = sext_ln1316_22_fu_1674_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_850_p0 = sext_ln1316_18_fu_1610_p1;
    end else begin
        grp_fu_850_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_850_p1 = sext_ln1316_63_fu_2212_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_850_p1 = sext_ln1316_31_fu_1985_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_850_p1 = sext_ln1316_23_fu_1686_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_850_p1 = sext_ln1316_19_fu_1622_p1;
    end else begin
        grp_fu_850_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57))) begin
        out_stream_TDATA_blk_n = out_stream_TREADY_int_regslice;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) & (out_stream_TREADY_int_regslice == 1'b1))) begin
        out_stream_TVALID_int_regslice = 1'b1;
    end else begin
        out_stream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weights_Addr_A_orig = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weights_Addr_A_orig = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weights_Addr_A_orig = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weights_Addr_A_orig = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weights_Addr_A_orig = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_Addr_A_orig = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weights_Addr_A_orig = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weights_Addr_A_orig = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weights_Addr_A_orig = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weights_Addr_A_orig = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        weights_Addr_A_orig = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        weights_Addr_A_orig = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_Addr_A_orig = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        weights_Addr_A_orig = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_Addr_A_orig = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        weights_Addr_A_orig = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weights_Addr_A_orig = 64'd2;
    end else begin
        weights_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weights_Addr_B_orig = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weights_Addr_B_orig = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weights_Addr_B_orig = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weights_Addr_B_orig = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_Addr_B_orig = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weights_Addr_B_orig = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weights_Addr_B_orig = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weights_Addr_B_orig = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weights_Addr_B_orig = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        weights_Addr_B_orig = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        weights_Addr_B_orig = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_Addr_B_orig = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        weights_Addr_B_orig = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_Addr_B_orig = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        weights_Addr_B_orig = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weights_Addr_B_orig = 64'd1;
    end else begin
        weights_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        weights_EN_A = 1'b1;
    end else begin
        weights_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        weights_EN_B = 1'b1;
    end else begin
        weights_EN_B = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (out_stream_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if ((~((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_2482_p2 = (icmp_ln1148_fu_2476_p2 & icmp_ln1147_fu_2450_p2);

assign abs_linear_sum_V_fu_2304_p2 = (16'd0 - linear_sum_V_3_fu_2299_p2);

assign add_ln1150_fu_2502_p2 = ($signed(trunc_ln1145_reg_3187) + $signed(16'd65512));

assign add_ln1159_fu_2543_p2 = ($signed(sub_ln1145_reg_3180) + $signed(32'd4294967271));

assign add_ln1170_fu_2632_p2 = (sub_ln1165_fu_2627_p2 + select_ln1144_fu_2620_p3);

assign add_ln859_10_fu_1990_p2 = (reg_1359 + reg_1343);

assign add_ln859_11_fu_1996_p2 = (reg_1347 + reg_1339);

assign add_ln859_12_fu_2002_p2 = (add_ln859_11_fu_1996_p2 + add_ln859_10_fu_1990_p2);

assign add_ln859_13_fu_2104_p2 = (add_ln859_12_reg_3040 + add_ln859_9_fu_2100_p2);

assign add_ln859_14_fu_2295_p2 = (add_ln859_13_reg_3075 + add_ln859_6_reg_3110);

assign add_ln859_15_fu_1471_p2 = (reg_1335 + reg_1339);

assign add_ln859_16_fu_1477_p2 = (reg_1347 + reg_1343);

assign add_ln859_17_fu_1483_p2 = (add_ln859_16_fu_1477_p2 + add_ln859_15_fu_1471_p2);

assign add_ln859_18_fu_1627_p2 = (reg_1355 + reg_1351);

assign add_ln859_19_fu_1633_p2 = (reg_1363 + reg_1359);

assign add_ln859_1_fu_2217_p2 = (reg_1343 + reg_1367);

assign add_ln859_20_fu_1639_p2 = (add_ln859_19_fu_1633_p2 + add_ln859_18_fu_1627_p2);

assign add_ln859_21_fu_2286_p2 = (add_ln859_20_reg_2850 + add_ln859_17_reg_2805);

assign add_ln859_22_fu_1691_p2 = (reg_1371 + reg_1367);

assign add_ln859_23_fu_1720_p2 = (reg_1371 + reg_1347);

assign add_ln859_24_fu_2277_p2 = (add_ln859_23_reg_2885 + add_ln859_22_reg_2870);

assign add_ln859_25_fu_2266_p2 = (reg_1355 + reg_1363);

assign add_ln859_26_fu_2255_p2 = (reg_1351 + partial_sums_V_31_reg_3100);

assign add_ln859_27_fu_2260_p2 = (add_ln859_26_fu_2255_p2 + reg_1371);

assign add_ln859_28_fu_2272_p2 = (add_ln859_27_reg_3115 + add_ln859_25_fu_2266_p2);

assign add_ln859_29_fu_2281_p2 = (add_ln859_28_reg_3120 + add_ln859_24_fu_2277_p2);

assign add_ln859_2_fu_2245_p2 = (add_ln859_1_reg_3105 + add_ln859_fu_2239_p2);

assign add_ln859_30_fu_2290_p2 = (add_ln859_29_reg_3125 + add_ln859_21_fu_2286_p2);

assign add_ln859_3_fu_2155_p2 = (partial_sums_V_25_reg_3055 + reg_1335);

assign add_ln859_4_fu_2160_p2 = (partial_sums_V_27_reg_3060 + reg_1359);

assign add_ln859_5_fu_2165_p2 = (add_ln859_4_fu_2160_p2 + add_ln859_3_fu_2155_p2);

assign add_ln859_6_fu_2250_p2 = (add_ln859_5_reg_3095 + add_ln859_2_fu_2245_p2);

assign add_ln859_7_fu_1818_p2 = (reg_1367 + reg_1351);

assign add_ln859_8_fu_1847_p2 = (reg_1335 + reg_1339);

assign add_ln859_9_fu_2100_p2 = (add_ln859_8_reg_2985 + add_ln859_7_reg_2945);

assign add_ln859_fu_2239_p2 = (partial_sums_V_30_fu_2223_p4 + linear_sum_V_fu_2233_p2);

assign and_ln1150_fu_2514_p2 = (xor_ln1150_fu_2496_p2 & p_Result_3_fu_2507_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state58 = ((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1));
end

assign empty_90_fu_2680_p2 = (grp_fu_1210_p2 & empty_fu_2676_p2);

assign empty_fu_2676_p2 = (notrhs_reg_3237 | notlhs_reg_3232);

assign grp_fu_1210_p0 = trunc_ln809_reg_3227;

assign grp_fu_2344_p0 = {{linear_sum_V_3_reg_3135}, {8'd0}};

assign icmp_ln1136_fu_2359_p2 = ((probability_V_fu_2353_p2 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1147_fu_2450_p2 = (($signed(tmp_3_fu_2440_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1148_fu_2476_p2 = ((p_Result_4_fu_2471_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1159_fu_2534_p2 = (($signed(lsb_index_fu_2435_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (sext_ln1244_fu_2405_p1) begin
    if (sext_ln1244_fu_2405_p1[0] == 1'b1) begin
        l_fu_2409_p3 = 32'd0;
    end else if (sext_ln1244_fu_2405_p1[1] == 1'b1) begin
        l_fu_2409_p3 = 32'd1;
    end else if (sext_ln1244_fu_2405_p1[2] == 1'b1) begin
        l_fu_2409_p3 = 32'd2;
    end else if (sext_ln1244_fu_2405_p1[3] == 1'b1) begin
        l_fu_2409_p3 = 32'd3;
    end else if (sext_ln1244_fu_2405_p1[4] == 1'b1) begin
        l_fu_2409_p3 = 32'd4;
    end else if (sext_ln1244_fu_2405_p1[5] == 1'b1) begin
        l_fu_2409_p3 = 32'd5;
    end else if (sext_ln1244_fu_2405_p1[6] == 1'b1) begin
        l_fu_2409_p3 = 32'd6;
    end else if (sext_ln1244_fu_2405_p1[7] == 1'b1) begin
        l_fu_2409_p3 = 32'd7;
    end else if (sext_ln1244_fu_2405_p1[8] == 1'b1) begin
        l_fu_2409_p3 = 32'd8;
    end else if (sext_ln1244_fu_2405_p1[9] == 1'b1) begin
        l_fu_2409_p3 = 32'd9;
    end else if (sext_ln1244_fu_2405_p1[10] == 1'b1) begin
        l_fu_2409_p3 = 32'd10;
    end else if (sext_ln1244_fu_2405_p1[11] == 1'b1) begin
        l_fu_2409_p3 = 32'd11;
    end else if (sext_ln1244_fu_2405_p1[12] == 1'b1) begin
        l_fu_2409_p3 = 32'd12;
    end else if (sext_ln1244_fu_2405_p1[13] == 1'b1) begin
        l_fu_2409_p3 = 32'd13;
    end else if (sext_ln1244_fu_2405_p1[14] == 1'b1) begin
        l_fu_2409_p3 = 32'd14;
    end else if (sext_ln1244_fu_2405_p1[15] == 1'b1) begin
        l_fu_2409_p3 = 32'd15;
    end else if (sext_ln1244_fu_2405_p1[16] == 1'b1) begin
        l_fu_2409_p3 = 32'd16;
    end else if (sext_ln1244_fu_2405_p1[17] == 1'b1) begin
        l_fu_2409_p3 = 32'd17;
    end else if (sext_ln1244_fu_2405_p1[18] == 1'b1) begin
        l_fu_2409_p3 = 32'd18;
    end else if (sext_ln1244_fu_2405_p1[19] == 1'b1) begin
        l_fu_2409_p3 = 32'd19;
    end else if (sext_ln1244_fu_2405_p1[20] == 1'b1) begin
        l_fu_2409_p3 = 32'd20;
    end else if (sext_ln1244_fu_2405_p1[21] == 1'b1) begin
        l_fu_2409_p3 = 32'd21;
    end else if (sext_ln1244_fu_2405_p1[22] == 1'b1) begin
        l_fu_2409_p3 = 32'd22;
    end else if (sext_ln1244_fu_2405_p1[23] == 1'b1) begin
        l_fu_2409_p3 = 32'd23;
    end else if (sext_ln1244_fu_2405_p1[24] == 1'b1) begin
        l_fu_2409_p3 = 32'd24;
    end else if (sext_ln1244_fu_2405_p1[25] == 1'b1) begin
        l_fu_2409_p3 = 32'd25;
    end else if (sext_ln1244_fu_2405_p1[26] == 1'b1) begin
        l_fu_2409_p3 = 32'd26;
    end else if (sext_ln1244_fu_2405_p1[27] == 1'b1) begin
        l_fu_2409_p3 = 32'd27;
    end else if (sext_ln1244_fu_2405_p1[28] == 1'b1) begin
        l_fu_2409_p3 = 32'd28;
    end else if (sext_ln1244_fu_2405_p1[29] == 1'b1) begin
        l_fu_2409_p3 = 32'd29;
    end else if (sext_ln1244_fu_2405_p1[30] == 1'b1) begin
        l_fu_2409_p3 = 32'd30;
    end else if (sext_ln1244_fu_2405_p1[31] == 1'b1) begin
        l_fu_2409_p3 = 32'd31;
    end else begin
        l_fu_2409_p3 = 32'd32;
    end
end

assign linear_sum_V_3_fu_2299_p2 = (add_ln859_30_reg_3130 + add_ln859_14_fu_2295_p2);

assign linear_sum_V_4_fu_2317_p3 = ((tmp_1_fu_2310_p3[0:0] == 1'b1) ? abs_linear_sum_V_reg_3142 : linear_sum_V_3_reg_3135);

assign linear_sum_V_fu_2233_p2 = reg_1315 << 16'd8;

assign lsb_index_fu_2435_p2 = ($signed(sub_ln1145_reg_3180) + $signed(32'd4294967272));

assign lshr_ln1148_fu_2465_p2 = 16'd65535 >> zext_ln1148_fu_2461_p1;

assign lshr_ln1159_fu_2552_p2 = zext_ln1158_fu_2540_p1 >> zext_ln1159_fu_2548_p1;

assign m_2_fu_2573_p3 = ((icmp_ln1159_reg_3207[0:0] == 1'b1) ? lshr_ln1159_fu_2552_p2 : shl_ln1160_fu_2567_p2);

assign m_3_fu_2583_p2 = (m_2_fu_2573_p3 + zext_ln1162_fu_2580_p1);

assign notlhs_fu_2661_p2 = ((add_ln1170_fu_2632_p2 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs_fu_2667_p2 = ((tmp_s_reg_3222 == 23'd0) ? 1'b1 : 1'b0);

assign or_ln1136_fu_2693_p2 = (icmp_ln1136_reg_3162 | empty_90_fu_2680_p2);

assign or_ln1150_fu_2520_p2 = (and_ln1150_fu_2514_p2 | a_fu_2482_p2);

assign or_ln_i_fu_2526_p3 = {{1'd0}, {or_ln1150_fu_2520_p2}};

assign out_stream_TDATA_int_regslice = $unsigned(sext_ln60_fu_2706_p1);

assign out_stream_TVALID = regslice_both_out_stream_V_data_V_U_vld_out;

assign output_pkt_data_V_fu_2698_p3 = ((or_ln1136_fu_2693_p2[0:0] == 1'b1) ? select_ln1136_fu_2686_p3 : 24'd0);

assign p_Result_3_fu_2507_p3 = tmp_V_35_reg_3173[add_ln1150_fu_2502_p2];

assign p_Result_4_fu_2471_p2 = (tmp_V_35_reg_3173 & lshr_ln1148_fu_2465_p2);

assign p_Result_7_fu_2365_p3 = probability_V_fu_2353_p2[32'd15];

assign p_Result_8_fu_2397_p3 = {{1'd1}, {p_Result_s_fu_2387_p4}};

assign p_Result_9_fu_2645_p5 = {{zext_ln1163_fu_2617_p1[63:32]}, {tmp_1_i_fu_2638_p3}, {zext_ln1163_fu_2617_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_35_fu_2379_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_s_fu_2387_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_2387_p4[ap_tvar_int_0] = tmp_V_35_fu_2379_p3[15 - ap_tvar_int_0];
        end
    end
end

assign partial_sums_V_30_fu_2223_p4 = {{mul_ln1316_30_reg_1082[23:8]}};

assign probability_V_fu_2353_p2 = (trunc_ln859_fu_2350_p1 + 16'd128);

assign r_V_10_fu_1645_p2 = reg_1315 << 16'd8;

assign r_V_11_fu_1668_p2 = reg_1320 << 16'd8;

assign r_V_12_fu_1824_p2 = reg_1315 << 16'd8;

assign r_V_13_fu_1697_p2 = reg_1320 << 16'd8;

assign r_V_14_fu_1944_p2 = reg_1320 << 16'd8;

assign r_V_15_fu_1967_p2 = reg_1325 << 16'd8;

assign r_V_16_fu_1726_p2 = reg_1330 << 16'd8;

assign r_V_17_fu_1749_p2 = reg_1375 << 16'd8;

assign r_V_18_fu_1772_p2 = reg_1330 << 16'd8;

assign r_V_19_fu_1795_p2 = reg_1375 << 16'd8;

assign r_V_1_fu_1402_p2 = reg_1320 << 16'd8;

assign r_V_20_fu_1853_p2 = reg_1330 << 16'd8;

assign r_V_21_fu_1876_p2 = reg_1375 << 16'd8;

assign r_V_22_fu_1899_p2 = reg_1315 << 16'd8;

assign r_V_23_fu_1922_p2 = tmp_V_23_reg_2970 << 16'd8;

assign r_V_24_fu_2008_p2 = reg_1315 << 16'd8;

assign r_V_25_fu_2031_p2 = reg_1330 << 16'd8;

assign r_V_26_fu_2054_p2 = reg_1320 << 16'd8;

assign r_V_27_fu_2077_p2 = reg_1325 << 16'd8;

assign r_V_28_fu_2109_p2 = reg_1315 << 16'd8;

assign r_V_29_fu_2132_p2 = reg_1320 << 16'd8;

assign r_V_2_fu_1425_p2 = reg_1325 << 16'd8;

assign r_V_30_fu_2171_p2 = reg_1315 << 16'd8;

assign r_V_31_fu_2194_p2 = reg_1320 << 16'd8;

assign r_V_3_fu_1448_p2 = reg_1330 << 16'd8;

assign r_V_4_fu_1489_p2 = reg_1315 << 16'd8;

assign r_V_5_fu_1512_p2 = reg_1320 << 16'd8;

assign r_V_6_fu_1535_p2 = reg_1325 << 16'd8;

assign r_V_7_fu_1558_p2 = reg_1330 << 16'd8;

assign r_V_8_fu_1581_p2 = reg_1315 << 16'd8;

assign r_V_9_fu_1604_p2 = reg_1320 << 16'd8;

assign r_V_fu_1379_p2 = reg_1315 << 16'd8;

assign ret_V_fu_2327_p2 = ($signed(sext_ln859_fu_2323_p1) + $signed(17'd1024));

assign select_ln1136_fu_2686_p3 = ((icmp_ln1136_reg_3162[0:0] == 1'b1) ? 24'd0 : 24'd8388608);

assign select_ln1144_fu_2620_p3 = ((p_Result_5_reg_3217[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1244_fu_2405_p1 = $signed(p_Result_8_fu_2397_p3);

assign sext_ln1316_10_fu_1518_p1 = $signed(r_V_5_fu_1512_p2);

assign sext_ln1316_11_fu_1530_p1 = $signed(shl_ln884_5_fu_1523_p3);

assign sext_ln1316_12_fu_1541_p1 = $signed(r_V_6_fu_1535_p2);

assign sext_ln1316_13_fu_1553_p1 = $signed(shl_ln884_6_fu_1546_p3);

assign sext_ln1316_14_fu_1564_p1 = $signed(r_V_7_fu_1558_p2);

assign sext_ln1316_15_fu_1576_p1 = $signed(shl_ln884_7_fu_1569_p3);

assign sext_ln1316_16_fu_1587_p1 = $signed(r_V_8_fu_1581_p2);

assign sext_ln1316_17_fu_1599_p1 = $signed(shl_ln884_8_fu_1592_p3);

assign sext_ln1316_18_fu_1610_p1 = $signed(r_V_9_fu_1604_p2);

assign sext_ln1316_19_fu_1622_p1 = $signed(shl_ln884_9_fu_1615_p3);

assign sext_ln1316_1_fu_1397_p1 = $signed(shl_ln_fu_1390_p3);

assign sext_ln1316_20_fu_1651_p1 = $signed(r_V_10_fu_1645_p2);

assign sext_ln1316_21_fu_1663_p1 = $signed(shl_ln884_s_fu_1656_p3);

assign sext_ln1316_22_fu_1674_p1 = $signed(r_V_11_fu_1668_p2);

assign sext_ln1316_23_fu_1686_p1 = $signed(shl_ln884_10_fu_1679_p3);

assign sext_ln1316_24_fu_1830_p1 = $signed(r_V_12_fu_1824_p2);

assign sext_ln1316_25_fu_1842_p1 = $signed(shl_ln884_11_fu_1835_p3);

assign sext_ln1316_26_fu_1703_p1 = $signed(r_V_13_fu_1697_p2);

assign sext_ln1316_27_fu_1715_p1 = $signed(shl_ln884_12_fu_1708_p3);

assign sext_ln1316_28_fu_1950_p1 = $signed(r_V_14_fu_1944_p2);

assign sext_ln1316_29_fu_1962_p1 = $signed(shl_ln884_13_fu_1955_p3);

assign sext_ln1316_2_fu_1408_p1 = $signed(r_V_1_fu_1402_p2);

assign sext_ln1316_30_fu_1973_p1 = $signed(r_V_15_fu_1967_p2);

assign sext_ln1316_31_fu_1985_p1 = $signed(shl_ln884_14_fu_1978_p3);

assign sext_ln1316_32_fu_1732_p1 = $signed(r_V_16_fu_1726_p2);

assign sext_ln1316_33_fu_1744_p1 = $signed(shl_ln884_15_fu_1737_p3);

assign sext_ln1316_34_fu_1755_p1 = $signed(r_V_17_fu_1749_p2);

assign sext_ln1316_35_fu_1767_p1 = $signed(shl_ln884_16_fu_1760_p3);

assign sext_ln1316_36_fu_1778_p1 = $signed(r_V_18_fu_1772_p2);

assign sext_ln1316_37_fu_1790_p1 = $signed(shl_ln884_17_fu_1783_p3);

assign sext_ln1316_38_fu_1801_p1 = $signed(r_V_19_fu_1795_p2);

assign sext_ln1316_39_fu_1813_p1 = $signed(shl_ln884_18_fu_1806_p3);

assign sext_ln1316_3_fu_1420_p1 = $signed(shl_ln884_1_fu_1413_p3);

assign sext_ln1316_40_fu_1859_p1 = $signed(r_V_20_fu_1853_p2);

assign sext_ln1316_41_fu_1871_p1 = $signed(shl_ln884_19_fu_1864_p3);

assign sext_ln1316_42_fu_1882_p1 = $signed(r_V_21_fu_1876_p2);

assign sext_ln1316_43_fu_1894_p1 = $signed(shl_ln884_20_fu_1887_p3);

assign sext_ln1316_44_fu_1905_p1 = $signed(r_V_22_fu_1899_p2);

assign sext_ln1316_45_fu_1917_p1 = $signed(shl_ln884_21_fu_1910_p3);

assign sext_ln1316_46_fu_1927_p1 = $signed(r_V_23_fu_1922_p2);

assign sext_ln1316_47_fu_1939_p1 = $signed(shl_ln884_22_fu_1932_p3);

assign sext_ln1316_48_fu_2014_p1 = $signed(r_V_24_fu_2008_p2);

assign sext_ln1316_49_fu_2026_p1 = $signed(shl_ln884_23_fu_2019_p3);

assign sext_ln1316_4_fu_1431_p1 = $signed(r_V_2_fu_1425_p2);

assign sext_ln1316_50_fu_2037_p1 = $signed(r_V_25_fu_2031_p2);

assign sext_ln1316_51_fu_2049_p1 = $signed(shl_ln884_24_fu_2042_p3);

assign sext_ln1316_52_fu_2060_p1 = $signed(r_V_26_fu_2054_p2);

assign sext_ln1316_53_fu_2072_p1 = $signed(shl_ln884_25_fu_2065_p3);

assign sext_ln1316_54_fu_2083_p1 = $signed(r_V_27_fu_2077_p2);

assign sext_ln1316_55_fu_2095_p1 = $signed(shl_ln884_26_fu_2088_p3);

assign sext_ln1316_56_fu_2115_p1 = $signed(r_V_28_fu_2109_p2);

assign sext_ln1316_57_fu_2127_p1 = $signed(shl_ln884_27_fu_2120_p3);

assign sext_ln1316_58_fu_2138_p1 = $signed(r_V_29_fu_2132_p2);

assign sext_ln1316_59_fu_2150_p1 = $signed(shl_ln884_28_fu_2143_p3);

assign sext_ln1316_5_fu_1443_p1 = $signed(shl_ln884_2_fu_1436_p3);

assign sext_ln1316_60_fu_2177_p1 = $signed(r_V_30_fu_2171_p2);

assign sext_ln1316_61_fu_2189_p1 = $signed(shl_ln884_29_fu_2182_p3);

assign sext_ln1316_62_fu_2200_p1 = $signed(r_V_31_fu_2194_p2);

assign sext_ln1316_63_fu_2212_p1 = $signed(shl_ln884_30_fu_2205_p3);

assign sext_ln1316_6_fu_1454_p1 = $signed(r_V_3_fu_1448_p2);

assign sext_ln1316_7_fu_1466_p1 = $signed(shl_ln884_3_fu_1459_p3);

assign sext_ln1316_8_fu_1495_p1 = $signed(r_V_4_fu_1489_p2);

assign sext_ln1316_9_fu_1507_p1 = $signed(shl_ln884_4_fu_1500_p3);

assign sext_ln1316_fu_1385_p1 = $signed(r_V_fu_1379_p2);

assign sext_ln60_fu_2706_p1 = $signed(output_pkt_data_V_fu_2698_p3);

assign sext_ln859_fu_2323_p1 = $signed(linear_sum_V_4_fu_2317_p3);

assign shl_ln1160_fu_2567_p2 = zext_ln1158_fu_2540_p1 << zext_ln1160_fu_2563_p1;

assign shl_ln884_10_fu_1679_p3 = {{p_read11}, {8'd0}};

assign shl_ln884_11_fu_1835_p3 = {{p_read12}, {8'd0}};

assign shl_ln884_12_fu_1708_p3 = {{p_read13}, {8'd0}};

assign shl_ln884_13_fu_1955_p3 = {{p_read14}, {8'd0}};

assign shl_ln884_14_fu_1978_p3 = {{p_read15}, {8'd0}};

assign shl_ln884_15_fu_1737_p3 = {{p_read16}, {8'd0}};

assign shl_ln884_16_fu_1760_p3 = {{p_read17}, {8'd0}};

assign shl_ln884_17_fu_1783_p3 = {{p_read18}, {8'd0}};

assign shl_ln884_18_fu_1806_p3 = {{p_read19}, {8'd0}};

assign shl_ln884_19_fu_1864_p3 = {{p_read20}, {8'd0}};

assign shl_ln884_1_fu_1413_p3 = {{p_read1}, {8'd0}};

assign shl_ln884_20_fu_1887_p3 = {{p_read21}, {8'd0}};

assign shl_ln884_21_fu_1910_p3 = {{p_read22}, {8'd0}};

assign shl_ln884_22_fu_1932_p3 = {{p_read23}, {8'd0}};

assign shl_ln884_23_fu_2019_p3 = {{p_read24}, {8'd0}};

assign shl_ln884_24_fu_2042_p3 = {{p_read25}, {8'd0}};

assign shl_ln884_25_fu_2065_p3 = {{p_read26}, {8'd0}};

assign shl_ln884_26_fu_2088_p3 = {{p_read27}, {8'd0}};

assign shl_ln884_27_fu_2120_p3 = {{p_read28}, {8'd0}};

assign shl_ln884_28_fu_2143_p3 = {{p_read29}, {8'd0}};

assign shl_ln884_29_fu_2182_p3 = {{p_read30}, {8'd0}};

assign shl_ln884_2_fu_1436_p3 = {{p_read2}, {8'd0}};

assign shl_ln884_30_fu_2205_p3 = {{p_read31}, {8'd0}};

assign shl_ln884_3_fu_1459_p3 = {{p_read3}, {8'd0}};

assign shl_ln884_4_fu_1500_p3 = {{p_read4}, {8'd0}};

assign shl_ln884_5_fu_1523_p3 = {{p_read5}, {8'd0}};

assign shl_ln884_6_fu_1546_p3 = {{p_read6}, {8'd0}};

assign shl_ln884_7_fu_1569_p3 = {{p_read7}, {8'd0}};

assign shl_ln884_8_fu_1592_p3 = {{p_read8}, {8'd0}};

assign shl_ln884_9_fu_1615_p3 = {{p_read9}, {8'd0}};

assign shl_ln884_s_fu_1656_p3 = {{p_read10}, {8'd0}};

assign shl_ln_fu_1390_p3 = {{p_read}, {8'd0}};

assign sub_ln1145_fu_2417_p2 = (32'd16 - l_fu_2409_p3);

assign sub_ln1148_fu_2456_p2 = (5'd9 - trunc_ln1148_reg_3192);

assign sub_ln1160_fu_2558_p2 = (32'd25 - sub_ln1145_reg_3180);

assign sub_ln1165_fu_2627_p2 = (8'd8 - trunc_ln1144_reg_3197);

assign tmp_1_fu_2310_p3 = linear_sum_V_3_reg_3135[32'd15];

assign tmp_1_i_fu_2638_p3 = {{p_Result_7_reg_3168}, {add_ln1170_fu_2632_p2}};

assign tmp_3_fu_2440_p4 = {{lsb_index_fu_2435_p2[31:1]}};

assign tmp_4_fu_2488_p3 = lsb_index_fu_2435_p2[32'd31];

assign tmp_V_33_fu_2373_p2 = ($signed(16'd65408) - $signed(trunc_ln859_fu_2350_p1));

assign tmp_V_35_fu_2379_p3 = ((p_Result_7_fu_2365_p3[0:0] == 1'b1) ? tmp_V_33_fu_2373_p2 : probability_V_fu_2353_p2);

assign trunc_ln1144_fu_2431_p1 = l_fu_2409_p3[7:0];

assign trunc_ln1145_fu_2423_p1 = sub_ln1145_fu_2417_p2[15:0];

assign trunc_ln1148_fu_2427_p1 = sub_ln1145_fu_2417_p2[4:0];

assign trunc_ln809_fu_2657_p1 = p_Result_9_fu_2645_p5[31:0];

assign trunc_ln859_fu_2350_p1 = sdiv_ln1349_reg_3157[15:0];

assign weights_Addr_A = weights_Addr_A_orig << 32'd1;

assign weights_Addr_B = weights_Addr_B_orig << 32'd1;

assign weights_Din_A = 16'd0;

assign weights_Din_B = 16'd0;

assign weights_WEN_A = 2'd0;

assign weights_WEN_B = 2'd0;

assign xor_ln1150_fu_2496_p2 = (tmp_4_fu_2488_p3 ^ 1'd1);

assign zext_ln1148_fu_2461_p1 = sub_ln1148_fu_2456_p2;

assign zext_ln1158_fu_2540_p1 = tmp_V_35_reg_3173;

assign zext_ln1159_fu_2548_p1 = add_ln1159_fu_2543_p2;

assign zext_ln1160_fu_2563_p1 = sub_ln1160_fu_2558_p2;

assign zext_ln1162_fu_2580_p1 = or_ln_i_reg_3202;

assign zext_ln1163_fu_2617_p1 = m_4_reg_3212;

always @ (posedge ap_clk) begin
    or_ln_i_reg_3202[1] <= 1'b0;
end

endmodule //logistic_regression_Block_logistic_regression_for_cond_i_exit_proc
