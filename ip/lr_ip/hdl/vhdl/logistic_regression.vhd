-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity logistic_regression is
port (
    in_stream_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC );
end;


architecture behav of logistic_regression is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "logistic_regression_logistic_regression,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu5eg-sfvc784-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.171545,HLS_SYN_LAT=12,HLS_SYN_TPT=13,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=769,HLS_SYN_LUT=3152,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_entry35_proc2_U0_ap_start : STD_LOGIC;
    signal Block_entry35_proc2_U0_ap_done : STD_LOGIC;
    signal Block_entry35_proc2_U0_ap_continue : STD_LOGIC;
    signal Block_entry35_proc2_U0_ap_idle : STD_LOGIC;
    signal Block_entry35_proc2_U0_ap_ready : STD_LOGIC;
    signal Block_entry35_proc2_U0_in_stream_TREADY : STD_LOGIC;
    signal Block_entry35_proc2_U0_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal decision_V_9_loc_channel_full_n : STD_LOGIC;
    signal sigmoid_U0_ap_start : STD_LOGIC;
    signal sigmoid_U0_ap_done : STD_LOGIC;
    signal sigmoid_U0_ap_continue : STD_LOGIC;
    signal sigmoid_U0_ap_idle : STD_LOGIC;
    signal sigmoid_U0_ap_ready : STD_LOGIC;
    signal sigmoid_U0_ap_return : STD_LOGIC_VECTOR (25 downto 0);
    signal op_V_channel_full_n : STD_LOGIC;
    signal Block_entry3537_proc3_U0_ap_start : STD_LOGIC;
    signal Block_entry3537_proc3_U0_ap_done : STD_LOGIC;
    signal Block_entry3537_proc3_U0_ap_continue : STD_LOGIC;
    signal Block_entry3537_proc3_U0_ap_idle : STD_LOGIC;
    signal Block_entry3537_proc3_U0_ap_ready : STD_LOGIC;
    signal Block_entry3537_proc3_U0_out_stream_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_entry3537_proc3_U0_out_stream_TVALID : STD_LOGIC;
    signal Block_entry3537_proc3_U0_out_stream_TKEEP : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry3537_proc3_U0_out_stream_TSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry3537_proc3_U0_out_stream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal decision_V_9_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal decision_V_9_loc_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal decision_V_9_loc_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal decision_V_9_loc_channel_empty_n : STD_LOGIC;
    signal op_V_channel_dout : STD_LOGIC_VECTOR (25 downto 0);
    signal op_V_channel_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal op_V_channel_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal op_V_channel_empty_n : STD_LOGIC;

    component logistic_regression_Block_entry35_proc2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        in_stream_TVALID : IN STD_LOGIC;
        in_stream_TREADY : OUT STD_LOGIC;
        in_stream_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
        in_stream_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component logistic_regression_sigmoid IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component logistic_regression_Block_entry3537_proc3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (25 downto 0);
        out_stream_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_stream_TVALID : OUT STD_LOGIC;
        out_stream_TREADY : IN STD_LOGIC;
        out_stream_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
        out_stream_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component logistic_regression_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component logistic_regression_fifo_w26_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (25 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (25 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Block_entry35_proc2_U0 : component logistic_regression_Block_entry35_proc2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_entry35_proc2_U0_ap_start,
        ap_done => Block_entry35_proc2_U0_ap_done,
        ap_continue => Block_entry35_proc2_U0_ap_continue,
        ap_idle => Block_entry35_proc2_U0_ap_idle,
        ap_ready => Block_entry35_proc2_U0_ap_ready,
        in_stream_TDATA => in_stream_TDATA,
        in_stream_TVALID => in_stream_TVALID,
        in_stream_TREADY => Block_entry35_proc2_U0_in_stream_TREADY,
        in_stream_TKEEP => in_stream_TKEEP,
        in_stream_TSTRB => in_stream_TSTRB,
        in_stream_TLAST => in_stream_TLAST,
        ap_return => Block_entry35_proc2_U0_ap_return);

    sigmoid_U0 : component logistic_regression_sigmoid
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => sigmoid_U0_ap_start,
        ap_done => sigmoid_U0_ap_done,
        ap_continue => sigmoid_U0_ap_continue,
        ap_idle => sigmoid_U0_ap_idle,
        ap_ready => sigmoid_U0_ap_ready,
        p_read1 => decision_V_9_loc_channel_dout,
        ap_return => sigmoid_U0_ap_return);

    Block_entry3537_proc3_U0 : component logistic_regression_Block_entry3537_proc3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_entry3537_proc3_U0_ap_start,
        ap_done => Block_entry3537_proc3_U0_ap_done,
        ap_continue => Block_entry3537_proc3_U0_ap_continue,
        ap_idle => Block_entry3537_proc3_U0_ap_idle,
        ap_ready => Block_entry3537_proc3_U0_ap_ready,
        p_read => op_V_channel_dout,
        out_stream_TDATA => Block_entry3537_proc3_U0_out_stream_TDATA,
        out_stream_TVALID => Block_entry3537_proc3_U0_out_stream_TVALID,
        out_stream_TREADY => out_stream_TREADY,
        out_stream_TKEEP => Block_entry3537_proc3_U0_out_stream_TKEEP,
        out_stream_TSTRB => Block_entry3537_proc3_U0_out_stream_TSTRB,
        out_stream_TLAST => Block_entry3537_proc3_U0_out_stream_TLAST);

    decision_V_9_loc_channel_U : component logistic_regression_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry35_proc2_U0_ap_return,
        if_full_n => decision_V_9_loc_channel_full_n,
        if_write => Block_entry35_proc2_U0_ap_done,
        if_dout => decision_V_9_loc_channel_dout,
        if_num_data_valid => decision_V_9_loc_channel_num_data_valid,
        if_fifo_cap => decision_V_9_loc_channel_fifo_cap,
        if_empty_n => decision_V_9_loc_channel_empty_n,
        if_read => sigmoid_U0_ap_ready);

    op_V_channel_U : component logistic_regression_fifo_w26_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => sigmoid_U0_ap_return,
        if_full_n => op_V_channel_full_n,
        if_write => sigmoid_U0_ap_done,
        if_dout => op_V_channel_dout,
        if_num_data_valid => op_V_channel_num_data_valid,
        if_fifo_cap => op_V_channel_fifo_cap,
        if_empty_n => op_V_channel_empty_n,
        if_read => Block_entry3537_proc3_U0_ap_ready);




    Block_entry3537_proc3_U0_ap_continue <= ap_const_logic_1;
    Block_entry3537_proc3_U0_ap_start <= op_V_channel_empty_n;
    Block_entry35_proc2_U0_ap_continue <= decision_V_9_loc_channel_full_n;
    Block_entry35_proc2_U0_ap_start <= ap_const_logic_1;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    in_stream_TREADY <= Block_entry35_proc2_U0_in_stream_TREADY;
    out_stream_TDATA <= Block_entry3537_proc3_U0_out_stream_TDATA;
    out_stream_TKEEP <= Block_entry3537_proc3_U0_out_stream_TKEEP;
    out_stream_TLAST <= Block_entry3537_proc3_U0_out_stream_TLAST;
    out_stream_TSTRB <= Block_entry3537_proc3_U0_out_stream_TSTRB;
    out_stream_TVALID <= Block_entry3537_proc3_U0_out_stream_TVALID;
    sigmoid_U0_ap_continue <= op_V_channel_full_n;
    sigmoid_U0_ap_start <= decision_V_9_loc_channel_empty_n;
end behav;
